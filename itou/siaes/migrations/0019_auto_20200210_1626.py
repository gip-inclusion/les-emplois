# Generated by Django 2.2.9 on 2020-02-10 15:26
import csv
import os

from django.conf import settings
from django.db import migrations

from itou.siaes.enums import SiaeKind
from itou.siaes.models import Siae


CURRENT_DIR = os.path.dirname(os.path.realpath(__file__))

ASP_CSV_FILE = f"{settings.APPS_DIR}/siaes/management/commands/data/2019_07_liste_siae.csv"
GEIQ_CSV_FILE = f"{settings.APPS_DIR}/siaes/management/commands/data/2019_11_21_export_bbd_geiq.csv"


def get_siret_kind_to_email_map():
    siret_kind_to_email_map = {}

    with open(ASP_CSV_FILE) as csvfile:
        reader = csv.reader(csvfile, delimiter=";")
        for i, row in enumerate(reader):
            if i == 0:  # Skip CSV header.
                continue
            siret = row[7]
            assert len(siret) == 14
            kind = row[0]
            assert kind in SiaeKind.values
            email = row[14].strip()
            assert " " not in email
            key = (siret, kind)
            if key in siret_kind_to_email_map:
                assert siret_kind_to_email_map[key] == email
            else:
                siret_kind_to_email_map[key] = email

    with open(GEIQ_CSV_FILE) as csvfile:
        reader = csv.reader(csvfile, delimiter=";")
        for i, row in enumerate(reader):
            if i == 0:  # Skip CSV header.
                continue
            siret = row[8].strip()
            assert len(siret) == 14
            kind = SiaeKind.GEIQ
            email = row[5].strip()
            assert " " not in email
            key = (siret, kind)
            if key in siret_kind_to_email_map:
                assert siret_kind_to_email_map[key] == email
            else:
                siret_kind_to_email_map[key] = email

    return siret_kind_to_email_map


# SIRET_KIND_TO_EMAIL_MAP = get_siret_kind_to_email_map()
SIRET_KIND_TO_EMAIL_MAP = {}


def populate_siae_auth_email(apps, schema_editor):
    for siae in Siae.objects.all():
        key = (siae.siret, siae.kind)
        if key in SIRET_KIND_TO_EMAIL_MAP:
            siae.auth_email = SIRET_KIND_TO_EMAIL_MAP[key]
            siae.save()
        if not siae.has_members and not siae.auth_email:
            msg = (
                f"Signup impossible for siae siret={siae.siret} "
                f"kind={siae.kind} source={siae.source} "
                f"created_by={siae.created_by} siae_email={siae.email}"
            )
            print(msg)


class Migration(migrations.Migration):

    dependencies = [("siaes", "0018_siae_external_id")]

    # Forward migration was deactivated on purpose following
    # the deletion of CSV files whith sensitive data.
    operations = [migrations.RunPython(migrations.RunPython.noop, migrations.RunPython.noop)]
