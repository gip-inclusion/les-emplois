# Generated by Django 5.0.3 on 2024-03-22 09:45

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Rome",
            fields=[
                ("code", models.CharField(max_length=5, primary_key=True, serialize=False, verbose_name="code ROME")),
                ("name", models.CharField(db_index=True, max_length=255, verbose_name="nom")),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "ROME",
                "verbose_name_plural": "ROME",
            },
        ),
        migrations.CreateModel(
            name="Appellation",
            fields=[
                ("code", models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name="code")),
                ("name", models.CharField(db_index=True, max_length=255, verbose_name="nom")),
                ("full_text", django.contrib.postgres.search.SearchVectorField(null=True)),
                (
                    "rome",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appellations",
                        to="jobs.rome",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "appellation",
                "ordering": ["name"],
                "indexes": [
                    django.contrib.postgres.indexes.GinIndex(
                        fields=["full_text"], name="jobs_appell_full_te_e6b6af_gin"
                    )
                ],
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="appellation",
            trigger=pgtrigger.compiler.Trigger(
                name="jobs_appellation_full_text_trigger",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    execute='tsvector_update_trigger("full_text", "public.french_unaccent", "name", "rome_id")',
                    func="",
                    hash="b06f63ec0910f1c669dca88dcfa3f3ec69c23af5",
                    operation='INSERT OR UPDATE OF "name", "rome_id"',
                    pgid="pgtrigger_jobs_appellation_full_text_trigger_de796",
                    table="jobs_appellation",
                    when="BEFORE",
                ),
            ),
        ),
    ]
