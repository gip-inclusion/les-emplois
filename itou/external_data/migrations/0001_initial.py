# Generated by Django 5.0.3 on 2024-03-22 09:34

import django.contrib.postgres.fields.citext
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ExternalDataImport",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("OK", "Import de données réalisé sans erreur"),
                            ("PARTIAL", "Import de données réalisé partiellement"),
                            ("PENDING", "Import de données en cours"),
                            ("FAILED", "Import de données en erreur"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(default=django.utils.timezone.now, verbose_name="date de création"),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[("PE_CONNECT", "API PE Connect"), ("UNKNOWN", "Autre")],
                        default="UNKNOWN",
                        max_length=20,
                        verbose_name="origine des données",
                    ),
                ),
                ("report", models.JSONField(default=dict, verbose_name="rapport technique")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "import de données externes",
                "verbose_name_plural": "imports de données externes",
                "unique_together": {("user", "source")},
            },
        ),
        migrations.CreateModel(
            name="JobSeekerExternalData",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(default=django.utils.timezone.now, verbose_name="date de création"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="demandeur d'emploi",
                    ),
                ),
                (
                    "is_pe_jobseeker",
                    models.BooleanField(
                        null=True, verbose_name="l'utilisateur est inscrit comme demandeur d'emploi PE"
                    ),
                ),
                (
                    "has_minimal_social_allowance",
                    models.BooleanField(
                        null=True, verbose_name="l'utilisateur dispose d'une prestation de minima sociaux"
                    ),
                ),
                (
                    "data_import",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="external_data.externaldataimport"
                    ),
                ),
            ],
            options={
                "verbose_name": "données externes pour un chercheur d'emploi",
                "verbose_name_plural": "données externes pour un chercheur d'emploi",
            },
        ),
        migrations.CreateModel(
            name="RejectedEmailEventData",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created_at",
                    models.DateTimeField(default=django.utils.timezone.now, verbose_name="date de création"),
                ),
                (
                    "recipient",
                    django.contrib.postgres.fields.citext.CIEmailField(
                        blank=True, db_index=True, max_length=254, verbose_name="adresse e-mail du destinataire"
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        choices=[
                            ("invalid", "Adresse du destinataire invalide"),
                            ("bounced", "Adresse préalablement 'bounced' par notre ESP"),
                            ("timed_out", "Trop de tentatives d’envoi en erreur sur ce destinataire"),
                            ("blocked", "La politique de notre ESP interdit ce destinataire"),
                            ("spam", "Le destinataire nous a taggué comme spammeurs"),
                            ("unsubscribed", "Le destinataire ne souhaite plus recevoir ces emails"),
                            ("other", "Non précisé par l’ESP"),
                        ],
                        max_length=12,
                        verbose_name="la raison du refus de l’envoi d’email",
                    ),
                ),
            ],
            options={
                "verbose_name": "donnée collectée par le webhook en cas d’erreur d’envoi d’email",
                "verbose_name_plural": "données collectées par le webhook en cas d’erreur d’envoi d’email",
            },
        ),
    ]
