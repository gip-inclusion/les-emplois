# Generated by Django 5.2.4 on 2025-07-31 14:25

import datetime

from django.db import migrations


def forward(apps, schema_editor):
    BATCH_SIZE = 10_000
    to_update = []
    updated = 0
    JobSeekerProfile = apps.get_model("users", "JobSeekerProfile")
    incoherent_birthdate_jobseeker_profiles = JobSeekerProfile.objects.exclude(birthdate=None).exclude(
        birthdate__year__gte=1925, birthdate__year__lte=2009
    )
    for jobseeker_profile in incoherent_birthdate_jobseeker_profiles.exclude(nir=""):
        if jobseeker_profile.birthdate.strftime("%y%m") != jobseeker_profile.nir[1:5]:
            year = int(jobseeker_profile.nir[1:3])
            year = year + 1900 + (year <= 25) * 100
            month = int(jobseeker_profile.nir[3:5])
            if month != jobseeker_profile.birthdate.month:
                # Don't change anything, if the date is <1925 or >2009 we will set it to None later
                continue
            try:
                jobseeker_profile.birthdate = datetime.date(year, month, jobseeker_profile.birthdate.day)
            except ValueError:
                # day is out of range for month (shouldonly happen on 29 feb)
                print(f"Invalid day of month for jobseeker_profile={jobseeker_profile.pk}")
                continue
            to_update.append(jobseeker_profile)
            if len(to_update) >= BATCH_SIZE:
                updated += JobSeekerProfile.objects.bulk_update(to_update, fields=["birthdate"])
                to_update = []
    updated += JobSeekerProfile.objects.bulk_update(to_update, fields=["birthdate"])

    print(f"updated {updated} JobSeekerProfiles")

    cleaned = incoherent_birthdate_jobseeker_profiles.update(birthdate=None)
    print(f"cleaned {cleaned} JobSeekerProfiles with too old or to recent / future birthdates")


class Migration(migrations.Migration):
    dependencies = [
        ("users", "0037_nirmodificationrequest"),
    ]

    operations = [migrations.RunPython(forward, elidable=True)]
