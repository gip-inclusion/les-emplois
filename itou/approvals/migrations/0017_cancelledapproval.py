# Generated by Django 4.2.5 on 2023-10-03 15:34

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("approvals", "0016_prolongationrequestdenyinformation"),
    ]

    operations = [
        migrations.CreateModel(
            name="CancelledApproval",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "start_at",
                    models.DateField(
                        db_index=True, default=django.utils.timezone.localdate, verbose_name="date de début"
                    ),
                ),
                (
                    "end_at",
                    models.DateField(
                        db_index=True, default=django.utils.timezone.localdate, verbose_name="date de fin"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(default=django.utils.timezone.now, verbose_name="date de création"),
                ),
                (
                    "pe_notification_status",
                    models.CharField(
                        choices=[
                            ("notification_pending", "Pending"),
                            ("notification_ready", "Ready"),
                            ("notification_success", "Success"),
                            ("notification_error", "Error"),
                            ("notification_should_retry", "Should Retry"),
                        ],
                        default="notification_pending",
                        max_length=32,
                        verbose_name="état de la notification à PE",
                    ),
                ),
                (
                    "pe_notification_time",
                    models.DateTimeField(blank=True, null=True, verbose_name="date de notification à PE"),
                ),
                (
                    "pe_notification_endpoint",
                    models.CharField(
                        blank=True,
                        choices=[("rech_individu", "Recherche Individu"), ("maj_pass", "Mise A Jour Pass Iae")],
                        max_length=32,
                        null=True,
                        verbose_name="dernier endpoint de l'API PE contacté",
                    ),
                ),
                (
                    "pe_notification_exit_code",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("S000", "Aucun individu trouvé"),
                            ("S001", "Individu trouvé"),
                            ("S002", "Plusieurs individu trouvés"),
                            ("R010", "NIR Certifié absent"),
                            ("R011", "NIR Certifié incorrect"),
                            ("R020", "Nom de naissance absente"),
                            ("R021", "Nom de naissance incorrect"),
                            ("R030", "Prénom absent"),
                            ("R031", "Prénom incorrect"),
                            ("R040", "Date de naissance absente"),
                            ("R041", "Date de naissance incorrecte"),
                            ("R042", "Date de naissance invalide"),
                            ("S000", "Suivi délégué installé"),
                            ("S001", "SD non installé : Identifiant national individu obligatoire"),
                            ("S002", "SD non installé : Code traitement obligatoire"),
                            ("S003", "SD non installé : Code traitement erroné"),
                            ("S004", "SD non installé : Erreur lors de la recherche de la TDV référente"),
                            ("S005", "SD non installé : Identifiant régional de l’individu obligatoire"),
                            ("S006", "SD non installé : Code Pôle Emploi de l’individu obligatoire"),
                            ("S007", "SD non installé : Individu inexistant en base"),
                            ("S008", "SD non installé : Individu radié"),
                            ("S009", "SD non installé : Inscription incomplète de l’individu "),
                            ("S010", "SD non installé : PEC de l’individu inexistante en base"),
                            ("S011", "SD non installé : Demande d’emploi de l’individu inexistante en base"),
                            ("S012", "SD non installé : Suivi principal de l’individu inexistant en base"),
                            ("S013", "SD non installé : Référent suivi principal non renseigné en base"),
                            ("S014", "SD non installé : Structure suivi principal non renseignée en base"),
                            ("S015", "SD non installé : Suivi délégué déjà en cours"),
                            ("S016", "SD non installé : Problème lors de la recherche du dernier suivi délégué"),
                            ("S017", "SD non installé : Type de suivi de l’individu non EDS»"),
                            ("S018", "SD non installé : Type de SIAE obligatoire"),
                            ("S019", "SD non installé : Type de SIAE erroné"),
                            ("S020", "SD non installé : Statut de la réponse obligatoire"),
                            ("S021", "SD non installé : Statut de la réponse erroné"),
                            ("S022", "SD non installé : Refus du PASS IAE"),
                            ("S023", "SD non installé : Date de début du PASS IAE obligatoire"),
                            ("S024", "SD non installé : Date de début du PASS IAE dans le futur"),
                            ("S025", "SD non installé : Date de fin du PASS IAE obligatoire"),
                            ("S026", "SD non installé : Date fin PASS IAE non strictement sup à date début"),
                            ("S027", "SD non installé : Numéro du PASS IAE obligatoire"),
                            ("S028", "SD non installé : Origine de la candidature obligatoire"),
                            ("S029", "SD non installé : Origine de la candidature erronée"),
                            ("S031", "SD non installé : Numéro SIRET SIAE obligatoire"),
                            ("S032", "SD non installé : Organisme générique inexistant dans réf partenaire"),
                            ("S033", "SD non installé : Conseiller prescripteur inexistant en base"),
                            ("S034", "SD non installé : Structure prescripteur inexistante en base"),
                            ("S035", "SD non installé : Type de structure du prescripteur erroné"),
                            ("S036", "SD non installé : Pas de lien entre structure prescripteur et partenaire"),
                            ("S037", "SD non installé : Organisme générique inexistant en base"),
                            ("S038", "SD non installé : Correspondant du partenaire inexistant en base"),
                            ("S039", "SD non installé : Structure correspondant inexistante en base"),
                            ("S040", "SD non installé : Structure correspondant inexistante dans réf des struct"),
                            ("S041", "SD non installé : Structure de suivi non autorisée"),
                            ("S042", "SD non installé : Adresse du correspondant inexistante en base"),
                            ("S043", "SD non installé : Commune du correspondant inexistante en base"),
                            ("E_ERR_D98_D_PR_PROBLEME_TECHNIQUE", "Problème technique inconnu"),
                            ("E_ERR_EX042_PROBLEME_DECHIFFREMEMENT", "Erreur lors du déchiffrement du NIR chiffré"),
                        ],
                        max_length=64,
                        null=True,
                        verbose_name="dernier code de sortie constaté",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        help_text="12 caractères alphanumériques.",
                        max_length=12,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[0-9a-zA-Z]*$", "Seuls les caractères alphanumériques sont autorisés."
                            ),
                            django.core.validators.MinLengthValidator(12),
                        ],
                        verbose_name="numéro",
                    ),
                ),
                ("user_last_name", models.CharField(verbose_name="nom demandeur d'emploi")),
                ("user_first_name", models.CharField(verbose_name="prénom demandeur d'emploi")),
                ("user_nir", models.CharField(blank=True, verbose_name="NIR demandeur d'emploi")),
                (
                    "user_birthdate",
                    models.DateField(blank=True, null=True, verbose_name="date de naissance demandeur d'emploi"),
                ),
                (
                    "user_id_national_pe",
                    models.CharField(blank=True, null=True, verbose_name="identifiant national PE"),
                ),
                ("siae_siret", models.CharField(max_length=14, verbose_name="siret siae")),
                (
                    "siae_kind",
                    models.CharField(
                        choices=[
                            ("EI", "Entreprise d'insertion"),
                            ("AI", "Association intermédiaire"),
                            ("ACI", "Atelier chantier d'insertion"),
                            ("ETTI", "Entreprise de travail temporaire d'insertion"),
                            ("EITI", "Entreprise d'insertion par le travail indépendant"),
                            ("GEIQ", "Groupement d'employeurs pour l'insertion et la qualification"),
                            ("EA", "Entreprise adaptée"),
                            ("EATT", "Entreprise adaptée de travail temporaire"),
                            ("OPCS", "Organisation porteuse de la clause sociale"),
                        ],
                        verbose_name="type siae",
                    ),
                ),
                (
                    "sender_kind",
                    models.CharField(
                        choices=[
                            ("job_seeker", "Demandeur d'emploi"),
                            ("prescriber", "Prescripteur"),
                            ("siae_staff", "Employeur (SIAE)"),
                        ],
                        verbose_name="origine de la candidature",
                    ),
                ),
                (
                    "prescriber_kind",
                    models.CharField(
                        choices=[
                            ("CAP_EMPLOI", "Cap emploi"),
                            ("ML", "Mission locale"),
                            ("OIL", "Opérateur d'intermédiation locative"),
                            (
                                "ODC",
                                "Organisation délégataire d'un Conseil Départemental (Orientation et suivi des BRSA)",
                            ),
                            ("PENSION", "Pension de famille / résidence accueil"),
                            ("PE", "Pôle emploi"),
                            ("RS_FJT", "Résidence sociale / FJT - Foyer de Jeunes Travailleurs"),
                            ("PREVENTION", "Service ou club de prévention"),
                            ("DEPT", "Service social du conseil départemental"),
                            ("AFPA", "AFPA - Agence nationale pour la formation professionnelle des adultes"),
                            ("ASE", "ASE - Aide sociale à l'enfance"),
                            (
                                "CAARUD",
                                "CAARUD - Centre d'accueil et d'accompagnement à la réduction de risques pour "
                                "usagers de drogues",
                            ),
                            ("CADA", "CADA - Centre d'accueil de demandeurs d'asile"),
                            ("CAF", "CAF - Caisse d'allocations familiales"),
                            ("CAVA", "CAVA - Centre d'adaptation à la vie active"),
                            (
                                "CCAS",
                                "CCAS - Centre communal d'action sociale ou centre intercommunal d'action sociale",
                            ),
                            ("CHRS", "CHRS - Centre d'hébergement et de réinsertion sociale"),
                            ("CHU", "CHU - Centre d'hébergement d'urgence"),
                            ("CIDFF", "CIDFF - Centre d'information sur les droits des femmes et des familles"),
                            ("CPH", "CPH - Centre provisoire d'hébergement"),
                            ("CSAPA", "CSAPA - Centre de soins, d'accompagnement et de prévention en addictologie"),
                            ("E2C", "E2C - École de la deuxième chance"),
                            ("EPIDE", "EPIDE - Établissement pour l'insertion dans l'emploi"),
                            ("HUDA", "HUDA - Hébergement d'urgence pour demandeurs d'asile"),
                            ("MSA", "MSA - Mutualité Sociale Agricole"),
                            (
                                "OACAS",
                                "OACAS - Structure porteuse d'un agrément national organisme d'accueil communautaire "
                                "et d'activité solidaire",
                            ),
                            ("PIJ_BIJ", "PIJ-BIJ - Point/Bureau information jeunesse"),
                            ("PJJ", "PJJ - Protection judiciaire de la jeunesse"),
                            ("PLIE", "PLIE - Plan local pour l'insertion et l'emploi"),
                            ("SPIP", "SPIP - Service pénitentiaire d'insertion et de probation"),
                            ("Autre", "Autre"),
                        ],
                        verbose_name="typologie prescripteur",
                    ),
                ),
            ],
            options={
                "verbose_name": "PASS IAE annulé",
                "verbose_name_plural": "PASS IAE annulés",
                "ordering": ["-created_at"],
            },
        ),
    ]
