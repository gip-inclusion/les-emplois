# Generated by Django 5.1.6 on 2025-02-25 13:19

from itertools import batched

from django.db import migrations

from itou.users.enums import IdentityProvider


def add_email_addresses(apps, schema_editor):
    EmailAddress = apps.get_model("account", "EmailAddress")
    User = apps.get_model("users", "User")

    # Delete all pro email_address (it's easier)
    count, _ = EmailAddress.objects.filter(
        user__identity_provider__in=[IdentityProvider.INCLUSION_CONNECT, IdentityProvider.PRO_CONNECT],
    ).delete()
    print(f"Deleted {count} EmailAddress for IC and PC users")

    # delete email_address with a pro email on a non pro user
    count, _ = EmailAddress.objects.filter(
        email__in=User.objects.filter(
            identity_provider__in=[IdentityProvider.INCLUSION_CONNECT, IdentityProvider.PRO_CONNECT]
        ).values_list("email")
    ).delete()
    print(f"Deleted {count} EmailAddress using IC and PC accounts emails")

    users_qs = User.objects.filter(
        identity_provider__in=[IdentityProvider.INCLUSION_CONNECT, IdentityProvider.PRO_CONNECT]
    )
    for users in batched(users_qs, 10000):
        email_addresses = []
        for user in users:
            email_addresses.append(EmailAddress(user=user, email=user.email, verified=True, primary=True))
        count = len(EmailAddress.objects.bulk_create(email_addresses))
        print(f"Created {count} verified EmailAddress for IC and PC users")


class Migration(migrations.Migration):
    atomic = False

    dependencies = [
        ("pro_connect", "0001_initial"),
    ]

    operations = [migrations.RunPython(add_email_addresses, migrations.RunPython.noop, elidable=True)]
