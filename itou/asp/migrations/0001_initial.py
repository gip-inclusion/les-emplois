# Generated by Django 5.2.4 on 2025-07-20 05:32

import django.contrib.postgres.constraints
import django.contrib.postgres.fields.ranges
import django.contrib.postgres.indexes
import django.db.models.deletion
import django.db.models.functions.text
import django.utils.timezone
from django.db import migrations, models

import itou.asp.models
import itou.utils.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("cities", "0001_initial"),
        ("utils", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("code", models.CharField(max_length=3, verbose_name="code pays INSEE")),
                ("name", models.CharField(max_length=50, verbose_name="nom du pays")),
                (
                    "group",
                    models.CharField(
                        choices=[("1", "France"), ("2", "CEE"), ("3", "Hors CEE")],
                        max_length=15,
                        verbose_name="groupe",
                    ),
                ),
                ("department", models.CharField(default="098", max_length=3, verbose_name="code département")),
            ],
            options={
                "verbose_name": "pays",
                "verbose_name_plural": "pays",
                "ordering": ["name"],
            },
            bases=(itou.asp.models.PrettyPrintMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("start_date", models.DateField(verbose_name="début de validité")),
                ("end_date", models.DateField(blank=True, null=True, verbose_name="fin de validité")),
                ("code", models.CharField(max_length=3, verbose_name="code département INSEE")),
                ("name", models.CharField(max_length=50, verbose_name="nom du département")),
            ],
            options={
                "verbose_name": "département",
                "constraints": [
                    django.contrib.postgres.constraints.ExclusionConstraint(
                        expressions=(
                            ("code", "="),
                            (
                                itou.utils.models.DateRange(
                                    "start_date",
                                    "end_date",
                                    django.contrib.postgres.fields.ranges.RangeBoundary(
                                        inclusive_lower=True, inclusive_upper=True
                                    ),
                                ),
                                "&&",
                            ),
                        ),
                        name="exclude_department_overlapping_dates",
                        violation_error_message="La période chevauche une autre période existante pour ce même code "
                        "INSEE.",
                    )
                ],
            },
            bases=(itou.asp.models.PrettyPrintMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Commune",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("start_date", models.DateField(verbose_name="début de validité")),
                ("end_date", models.DateField(blank=True, null=True, verbose_name="fin de validité")),
                ("code", models.CharField(db_index=True, max_length=5, verbose_name="code commune INSEE")),
                ("name", models.CharField(max_length=50, verbose_name="nom de la commune")),
                (
                    "created_at",
                    models.DateTimeField(default=django.utils.timezone.now, verbose_name="date de création"),
                ),
                (
                    "city",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="cities.city",
                        verbose_name="ville INSEE",
                    ),
                ),
                (
                    "normalized_name",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.text.Replace(
                            django.db.models.functions.text.Lower(itou.utils.models.SlylyImmutableUnaccent("name")),
                            models.Value("-"),
                            models.Value(" "),
                        ),
                        output_field=models.CharField(),
                        verbose_name="nom normalisé pour faciliter la recherche",
                    ),
                ),
                ("ignore", models.BooleanField(db_default=False, default=False, verbose_name="commune désactivée")),
            ],
            options={
                "verbose_name": "commune",
                "indexes": [
                    django.contrib.postgres.indexes.GinIndex(
                        fields=["normalized_name"], name="commune_normalized_name_gin", opclasses=["gin_trgm_ops"]
                    )
                ],
                "constraints": [
                    django.contrib.postgres.constraints.ExclusionConstraint(
                        expressions=(
                            ("code", "="),
                            (
                                itou.utils.models.DateRange(
                                    "start_date",
                                    "end_date",
                                    django.contrib.postgres.fields.ranges.RangeBoundary(
                                        inclusive_lower=True, inclusive_upper=True
                                    ),
                                ),
                                "&&",
                            ),
                        ),
                        name="exclude_commune_overlapping_dates",
                        violation_error_message="La période chevauche une autre période existante pour ce même code "
                        "INSEE.",
                    ),
                ],
            },
            bases=(itou.asp.models.PrettyPrintMixin, models.Model),
            managers=[
                ("objects", itou.asp.models.CommuneManager()),
                ("unfiltered_objects", itou.asp.models.UnfilteredCommuneManager()),
            ],
        ),
    ]
