name: 🔮 CI

on:
  push:
    branches:
      - master
  pull_request:
  merge_group:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CELLAR_ADDON_HOST_TEST: ${{ secrets.CLEVER_CELLAR_ADDON_HOST_FOR_TESTS }}
      CELLAR_ADDON_KEY_ID_TEST: ${{ secrets.CLEVER_CELLAR_ADDON_KEY_ID_FOR_TESTS }}
      CELLAR_ADDON_SECRET_KEY_TEST: ${{ secrets.CLEVER_CELLAR_ADDON_SECRET_KEY_FOR_TESTS }}
      DJANGO_SETTINGS_MODULE: config.settings.test
      REDIS_URL: redis://127.0.0.1:6379
      REQUIREMENTS_PATH: requirements/test.txt
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
      cancel-in-progress: true
    services:
      redis:
        image: redis
        ports:
          - 6379:6379

      postgres:
        # Docker Hub image
        image: postgis/postgis:15-master
        env:
          POSTGRES_PASSWORD: password
        volumes:
          - /var/run/postgresql:/var/run/postgresql
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Setup PostgreSQL environment
      run: |
        echo PGHOST=/var/run/postgresql >> $GITHUB_ENV
        echo PGUSER=postgres >> $GITHUB_ENV
    - name: 🐘 Non-durable PostgreSQL
      run: |
        psql <<SQL
          ALTER SYSTEM SET fsync=off;
          ALTER SYSTEM SET synchronous_commit=off;
          ALTER SYSTEM SET full_page_writes=off;
        SQL
        docker kill --signal=SIGHUP ${{ job.services.postgres.id }}
    - uses: actions/checkout@v4.2.2
    - name: 🌍 Install spatial libraries
      run: sudo apt-get update && sudo apt-get install binutils build-essential libproj-dev gdal-bin
    - name: 💾 Create a database to check migrations
      run: |
        psql <<SQL
            CREATE DATABASE itou;
        SQL
    - name: ⏬ Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "requirements/test.txt"
    - name: 💾 Restore static files cache
      uses: actions/cache@v4
      with:
        key: staticfiles-${{ hashFiles('itou/utils/staticfiles.py') }}
        path: |
          ~/.cache/itou_cached_assets/
    - name: 📥 Install dependencies
      run: |
        make venv
        echo ".venv/bin" >> $GITHUB_PATH
    - name: ✨ Verify quality
      run: make quality
    - name: 🤹 Django tests
      run: make test
