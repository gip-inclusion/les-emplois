name: 🌈 Populate metabase itou

# Runs "populate_metabase_itou".
# A github action takes care of the cron task that:
# - creates a machine on demand
# - runs the desired command via a worker
# - waits a reasonable amount of time for the script to complete
# - destroys the machine once the update is done
on:
  workflow_dispatch: # allows us to run this action manually
  schedule:
    # Run this workflow every night.
    # 19:00 here means 21:00 or 22:00 in France depending on winter/summer time.
    - cron: '0 19 * * *'

# How to run this:
# Locally:
# - download and install locally "act" (https://github.com/nektos/act)
# - create a file "act.secrets" with all the necessary secrets (see the env variables below)
# - "act --secret-file ./act.secrets -j populate_metabase_itou" will run the job populate_metabase_itou with the specified environment variables
# In production:
# - automatically, as a cron job configured above
# - with github cli (https://cli.github.com/manual/): gh workflow run populate-metabase-itou.yml
# - with github’s web UI: https://github.com/betagouv/itou/actions
env:
  CLEVER_TOOLS_DOWNLOAD_URL: https://clever-tools.clever-cloud.com/releases/latest/clever-tools-latest_linux.tar.gz
  CLEVER_TAR_FILE: clever-tools-latest_linux.tar.gz
  CLEVER_CLI: clever-tools-latest_linux/clever
  CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
  CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}
  DEPLOY_BRANCH: master_clever
  PYTHON_VERSION: "3.10"

jobs:
  populate_metabase_itou:
    runs-on: ubuntu-latest

    # Default github action workflow timeout is 6 hours (360 minutes). If the script lasts longer than this for any
    # reason, the github action will be killed but the clever instance will keep running forever as the last job
    # supposed to delete it was never runned. This is why we want a very large timer here because clever instances
    # are expensive but github actions are not.
    # Unfortunately this does not work as any new timeout value above 6 hours is silently ignored and github keeps
    # killing the job after the default 6 hours. This is due to the fact that there is also a maximum job execution
    # time limit of 6 hours for Github-hosted runners. Thus we cannot push through 6 hours unless we one day use
    # self-hoster runners. ¯\_(ツ)_/¯
    # Another possible solution would be, as recommended by Clever support, to end the github action immediately
    # after launching the clever instance with its worker, and add a "harakiri" script at the end of
    # `CC_WORKER_COMMAND` to make the clever instance connect by itself to the clever API, and order its own deletion.
    timeout-minutes: 360

    steps:
    - name: 📥 Checkout to the latest version on $DEPLOY_BRANCH
      uses: actions/checkout@v3.1.0
      with:
        ref: ${{ env.DEPLOY_BRANCH }}

    - name: 📥 Fetch git branches
      run: git fetch --prune --unshallow

    - name: 🏷 Setup app name
      run:
        echo "CRON_TASK_APP_NAME=`echo \"c1-cron-daily-$(date +%y-%m-%d-%Hh-%M)"`" >> $GITHUB_ENV

    - name: 🏷 Setup worker to run django command
      run: |
        echo 'CC_WORKER_COMMAND=mkdir -p ./shared_bucket/populate_metabase_itou && ./manage.py populate_metabase_itou --verbosity 2 |& tee -a ./shared_bucket/populate_metabase_itou/output_$(date '+%Y-%m-%d_%H-%M-%S').log' >> $GITHUB_ENV
        # By default, workers always restart on failure. We want to avoid an infinite loop if it happens.
        echo 'CC_WORKER_RESTART=no' >> $GITHUB_ENV

    - name: 🧫 Create a cron app on Clever Cloud on a strong machine
      run: |
        curl $CLEVER_TOOLS_DOWNLOAD_URL > $CLEVER_TAR_FILE
        tar -xvf $CLEVER_TAR_FILE
        $CLEVER_CLI login --token $CLEVER_TOKEN --secret $CLEVER_SECRET
        $CLEVER_CLI create $CRON_TASK_APP_NAME -t python --region par --alias $CRON_TASK_APP_NAME --org Itou
        $CLEVER_CLI link $CRON_TASK_APP_NAME --org Itou
        $CLEVER_CLI scale --flavor XL

    # We need at the minimum a database and redis in order to boot the app, as well as all the necessary
    # environment variables a configuration addon provides us
    - name: 🗺 Add environment variables and addons to the app
      run: |
        $CLEVER_CLI link $CRON_TASK_APP_NAME --org Itou
        $CLEVER_CLI env set ITOU_ENVIRONMENT "FAST-MACHINE"
        $CLEVER_CLI service link-addon c1-deployment-config
        $CLEVER_CLI service link-addon c1-bucket-config
        $CLEVER_CLI service link-addon c1-prod-database-encrypted
        $CLEVER_CLI service link-addon c1-itou-redis

    - name: 🚀 Deploy worker configuration to Clever
      run: |
        $CLEVER_CLI env import-vars CC_WORKER_COMMAND
        $CLEVER_CLI env import-vars CC_WORKER_RESTART

    - name: 🚀 Deploy app to Clever Cloud
      run: $CLEVER_CLI deploy --alias $CRON_TASK_APP_NAME --branch $DEPLOY_BRANCH --force

    # Here we should wait an amount of time after which we are sure the script has completed.
    # This waiting time should never be increased above 5h45 (20700s), just below 6h, because otherwise
    # the github action will be killed at 6 hours but the clever instance will keep running forever,
    # see `timeout-minutes` above for more details.
    - name: 🕒 Wait a reasonable amount of time after which we are sure the script has completed
      run: sleep 20700

    - name: 🔪 Delete the app once the work is done
      run:
        $CLEVER_CLI delete --yes
