name: 🌈 Build metabase final tables

# Runs "build_metabase_final_tables".
# A github action takes care of the cron task that:
# - creates a machine on demand
# - runs the desired command
# - destroys the machine once the update is done
on:
  workflow_dispatch: # allows us to run this action manually

# How to run this:
# Locally:
# - download and install locally "act" (https://github.com/nektos/act)
# - create a file "act.secrets" with all the necessary secrets (see the env variables below)
# - "act --secret-file ./act.secrets -j build_metabase_final_tables" will run the job build_metabase_final_tables with the specified environment variables
# In production:
# - automatically, as a cron job configured above
# - with github cli (https://cli.github.com/manual/): gh workflow run build-metabase-final-tables.yml
# - with github’s web UI: https://github.com/betagouv/itou/actions
env:
  CLEVER_TOOLS_DOWNLOAD_URL: https://clever-tools.clever-cloud.com/releases/latest/clever-tools-latest_linux.tar.gz
  CLEVER_TAR_FILE: clever-tools-latest_linux.tar.gz
  CLEVER_CLI: clever-tools-latest_linux/clever
  CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
  CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}
  CRON_APPS_ORGANIZATION_NAME: ${{ secrets.CLEVER_CRON_APPS_ORGANIZATION_NAME }}
  DEPLOY_BRANCH: master_clever
  PYTHON_VERSION: 3.9

jobs:
  build_metabase_final_tables:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout to the latest version on $DEPLOY_BRANCH
      uses: actions/checkout@v2.3.4
      with:
        ref: ${{ env.DEPLOY_BRANCH }}

    - name: 📥 Fetch git branches
      run: git fetch --prune --unshallow

    - name: 🏷 Setup app name
      run:
        echo "CRON_TASK_APP_NAME=`echo \"c1-build-metabase-final-tables-$(date +%y-%m-%d-%Hh-%M)"`" >> $GITHUB_ENV

    - name: 🏷 Setup worker to run django command
      run: |
        echo 'CC_WORKER_COMMAND=mkdir -p ./shared_bucket/build_metabase_final_tables && ./manage.py build_metabase_final_tables --verbosity 2 |& tee -a ./shared_bucket/build_metabase_final_tables/output_$(date '+%Y-%m-%d_%H-%M-%S').log' >> $GITHUB_ENV
        # By default, workers always restart on failure. We want to avoid an infinite loop if it happens.
        echo 'CC_WORKER_RESTART=no' >> $GITHUB_ENV

    - name: 🧫 Create a cron app on Clever Cloud on a small machine
      run: |
        curl $CLEVER_TOOLS_DOWNLOAD_URL > $CLEVER_TAR_FILE
        tar -xvf $CLEVER_TAR_FILE
        $CLEVER_CLI login --token $CLEVER_TOKEN --secret $CLEVER_SECRET
        # Create a new application on Clever Cloud.
        # -t: application type (Python).
        # --org: organization name.
        # --region: server location ("par" means Paris).
        # --alias: custom application name, used to find it with the CLI.
        $CLEVER_CLI create $CRON_TASK_APP_NAME -t python --region par --alias $CRON_TASK_APP_NAME --org Itou
        # Force Python version through env, because its default value 3 is not accurate and environment variables
        # have precedence over configuration addons
        $CLEVER_CLI env set CC_PYTHON_VERSION ${{ env.PYTHON_VERSION }} --alias $CRON_TASK_APP_NAME
        $CLEVER_CLI link $CRON_TASK_APP_NAME --org $CRON_APPS_ORGANIZATION_NAME
        $CLEVER_CLI scale --flavor S

    # We need at the minimum a database and redis in order to boot the app, as well as all the necessary
    # environment variables a configuration addon provides us
    - name: 🗺 Add environment variables and addons to the app
      run: |
        $CLEVER_CLI link $CRON_TASK_APP_NAME --org $CRON_APPS_ORGANIZATION_NAME
        $CLEVER_CLI service link-addon c1-fast-machine-config
        $CLEVER_CLI service link-addon c1-prod-database-encrypted
        $CLEVER_CLI service link-addon c1-itou-redis

    - name: 🚀 Deploy worker configuration to Clever
      run: |
        $CLEVER_CLI env import-vars CC_WORKER_COMMAND
        $CLEVER_CLI env import-vars CC_WORKER_RESTART

    - name: 🚀 Deploy app to Clever Cloud
      run: $CLEVER_CLI deploy --alias $CRON_TASK_APP_NAME --branch $DEPLOY_BRANCH --force

    # Command typically completes in 500s.
    - name: 🕒 Wait a reasonable amount of time for the script to complete
      run: sleep 1200

    - name: 🔪 Delete the app once the work is done
      run:
        $CLEVER_CLI delete --yes
