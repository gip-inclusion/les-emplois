# serializer version: 1
# name: test_beneficiary_details
  '''
  <div class="col-12" id="beneficiary_details_container">
                      
                      <div class="c-box mb-3 mb-lg-5">
                          <h2>Données administratives</h2>
                          <hr/>
                          <div class="row">
                              <div class="col-12 col-md-6 mb-3 mb-md-0">
                                  <ul class="list-data">
                                      <li>
                                          <small>Prénom</small>
                                          <strong>Jane</strong>
                                      </li>
                                      <li>
                                          <small>Nom</small>
                                          <strong>DOE</strong>
                                      </li>
                                      <li>
                                          <small>Date de naissance</small>
                                          
                                              <strong>01/01/1990</strong>
                                          
                                      </li>
                                      <li>
                                          <small>Adresse e-mail</small>
                                          <strong>jane.doe@test.local</strong>
                                          
                                          <button class="btn-link" data-bs-placement="top" data-bs-title="Copié !" data-bs-toggle="tooltip" data-bs-trigger="manual" data-it-clipboard-button="copy" data-it-copy-to-clipboard="jane.doe@test.local" data-matomo-action="clic" data-matomo-category="gps" data-matomo-event="true" data-matomo-option="copied_user_email">
      <i aria-hidden="true" class="ri-file-copy-line fw-normal"></i>
      <span class="visually-hidden">Copier</span>
  </button>
  
                                      </li>
                                      <li>
                                          <small>Téléphone</small>
                                          
                                              <strong>06 12 34 56 78</strong>
                                              
                                              <button class="btn-link" data-bs-placement="top" data-bs-title="Copié !" data-bs-toggle="tooltip" data-bs-trigger="manual" data-it-clipboard-button="copy" data-it-copy-to-clipboard="0612345678" data-matomo-action="clic" data-matomo-category="gps" data-matomo-event="true" data-matomo-option="copied_user_phone">
      <i aria-hidden="true" class="ri-file-copy-line fw-normal"></i>
      <span class="visually-hidden">Copier</span>
  </button>
  
                                          
                                      </li>
                                      <li>
                                          <small>Adresse</small>
                                          
                                              <address>12 rue Georges Bizet, 35000 Rennes</address>
                                          
                                      </li>
                                      <li>
                                          <small>Numéro de sécurité sociale</small>
                                          
                                              <strong>290010101010125</strong>
                                          
                                      </li>
                                  </ul>
                              </div>
                              <div class="col-12 col-md-6">
                                  <ul class="list-data">
                                      <li>
                                          <small>Niveau de formation</small>
                                          
                                              <strong>Formation de niveau BAC</strong>
                                          
                                      </li>
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      <li>
                                          <small>Identifiant France Travail (ex Pôle emploi)</small>
  
                                          
                                              <i class="text-disabled">Non renseigné</i>
                                          
                                      </li>
                                      <li>
                                          <div class="c-info c-info--secondary" id="advisor-info-details-collapsable">
                                              <button aria-controls="collapseAdvisorInfoDetails" aria-expanded="false" class="c-info__summary collapsed" data-bs-target="#collapseAdvisorInfoDetails" data-bs-toggle="collapse" data-matomo-action="clic" data-matomo-category="gps" data-matomo-event="true" data-matomo-option="coordonnees-conseiller-ailleurs" type="button">
                                                  <span>Voir les coordonnées du
                                                      <br class="d-none d-md-inline"/>
                                                  conseiller emploi France Travail</span>
                                              </button>
                                              <div class="c-info__detail collapse" id="collapseAdvisorInfoDetails">
                                                  
                                                      <p class="mb-0">
                                                          La fonctionnalité est en test dans deux départements et sera bientôt disponible pour votre territoire.
                                                      </p>
                                                  
                                              </div>
                                          </div>
                                      </li>
                                  </ul>
                              </div>
                          </div>
                      </div>
                      
  
  
  
  <div class="c-box mb-3 mb-lg-5" id="gps_intervenants">
      <div class="border-bottom">
          <div class="d-flex flex-column flex-md-row gap-3 justify-content-md-between align-items-start">
              <h2>Intervenant</h2>
              <div aria-label="Actions sur les participants" class="d-flex flex-column flex-md-row gap-3" role="group">
                  <a class="btn btn-sm btn-ico btn-primary mt-3 mt-md-0" href="https://formulaires.gps.inclusion.gouv.fr/ajouter-intervenant?user_name=Pierre+DUPONT&amp;user_id=[PK of user]&amp;user_email=pierre.dupont%40test.local&amp;user_organization_name=Les+Olivades&amp;user_organization_id=[PK of organization]&amp;user_type=prescriber&amp;beneficiary_name=Jane+DOE&amp;beneficiary_id=[PK of beneficiary]&amp;beneficiary_email=jane.doe%40test.local&amp;success_url=http%3A%2F%2Ftestserver%2Fgps%2Fdetails%2F7614fc4b-aef9-4694-ab17-12324300180a" id="request-new-participant-link">
                      <i aria-hidden="true" class="ri-user-add-line"></i>
                      <span>Ajouter un intervenant existant</span>
                  </a>
              </div>
          </div>
      </div>
      <form>
          <input name="csrfmiddlewaretoken" type="hidden" value="NORMALIZED_CSRF_TOKEN"/>
          <ul class="list-unstyled p-0 m-0">
              
                  <li class="c-box--results__header px-0 gps_intervenant" id="card-[PK of prescriber]">
                      <div class="c-box--results__summary">
                          <i aria-hidden="true" class="ri-user-line"></i>
                          <div class="d-flex flex-column flex-md-row gap-2 align-items-md-start gap-md-3">
                              <div class="col">
                                  <h3 class="mb-2">
                                      Pierre DUPONT
                                      <span class="fw-normal fs-6 fst-italic">
                                          
                                          
                                  (prescripteur pour Les Olivades)
                                          
                                      </span>
                                  </h3>
  
                                  <ul class="list-unstyled">
                                      <li class="py-1">
                                          <i aria-hidden="true" class="ri-calendar-line fw-normal me-1"></i>Suivi depuis le <strong>21/06/2024</strong>
                                      </li>
                                      
                                          <li class="py-1">
                                              <i aria-hidden="true" class="ri-map-pin-user-line fw-normal me-1"></i><strong>Référent</strong>
                                          </li>
                                      
                                  </ul>
                              </div>
                              
                                  <button class="btn btn-outline-primary btn-ico w-100 w-md-auto" data-matomo-action="clic" data-matomo-category="gps" data-matomo-event="true" data-matomo-option="displayed_member_phone" hx-post="display_phone_url" hx-swap="outerHTML" id="display_phone_id">
                                      <i aria-hidden="true" class="ri-phone-line fw-normal me-1"></i>
                                      <span>Afficher le téléphone</span>
                                  </button>
                              
                              <button class="btn btn-outline-primary btn-ico w-100 w-md-auto" data-matomo-action="clic" data-matomo-category="gps" data-matomo-event="true" data-matomo-option="displayed_member_email" hx-post="display_email_url" hx-swap="outerHTML" id="display_email_id">
                                  <i aria-hidden="true" class="ri-mail-line fw-normal me-1"></i>
                                  <span>Afficher l'email</span>
                              </button>
  
                          </div>
                      </div>
                  </li>
              
          </ul>
      </form>
  </div>
  
                  </div>
  '''
# ---
# name: test_contact_information_display[info_displayed]
  '''
  <div class="c-info c-info--secondary" id="advisor-info-details-collapsable">
                                              <button aria-controls="collapseAdvisorInfoDetails" aria-expanded="false" class="c-info__summary collapsed" data-bs-target="#collapseAdvisorInfoDetails" data-bs-toggle="collapse" data-matomo-action="clic" data-matomo-category="gps" data-matomo-event="true" data-matomo-option="coordonnees-conseiller-30" type="button">
                                                  <span>Voir les coordonnées du
                                                      <br class="d-none d-md-inline"/>
                                                  conseiller emploi France Travail</span>
                                              </button>
                                              <div class="c-info__detail collapse" id="collapseAdvisorInfoDetails">
                                                  
                                                      <ul class="list-unstyled">
                                                          <li>
                                                              <i aria-hidden="true" class="ri-user-line fw-normal me-1"></i>Test MacTest
                                                          </li>
                                                          <li>
                                                              <i aria-hidden="true" class="ri-mail-line fw-normal me-1"></i>
                                                              <a aria-label="Contacter Test MacTest par e-mail" class="text-break text-decoration-none" href="mailto:test.mactest@francetravail.fr">test.mactest@francetravail.fr</a>
                                                              <button class="btn-link fw-medium ms-1" data-bs-placement="top" data-bs-title="Copié !" data-bs-toggle="tooltip" data-bs-trigger="manual" data-it-clipboard-button="copy" data-it-copy-to-clipboard="test.mactest@francetravail.fr" data-matomo-action="clic" data-matomo-category="gps" data-matomo-event="true" data-matomo-option="copied_user_phone">
      <i aria-hidden="true" class="ri-file-copy-line fw-normal"></i>
      <span class="visually-hidden">Copier</span>
  </button>
  
                                                          </li>
                                                      </ul>
                                                  
                                              </div>
                                          </div>
  '''
# ---
# name: test_contact_information_display[info_not_available]
  '''
  <div class="c-info c-info--secondary" id="advisor-info-details-collapsable">
                                              <button aria-controls="collapseAdvisorInfoDetails" aria-expanded="false" class="c-info__summary collapsed" data-bs-target="#collapseAdvisorInfoDetails" data-bs-toggle="collapse" data-matomo-action="clic" data-matomo-category="gps" data-matomo-event="true" data-matomo-option="coordonnees-conseiller-30" type="button">
                                                  <span>Voir les coordonnées du
                                                      <br class="d-none d-md-inline"/>
                                                  conseiller emploi France Travail</span>
                                              </button>
                                              <div class="c-info__detail collapse" id="collapseAdvisorInfoDetails">
                                                  
                                                      <p class="mb-0">Le conseiller emploi France Travail de ce bénéficiaire n’est pas connu.</p>
                                                  
                                              </div>
                                          </div>
  '''
# ---
# name: test_contact_information_display_not_live[preview_displayed]
  '''
  <div class="c-info c-info--secondary" id="advisor-info-details-collapsable">
                                              <button aria-controls="collapseAdvisorInfoDetails" aria-expanded="false" class="c-info__summary collapsed" data-bs-target="#collapseAdvisorInfoDetails" data-bs-toggle="collapse" data-matomo-action="clic" data-matomo-category="gps" data-matomo-event="true" data-matomo-option="coordonnees-conseiller-ailleurs" type="button">
                                                  <span>Voir les coordonnées du
                                                      <br class="d-none d-md-inline"/>
                                                  conseiller emploi France Travail</span>
                                              </button>
                                              <div class="c-info__detail collapse" id="collapseAdvisorInfoDetails">
                                                  
                                                      <p class="mb-0">
                                                          La fonctionnalité est en test dans deux départements et sera bientôt disponible pour votre territoire.
                                                      </p>
                                                  
                                              </div>
                                          </div>
  '''
# ---
# name: test_display_participant_contact_info
  '''
  <li class="c-box--results__header px-0 gps_intervenant" id="card'[PK of target_participant]">
                      <div class="c-box--results__summary">
                          <i aria-hidden="true" class="ri-user-line"></i>
                          <div class="d-flex flex-column flex-md-row gap-2 align-items-md-start gap-md-3">
                              <div class="col">
                                  <h3 class="mb-2">
                                      Jean DUPONT
                                      <span class="fw-normal fs-6 fst-italic">
                                          
                                          
                                  (prescripteur)
                                          
                                      </span>
                                  </h3>
  
                                  <ul class="list-unstyled">
                                      <li class="py-1">
                                          <i aria-hidden="true" class="ri-calendar-line fw-normal me-1"></i>Suivi depuis le <strong>20/01/2025</strong>
                                      </li>
                                      
                                  </ul>
                              </div>
                              
                                  <div class="btn btn-secondary w-100 w-md-auto">
      <span pr="">0123456789</span>
      <button class="btn-link" data-bs-placement="top" data-bs-title="Copié !" data-bs-toggle="tooltip" data-bs-trigger="manual" data-it-clipboard-button="copy" data-it-copy-to-clipboard="0123456789">
      <i aria-hidden="true" class="ri-file-copy-line fw-normal"></i>
      <span class="visually-hidden">Copier</span>
  </button>
  
  </div>
  
                              
                              <div class="btn btn-secondary w-100 w-md-auto">
      <span pr="">jean@dupont.fr</span>
      <button class="btn-link" data-bs-placement="top" data-bs-title="Copié !" data-bs-toggle="tooltip" data-bs-trigger="manual" data-it-clipboard-button="copy" data-it-copy-to-clipboard="jean@dupont.fr">
      <i aria-hidden="true" class="ri-file-copy-line fw-normal"></i>
      <span class="visually-hidden">Copier</span>
  </button>
  
  </div>
  
  
                          </div>
                      </div>
                  </li>
  '''
# ---
# name: test_my_groups
  dict({
    'num_queries': 14,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "prescribers_prescribermembership"."id",
                 "prescribers_prescribermembership"."user_id",
                 "prescribers_prescribermembership"."joined_at",
                 "prescribers_prescribermembership"."is_admin",
                 "prescribers_prescribermembership"."is_active",
                 "prescribers_prescribermembership"."created_at",
                 "prescribers_prescribermembership"."updated_at",
                 "prescribers_prescribermembership"."organization_id",
                 "prescribers_prescribermembership"."updated_by_id",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."is_head_office",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."is_authorized",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id"
          FROM "prescribers_prescribermembership"
          INNER JOIN "prescribers_prescriberorganization" ON ("prescribers_prescribermembership"."organization_id" = "prescribers_prescriberorganization"."id")
          WHERE ("prescribers_prescribermembership"."user_id" = %s
                 AND "prescribers_prescribermembership"."is_active")
          ORDER BY "prescribers_prescribermembership"."created_at" ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'MembershipsFiltersForm._get_beneficiary_choices[www/gps/forms.py]',
          'MembershipsFiltersForm.__init__[www/gps/forms.py]',
          'my_groups[www/gps/views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "users_user"
          WHERE "users_user"."id" IN
              (SELECT U2."beneficiary_id"
               FROM "gps_followupgroupmembership" U0
               INNER JOIN "gps_followupgroup" U2 ON (U0."follow_up_group_id" = U2."id")
               LEFT OUTER JOIN "gps_followupgroupmembership" U3 ON (U2."id" = U3."follow_up_group_id")
               WHERE (U0."member_id" = %s
                      AND U0."is_active")
               GROUP BY U0."id",
                        U2."beneficiary_id")
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'my_groups[www/gps/views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT COUNT(*)
          FROM
            (SELECT "gps_followupgroupmembership"."id" AS "col1"
             FROM "gps_followupgroupmembership"
             INNER JOIN "gps_followupgroup" ON ("gps_followupgroupmembership"."follow_up_group_id" = "gps_followupgroup"."id")
             LEFT OUTER JOIN "gps_followupgroupmembership" T4 ON ("gps_followupgroup"."id" = T4."follow_up_group_id")
             WHERE ("gps_followupgroupmembership"."member_id" = %s
                    AND "gps_followupgroupmembership"."is_active")
             GROUP BY 1) subquery
        ''',
      }),
      dict({
        'origin': list([
          'User.is_prescriber_with_authorized_org[users/models.py]',
          'is_allowed_to_use_gps_advanced_features[www/gps/views.py]',
          'my_groups[www/gps/views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "prescribers_prescribermembership"
          INNER JOIN "users_user" ON ("prescribers_prescribermembership"."user_id" = "users_user"."id")
          INNER JOIN "prescribers_prescriberorganization" ON ("prescribers_prescribermembership"."organization_id" = "prescribers_prescriberorganization"."id")
          WHERE ("prescribers_prescribermembership"."user_id" = %s
                 AND "prescribers_prescribermembership"."is_active"
                 AND "prescribers_prescriberorganization"."is_authorized"
                 AND "users_user"."is_active")
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'IfNode[gps/includes/memberships_results.html]',
          'IncludeNode[gps/my_groups.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[gps/my_groups.html]',
          'my_groups[www/gps/views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "gps_followupgroupmembership"."id",
                 "gps_followupgroupmembership"."is_referent",
                 "gps_followupgroupmembership"."is_active",
                 "gps_followupgroupmembership"."created_at",
                 "gps_followupgroupmembership"."created_in_bulk",
                 "gps_followupgroupmembership"."ended_at",
                 "gps_followupgroupmembership"."updated_at",
                 "gps_followupgroupmembership"."follow_up_group_id",
                 "gps_followupgroupmembership"."member_id",
                 "gps_followupgroupmembership"."creator_id",
                 COUNT(T4."member_id") AS "nb_members",
                 "gps_followupgroup"."id",
                 "gps_followupgroup"."created_at",
                 "gps_followupgroup"."created_in_bulk",
                 "gps_followupgroup"."updated_at",
                 "gps_followupgroup"."beneficiary_id",
                 T6."id",
                 T6."password",
                 T6."last_login",
                 T6."is_superuser",
                 T6."username",
                 T6."first_name",
                 T6."last_name",
                 T6."is_staff",
                 T6."is_active",
                 T6."date_joined",
                 T6."address_line_1",
                 T6."address_line_2",
                 T6."post_code",
                 T6."city",
                 T6."department",
                 T6."coords",
                 T6."geocoding_score",
                 T6."geocoding_updated_at",
                 T6."ban_api_resolved_address",
                 T6."insee_city_id",
                 T6."title",
                 T6."full_name_search_vector",
                 T6."email",
                 T6."phone",
                 T6."kind",
                 T6."identity_provider",
                 T6."has_completed_welcoming_tour",
                 T6."created_by_id",
                 T6."external_data_source_history",
                 T6."last_checked_at",
                 T6."public_id",
                 T6."address_filled_at",
                 T6."first_login",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "gps_followupgroupmembership"
          INNER JOIN "users_user" ON ("gps_followupgroupmembership"."member_id" = "users_user"."id")
          INNER JOIN "gps_followupgroup" ON ("gps_followupgroupmembership"."follow_up_group_id" = "gps_followupgroup"."id")
          LEFT OUTER JOIN "gps_followupgroupmembership" T4 ON ("gps_followupgroup"."id" = T4."follow_up_group_id")
          INNER JOIN "users_user" T6 ON ("gps_followupgroup"."beneficiary_id" = T6."id")
          WHERE ("gps_followupgroupmembership"."member_id" = %s
                 AND "gps_followupgroupmembership"."is_active")
          GROUP BY "gps_followupgroupmembership"."id",
                   "gps_followupgroup"."id",
                   T6."id",
                   "users_user"."id"
          ORDER BY "gps_followupgroupmembership"."created_at" DESC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'IfNode[gps/includes/memberships_results.html]',
          'IncludeNode[gps/my_groups.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[gps/my_groups.html]',
          'my_groups[www/gps/views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "col1",
                 "col2",
                 "col3",
                 "col4",
                 "col5",
                 "col6",
                 "col7",
                 "col8",
                 "col9",
                 "col10"
          FROM
            (SELECT *
             FROM
               (SELECT "gps_followupgroupmembership"."id" AS "col1",
                       "gps_followupgroupmembership"."is_referent" AS "col2",
                       "gps_followupgroupmembership"."is_active" AS "col3",
                       "gps_followupgroupmembership"."created_at" AS "col4",
                       "gps_followupgroupmembership"."created_in_bulk" AS "col5",
                       "gps_followupgroupmembership"."ended_at" AS "col6",
                       "gps_followupgroupmembership"."updated_at" AS "col7",
                       "gps_followupgroupmembership"."follow_up_group_id" AS "col8",
                       "gps_followupgroupmembership"."member_id" AS "col9",
                       "gps_followupgroupmembership"."creator_id" AS "col10",
                       ROW_NUMBER() OVER (PARTITION BY "gps_followupgroupmembership"."follow_up_group_id"
                                          ORDER BY RANDOM() ASC) AS "qual0",
                       RANDOM() AS "qual1"
                FROM "gps_followupgroupmembership"
                WHERE ("gps_followupgroupmembership"."is_referent"
                       AND "gps_followupgroupmembership"."follow_up_group_id" IN (%s))
                ORDER BY RANDOM() ASC) "qualify"
             WHERE ("qual0" > %s
                    AND "qual0" <= %s)) "qualify_mask"
          ORDER BY "qual1" ASC
        ''',
      }),
      dict({
        'origin': list([
          'VariableNode[gps/includes/memberships_results.html]',
          'IfNode[gps/includes/memberships_results.html]',
          'ForNode[gps/includes/memberships_results.html]',
          'IfNode[gps/includes/memberships_results.html]',
          'IncludeNode[gps/my_groups.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[gps/my_groups.html]',
          'my_groups[www/gps/views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Session.save[<site-packages>/django/db/models/base.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          UPDATE "django_session"
          SET "session_data" = %s,
              "expire_date" = %s
          WHERE "django_session"."session_key" = %s
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: test_my_groups[test_my_groups__group_card]
  '''
  <div aria-labelledby="results" class="mt-3 mt-md-4" id="follow-up-groups-section">
      
          <div class="table-responsive">
              <table class="table table-hover">
                  <caption class="visually-hidden">Liste des bénéficiaires</caption>
                  <thead>
                      <tr>
                          <th scope="col">Prénom Nom</th>
                          <th scope="col">Suivi depuis</th>
                          <th aria-label="Référent ou référente" scope="col">Référent⸱e</th>
                          <th aria-label="Nombre d’intervenants" scope="col">Nbr d’intervenants</th>
                      </tr>
                  </thead>
                  <tbody>
                      
                          <tr>
                              <td>
                                  <a aria-label="Consulter la fiche de Jane DOE" class="btn-link" data-matomo-action="clic" data-matomo-category="GPS_liste_groupes" data-matomo-event="true" data-matomo-option="consulter_fiche_candidat" href="/gps/details/7614fc4b-aef9-4694-ab17-12324300180a?back_url=/gps/groups">
                                      Jane DOE
                                  </a>
                              </td>
                              <td>21/06/2024</td>
                              <td>
                                  
                                      John DOE
                                  
                              </td>
                              <td>2</td>
                          </tr>
                      
                  </tbody>
              </table>
          </div>
  
          
  
  
  
  
      
  </div>
  '''
# ---
