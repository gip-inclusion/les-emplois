# serializer version: 1
# name: test_num_queries
  dict({
    'num_queries': 18,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'ItouUserAdmin.get_object[<site-packages>/django/contrib/admin/options.py]',
          'ItouUserAdmin.get_object[utils/admin.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update",
                 "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."normalized_name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode",
                 T3."id",
                 T3."password",
                 T3."last_login",
                 T3."is_superuser",
                 T3."username",
                 T3."first_name",
                 T3."last_name",
                 T3."is_staff",
                 T3."is_active",
                 T3."date_joined",
                 T3."address_line_1",
                 T3."address_line_2",
                 T3."post_code",
                 T3."city",
                 T3."department",
                 T3."coords",
                 T3."geocoding_score",
                 T3."geocoding_updated_at",
                 T3."ban_api_resolved_address",
                 T3."insee_city_id",
                 T3."title",
                 T3."full_name_search_vector",
                 T3."email",
                 T3."phone",
                 T3."kind",
                 T3."identity_provider",
                 T3."has_completed_welcoming_tour",
                 T3."created_by_id",
                 T3."external_data_source_history",
                 T3."last_checked_at",
                 T3."public_id",
                 T3."address_filled_at",
                 T3."first_login",
                 T3."upcoming_deletion_notified_at",
                 T3."allow_next_sso_sub_update",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."ft_gps_id",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."are_allocation_since",
                 "users_jobseekerprofile"."activity_bonus_since",
                 "users_jobseekerprofile"."cape_freelance",
                 "users_jobseekerprofile"."cesa_freelance",
                 "users_jobseekerprofile"."actor_met_for_business_creation",
                 "users_jobseekerprofile"."mean_monthly_income_before_process",
                 "users_jobseekerprofile"."eiti_contributions",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "users_jobseekerprofile"."created_by_prescriber_organization_id",
                 "users_jobseekerprofile"."is_stalled",
                 "users_jobseekerprofile"."is_not_stalled_anymore",
                 "users_jobseekerprofile"."fields_history"
          FROM "users_user"
          LEFT OUTER JOIN "cities_city" ON ("users_user"."insee_city_id" = "cities_city"."id")
          LEFT OUTER JOIN "users_user" T3 ON ("users_user"."created_by_id" = T3."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON ("users_user"."id" = "users_jobseekerprofile"."user_id")
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouUserAdmin.get_inlines[users/admin.py]',
        ]),
        'sql': '''
          SELECT "companies_companymembership"."id",
                 "companies_companymembership"."user_id",
                 "companies_companymembership"."joined_at",
                 "companies_companymembership"."is_admin",
                 "companies_companymembership"."is_active",
                 "companies_companymembership"."created_at",
                 "companies_companymembership"."updated_at",
                 "companies_companymembership"."company_id",
                 "companies_companymembership"."updated_by_id"
          FROM "companies_companymembership"
          WHERE "companies_companymembership"."user_id" = %s
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouUserAdmin.get_inlines[users/admin.py]',
        ]),
        'sql': '''
          SELECT "institutions_institutionmembership"."id",
                 "institutions_institutionmembership"."user_id",
                 "institutions_institutionmembership"."joined_at",
                 "institutions_institutionmembership"."is_admin",
                 "institutions_institutionmembership"."is_active",
                 "institutions_institutionmembership"."created_at",
                 "institutions_institutionmembership"."updated_at",
                 "institutions_institutionmembership"."institution_id",
                 "institutions_institutionmembership"."updated_by_id"
          FROM "institutions_institutionmembership"
          WHERE "institutions_institutionmembership"."user_id" = %s
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouUserAdmin.get_inlines[users/admin.py]',
        ]),
        'sql': '''
          SELECT "eligibility_eligibilitydiagnosis"."id",
                 "eligibility_eligibilitydiagnosis"."author_id",
                 "eligibility_eligibilitydiagnosis"."author_kind",
                 "eligibility_eligibilitydiagnosis"."author_prescriber_organization_id",
                 "eligibility_eligibilitydiagnosis"."created_at",
                 "eligibility_eligibilitydiagnosis"."updated_at",
                 "eligibility_eligibilitydiagnosis"."expires_at",
                 "eligibility_eligibilitydiagnosis"."job_seeker_id",
                 "eligibility_eligibilitydiagnosis"."author_siae_id"
          FROM "eligibility_eligibilitydiagnosis"
          WHERE "eligibility_eligibilitydiagnosis"."job_seeker_id" = %s
          ORDER BY "eligibility_eligibilitydiagnosis"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'ItouUserAdmin.get_inlines[users/admin.py]',
        ]),
        'sql': '''
          SELECT "eligibility_geiqeligibilitydiagnosis"."id",
                 "eligibility_geiqeligibilitydiagnosis"."author_id",
                 "eligibility_geiqeligibilitydiagnosis"."author_kind",
                 "eligibility_geiqeligibilitydiagnosis"."author_prescriber_organization_id",
                 "eligibility_geiqeligibilitydiagnosis"."created_at",
                 "eligibility_geiqeligibilitydiagnosis"."updated_at",
                 "eligibility_geiqeligibilitydiagnosis"."expires_at",
                 "eligibility_geiqeligibilitydiagnosis"."job_seeker_id",
                 "eligibility_geiqeligibilitydiagnosis"."author_geiq_id"
          FROM "eligibility_geiqeligibilitydiagnosis"
          WHERE "eligibility_geiqeligibilitydiagnosis"."job_seeker_id" = %s
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouUserAdmin.get_inlines[users/admin.py]',
        ]),
        'sql': '''
          SELECT "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "approvals_approval"
          WHERE "approvals_approval"."user_id" = %s
          ORDER BY "approvals_approval"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'EmailAddressFormSet.initial_form_count[<site-packages>/django/forms/models.py]',
          'EmailAddressFormSet.initial_form_count[<site-packages>/django/forms/models.py]',
        ]),
        'sql': '''
          SELECT "account_emailaddress"."id",
                 "account_emailaddress"."user_id",
                 "account_emailaddress"."email",
                 "account_emailaddress"."verified",
                 "account_emailaddress"."primary",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update"
          FROM "account_emailaddress"
          INNER JOIN "users_user" ON ("account_emailaddress"."user_id" = "users_user"."id")
          WHERE "account_emailaddress"."user_id" = %s
          ORDER BY "account_emailaddress"."id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'PrescriberMembershipFormSet.initial_form_count[<site-packages>/django/forms/models.py]',
          'PrescriberMembershipFormSet.initial_form_count[<site-packages>/django/forms/models.py]',
        ]),
        'sql': '''
          SELECT "prescribers_prescribermembership"."id",
                 "prescribers_prescribermembership"."user_id",
                 "prescribers_prescribermembership"."joined_at",
                 "prescribers_prescribermembership"."is_admin",
                 "prescribers_prescribermembership"."is_active",
                 "prescribers_prescribermembership"."created_at",
                 "prescribers_prescribermembership"."updated_at",
                 "prescribers_prescribermembership"."organization_id",
                 "prescribers_prescribermembership"."updated_by_id"
          FROM "prescribers_prescribermembership"
          WHERE "prescribers_prescribermembership"."user_id" = %s
          ORDER BY "prescribers_prescribermembership"."id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationFormSet.initial_form_count[<site-packages>/django/forms/models.py]',
          'JobApplicationFormSet.initial_form_count[<site-packages>/django/forms/models.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 T3."id",
                 T3."password",
                 T3."last_login",
                 T3."is_superuser",
                 T3."username",
                 T3."first_name",
                 T3."last_name",
                 T3."is_staff",
                 T3."is_active",
                 T3."date_joined",
                 T3."address_line_1",
                 T3."address_line_2",
                 T3."post_code",
                 T3."city",
                 T3."department",
                 T3."coords",
                 T3."geocoding_score",
                 T3."geocoding_updated_at",
                 T3."ban_api_resolved_address",
                 T3."insee_city_id",
                 T3."title",
                 T3."full_name_search_vector",
                 T3."email",
                 T3."phone",
                 T3."kind",
                 T3."identity_provider",
                 T3."has_completed_welcoming_tour",
                 T3."created_by_id",
                 T3."external_data_source_history",
                 T3."last_checked_at",
                 T3."public_id",
                 T3."address_filled_at",
                 T3."first_login",
                 T3."upcoming_deletion_notified_at",
                 T3."allow_next_sso_sub_update",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" T3 ON ("job_applications_jobapplication"."job_seeker_id" = T3."id")
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          WHERE "job_applications_jobapplication"."sender_id" = %s
          ORDER BY "job_applications_jobapplication"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'PkSupportRemarkFormSet.initial_form_count[<site-packages>/django/forms/models.py]',
        ]),
        'sql': '''
          SELECT "utils_pksupportremark"."id",
                 "utils_pksupportremark"."remark",
                 "utils_pksupportremark"."content_type_id",
                 "utils_pksupportremark"."object_id"
          FROM "utils_pksupportremark"
          WHERE ("utils_pksupportremark"."content_type_id" = %s
                 AND "utils_pksupportremark"."object_id" = %s)
          ORDER BY "utils_pksupportremark"."id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'ItouUserAdmin.follow_up_groups_or_members[users/admin.py]',
          'VariableNode[admin/includes/fieldset.html]',
          'IfNode[admin/includes/fieldset.html]',
          'IfNode[admin/includes/fieldset.html]',
          'ForNode[admin/includes/fieldset.html]',
          'ForNode[admin/includes/fieldset.html]',
          'IncludeNode[admin/change_form.html]',
          'ForNode[admin/change_form.html]',
          'BlockNode[admin/change_form.html]',
          'BlockNode[admin/base.html]',
          'ExtendsNode[admin/base_site.html]',
          'ExtendsNode[admin/change_form.html]',
          'ExtendsNode[admin/users/change_user_form.html]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "gps_followupgroupmembership"
          WHERE "gps_followupgroupmembership"."member_id" = %s
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Session.save[<site-packages>/django/db/models/base.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          UPDATE "django_session"
          SET "session_data" = %s,
              "expire_date" = %s
          WHERE "django_session"."session_key" = %s
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
