# serializer version: 1
# name: TestEvaluationCampaignManager.test_close_accepted_but_not_reviewed[accepted email body]
  '''
  Bonjour,
  
  La DDETS 01 a validé la conformité des nouveaux justificatifs que vous avez transmis dans le cadre du contrôle a posteriori sur les embauches réalisées en auto-prescription entre le 01 Janvier 2022 et le 30 Septembre 2022.
  
  Cette campagne de contrôle est terminée pour votre SIAE EI Les petits jardins ID-2000.
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_close_no_response[no docs email body]
  '''
  Bonjour,
  
  Sauf erreur de notre part, vous n’avez pas transmis les justificatifs demandés dans le cadre du contrôle a posteriori sur vos embauches réalisées en auto-prescription entre le 01 Janvier 2022 et le 30 Septembre 2022.
  
  La DDETS 01 ne peut donc pas faire de contrôle, par conséquent votre résultat concernant cette procédure est négatif (vous serez alerté des sanctions éventuelles concernant votre SIAE prochainement) conformément à l’instruction N° DGEFP/SDPAE/MIP/2022/83 du 5 avril 2022 relative à la mise en œuvre opérationnelle du contrôle a posteriori des recrutements en auto-prescription prévu par les articles R. 5132-1-12 à R. 5132-1-17 du code du travail.
  
  Pour plus d’informations, vous pouvez vous rapprocher de la DDETS 01.
  
  Si vous avez déjà pris contact avec votre DDETS, merci de ne pas tenir compte de ce courriel.
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_close_no_response[sanction notification email body]
  '''
  Bonjour,
  
  Suite au dernier contrôle a posteriori, une ou plusieurs SIAE de votre département ont obtenu un résultat négatif.
  Conformément au  Décret n° 2021-1128 du 30 août 2021 relatif à l'insertion par l'activité économique, les manquements constatés ainsi que les sanctions envisagées doivent être notifiés aux SIAE.
  
  Veuillez vous connecter sur votre espace des emplois de l’inclusion afin d’effectuer cette démarche.
  http://localhost:8000/siae_evaluation/institution_evaluated_siae_list/1000/
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_close_refused_but_not_reviewed[refused email body]
  '''
  Bonjour,
  
  Vous trouverez ci-après le résultat du contrôle a posteriori sur vos auto-prescriptions réalisées entre le 01 Janvier 2022 et le 30 Septembre 2022.
  
  La DDETS 01 a vérifié les nouveaux justificatifs transmis par votre structure EI Les petits jardins ID-2000 dans le cadre de la phase contradictoire du contrôle a posteriori sur vos embauches réalisées en auto-prescription entre le 01 Janvier 2022 et le 30 Septembre 2022.
  
  Un ou plusieurs de vos justificatifs n’ont pas été validés par conséquent votre résultat concernant cette procédure est négatif (vous serez alerté des sanctions éventuelles concernant votre SIAE prochainement) conformément à l’instruction N° DGEFP/SDPAE/MIP/2022/83 du 5 avril 2022 relative à la mise en œuvre opérationnelle du contrôle a posteriori des recrutements en auto-prescription prévu par les articles R. 5132-1-12 à R. 5132-1-17 du code du travail.
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_close_refused_but_not_reviewed[sanction notification email body]
  '''
  Bonjour,
  
  Suite au dernier contrôle a posteriori, une ou plusieurs SIAE de votre département ont obtenu un résultat négatif.
  Conformément au  Décret n° 2021-1128 du 30 août 2021 relatif à l'insertion par l'activité économique, les manquements constatés ainsi que les sanctions envisagées doivent être notifiés aux SIAE.
  
  Veuillez vous connecter sur votre espace des emplois de l’inclusion afin d’effectuer cette démarche.
  http://localhost:8000/siae_evaluation/institution_evaluated_siae_list/1000/
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_populate
  dict({
    'num_queries': 15,
    'queries': list([
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'EvaluationCampaign.save[<site-packages>/django/db/models/base.py]',
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': '''
          UPDATE "siae_evaluations_evaluationcampaign"
          SET "percent_set_at" = %s,
              "evaluations_asked_at" = %s
          WHERE "siae_evaluations_evaluationcampaign"."id" = %s
        ''',
      }),
      dict({
        'origin': list([
          'EvaluationCampaign.number_of_siaes_to_select[siae_evaluations/models.py]',
          'EvaluationCampaign.eligible_siaes_under_ratio[siae_evaluations/models.py]',
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': '''
          SELECT COUNT(*)
          FROM
            (SELECT "job_applications_jobapplication"."to_company_id" AS "col1"
             FROM "job_applications_jobapplication"
             INNER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
             INNER JOIN "eligibility_eligibilitydiagnosis" ON ("job_applications_jobapplication"."eligibility_diagnosis_id" = "eligibility_eligibilitydiagnosis"."id")
             INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
             WHERE (NOT ("job_applications_jobapplication"."approval_id" IS NULL)
                    AND "approvals_approval"."number"::text LIKE %s
                    AND "approvals_approval"."start_at" = ("job_applications_jobapplication"."hiring_start_at")
                    AND "eligibility_eligibilitydiagnosis"."author_kind" = %s
                    AND "eligibility_eligibilitydiagnosis"."author_siae_id" = ("job_applications_jobapplication"."to_company_id")
                    AND "job_applications_jobapplication"."hiring_start_at" >= %s
                    AND "job_applications_jobapplication"."hiring_start_at" <= %s
                    AND "job_applications_jobapplication"."state" = %s
                    AND "companies_company"."department" = %s
                    AND "companies_company"."kind" IN (%s,
                                                       %s,
                                                       %s,
                                                       %s))
             GROUP BY 1
             HAVING COUNT("job_applications_jobapplication"."to_company_id") >= %s) subquery
        ''',
      }),
      dict({
        'origin': list([
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."to_company_id"
          FROM "job_applications_jobapplication"
          INNER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          INNER JOIN "eligibility_eligibilitydiagnosis" ON ("job_applications_jobapplication"."eligibility_diagnosis_id" = "eligibility_eligibilitydiagnosis"."id")
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          WHERE (NOT ("job_applications_jobapplication"."approval_id" IS NULL)
                 AND "approvals_approval"."number"::text LIKE %s
                 AND "approvals_approval"."start_at" = ("job_applications_jobapplication"."hiring_start_at")
                 AND "eligibility_eligibilitydiagnosis"."author_kind" = %s
                 AND "eligibility_eligibilitydiagnosis"."author_siae_id" = ("job_applications_jobapplication"."to_company_id")
                 AND "job_applications_jobapplication"."hiring_start_at" >= %s
                 AND "job_applications_jobapplication"."hiring_start_at" <= %s
                 AND "job_applications_jobapplication"."state" = %s
                 AND "companies_company"."department" = %s
                 AND "companies_company"."kind" IN (%s,
                                                    %s,
                                                    %s,
                                                    %s))
          GROUP BY "job_applications_jobapplication"."to_company_id"
          HAVING COUNT("job_applications_jobapplication"."to_company_id") >= %s
          ORDER BY RANDOM() ASC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'EvaluationCampaign.<genexpr>[siae_evaluations/models.py]',
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND "companies_company"."id" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': '''
          INSERT INTO "siae_evaluations_evaluatedsiae" ("evaluation_campaign_id",
                                                        "siae_id",
                                                        "reviewed_at",
                                                        "final_reviewed_at",
                                                        "submission_freezed_at",
                                                        "notified_at",
                                                        "notification_reason",
                                                        "notification_text",
                                                        "reminder_sent_at")
          VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s) RETURNING "siae_evaluations_evaluatedsiae"."id"
        ''',
      }),
      dict({
        'origin': list([
          'select_min_max_job_applications[siae_evaluations/models.py]',
          'EvaluationCampaign.<listcomp>[siae_evaluations/models.py]',
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "job_applications_jobapplication"
          INNER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          INNER JOIN "eligibility_eligibilitydiagnosis" ON ("job_applications_jobapplication"."eligibility_diagnosis_id" = "eligibility_eligibilitydiagnosis"."id")
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          WHERE (NOT ("job_applications_jobapplication"."approval_id" IS NULL)
                 AND "approvals_approval"."number"::text LIKE %s
                 AND "approvals_approval"."start_at" = ("job_applications_jobapplication"."hiring_start_at")
                 AND "eligibility_eligibilitydiagnosis"."author_kind" = %s
                 AND "eligibility_eligibilitydiagnosis"."author_siae_id" = ("job_applications_jobapplication"."to_company_id")
                 AND "job_applications_jobapplication"."hiring_start_at" >= %s
                 AND "job_applications_jobapplication"."hiring_start_at" <= %s
                 AND "job_applications_jobapplication"."state" = %s
                 AND "companies_company"."department" = %s
                 AND "companies_company"."kind" IN (%s,
                                                    %s,
                                                    %s,
                                                    %s)
                 AND "job_applications_jobapplication"."to_company_id" = %s)
        ''',
      }),
      dict({
        'origin': list([
          'EvaluationCampaign.<listcomp>[siae_evaluations/models.py]',
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_link",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."hiring_without_approval",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 "eligibility_eligibilitydiagnosis"."id",
                 "eligibility_eligibilitydiagnosis"."author_id",
                 "eligibility_eligibilitydiagnosis"."author_kind",
                 "eligibility_eligibilitydiagnosis"."author_prescriber_organization_id",
                 "eligibility_eligibilitydiagnosis"."created_at",
                 "eligibility_eligibilitydiagnosis"."updated_at",
                 "eligibility_eligibilitydiagnosis"."expires_at",
                 "eligibility_eligibilitydiagnosis"."job_seeker_id",
                 "eligibility_eligibilitydiagnosis"."author_siae_id",
                 T5."id",
                 T5."address_line_1",
                 T5."address_line_2",
                 T5."post_code",
                 T5."city",
                 T5."department",
                 T5."coords",
                 T5."geocoding_score",
                 T5."geocoding_updated_at",
                 T5."ban_api_resolved_address",
                 T5."insee_city_id",
                 T5."name",
                 T5."created_at",
                 T5."updated_at",
                 T5."uid",
                 T5."active_members_email_reminder_last_sent_at",
                 T5."siret",
                 T5."naf",
                 T5."kind",
                 T5."brand",
                 T5."phone",
                 T5."email",
                 T5."auth_email",
                 T5."website",
                 T5."description",
                 T5."provided_support",
                 T5."source",
                 T5."created_by_id",
                 T5."block_job_applications",
                 T5."job_applications_blocked_at",
                 T5."convention_id",
                 T5."job_app_score",
                 T5."is_searchable",
                 T5."rdv_solidarites_id",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind"
          FROM "job_applications_jobapplication"
          INNER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          INNER JOIN "eligibility_eligibilitydiagnosis" ON ("job_applications_jobapplication"."eligibility_diagnosis_id" = "eligibility_eligibilitydiagnosis"."id")
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          INNER JOIN "companies_company" T5 ON ("eligibility_eligibilitydiagnosis"."author_siae_id" = T5."id")
          WHERE (NOT ("job_applications_jobapplication"."approval_id" IS NULL)
                 AND "approvals_approval"."number"::text LIKE %s
                 AND "approvals_approval"."start_at" = ("job_applications_jobapplication"."hiring_start_at")
                 AND "eligibility_eligibilitydiagnosis"."author_kind" = %s
                 AND "eligibility_eligibilitydiagnosis"."author_siae_id" = ("job_applications_jobapplication"."to_company_id")
                 AND "job_applications_jobapplication"."hiring_start_at" >= %s
                 AND "job_applications_jobapplication"."hiring_start_at" <= %s
                 AND "job_applications_jobapplication"."state" = %s
                 AND "companies_company"."department" = %s
                 AND "companies_company"."kind" IN (%s,
                                                    %s,
                                                    %s,
                                                    %s)
                 AND "job_applications_jobapplication"."to_company_id" = %s)
          ORDER BY RANDOM() ASC
          LIMIT 2
        ''',
      }),
      dict({
        'origin': list([
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': '''
          INSERT INTO "siae_evaluations_evaluatedjobapplication" ("job_application_id",
                                                                  "evaluated_siae_id",
                                                                  "labor_inspector_explanation")
          VALUES (%s, %s, %s),
                 (%s, %s, %s) RETURNING "siae_evaluations_evaluatedjobapplication"."id"
        ''',
      }),
      dict({
        'origin': list([
          'VariableNode[siae_evaluations/email/to_siae_selected_body.txt]',
          'BlockNode[layout/base_email_text_body.txt]',
          'AutoEscapeControlNode[layout/base_email_text_body.txt]',
          'ExtendsNode[siae_evaluations/email/to_siae_selected_body.txt]',
          'get_email_text_template[utils/emails.py]',
          'get_email_message[utils/emails.py]',
          'SIAEEmailFactory.selected[siae_evaluations/emails.py]',
          '<listcomp>[siae_evaluations/models.py]',
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': '''
          SELECT "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at"
          FROM "companies_siaeconvention"
          WHERE "companies_siaeconvention"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'get_email_message[utils/emails.py]',
          'SIAEEmailFactory.selected[siae_evaluations/emails.py]',
          '<listcomp>[siae_evaluations/models.py]',
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': '''
          SELECT "users_user"."email"
          FROM "users_user"
          INNER JOIN "companies_companymembership" ON ("users_user"."id" = "companies_companymembership"."user_id")
          WHERE "companies_companymembership"."id" IN
              (SELECT U0."id"
               FROM "companies_companymembership" U0
               INNER JOIN "users_user" U2 ON (U0."user_id" = U2."id")
               WHERE (U0."company_id" = %s
                      AND U2."is_active"
                      AND U0."is_active"
                      AND U0."is_admin"
                      AND U2."is_active"))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'get_email_message[utils/emails.py]',
          'CampaignEmailFactory.selected_siae[siae_evaluations/emails.py]',
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': '''
          SELECT "users_user"."email"
          FROM "users_user"
          INNER JOIN "institutions_institutionmembership" ON ("users_user"."id" = "institutions_institutionmembership"."user_id")
          WHERE "institutions_institutionmembership"."id" IN
              (SELECT U0."id"
               FROM "institutions_institutionmembership" U0
               INNER JOIN "users_user" U2 ON (U0."user_id" = U2."id")
               WHERE (U0."institution_id" = %s
                      AND U2."is_active"
                      AND U0."is_active"))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'Email.save[<site-packages>/django/db/models/base.py]',
          'AsyncEmailBackend.send_messages[emails/tasks.py]',
          'send_email_messages[utils/emails.py]',
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': '''
          INSERT INTO "emails_email" ("to",
                                      "cc",
                                      "bcc",
                                      "subject",
                                      "body_text",
                                      "from_email",
                                      "reply_to",
                                      "created_at",
                                      "esp_response")
          VALUES (%s::citext[], %s::citext[], %s::citext[], %s, %s, %s, %s::citext[], %s, %s) RETURNING "emails_email"."id"
        ''',
      }),
      dict({
        'origin': list([
          'Email.save[<site-packages>/django/db/models/base.py]',
          'AsyncEmailBackend.send_messages[emails/tasks.py]',
          'send_email_messages[utils/emails.py]',
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': '''
          INSERT INTO "emails_email" ("to",
                                      "cc",
                                      "bcc",
                                      "subject",
                                      "body_text",
                                      "from_email",
                                      "reply_to",
                                      "created_at",
                                      "esp_response")
          VALUES (%s::citext[], %s::citext[], %s::citext[], %s, %s, %s, %s::citext[], %s, %s) RETURNING "emails_email"."id"
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
          'EvaluationCampaign.populate[siae_evaluations/models.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: TestEvaluationCampaignManager.test_transition_to_adversarial_phase[accepted review email body]
  '''
  Bonjour,
  
  La DDETS 1 a validé la conformité des justificatifs que vous avez transmis dans le cadre du contrôle a posteriori sur les embauches réalisées en auto-prescription entre le 02 Octobre 2022 et le 02 Décembre 2022.
  
  Cette campagne de contrôle est terminée pour votre SIAE EI Geo accepted ID-2004.
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_transition_to_adversarial_phase[force accepted email body]
  '''
  Bonjour,
  
  La campagne de contrôle a posteriori sur les embauches réalisées en auto-prescription entre le 02 Octobre 2022 et le 02 Décembre 2022 entre en phase contradictoire.
  
  La DDETS 1 n’a pas étudié la conformité des justificatifs que vous avez transmis dans le délai imparti. Par conséquent, vos auto-prescriptions sont considérées comme conformes.
  
  Cette campagne de contrôle est terminée pour votre SIAE EI Prim’vert ID-2003.
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_transition_to_adversarial_phase[institution summary email body]
  '''
  Bonjour,
  
  Vous trouverez ci-dessous la liste des SIAE qui n’ont transmis aucun justificatif dans le cadre du contrôle a posteriori :
  
  - EI Les grands jardins ID-2001
  
  - EI Les petits jardins ID-2002
  
  Ces structures n’ayant pas transmis les justificatifs dans le délai des 6 semaines passent automatiquement en phase contradictoire et disposent à nouveau de 6 semaines pour se manifester.
  
  N’hésitez pas à les contacter afin de comprendre les éventuelles difficultés rencontrées pour transmettre les justificatifs.
  
  ---
  
  Les structures suivantes avaient transmis leurs justificatifs mais n’ont pas eu de retour de la DDETS, leur contrôle est considéré positif :
  
  - EI Prim’vert ID-2003
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_transition_to_adversarial_phase[no docs email body]
  '''
  Bonjour,
  
  Sauf erreur de notre part, vous n’avez pas transmis les justificatifs dans le cadre du contrôle a posteriori sur vos embauches réalisées en auto-prescription.
  
  La DDETS 1 ne peut donc pas faire de contrôle, par conséquent vous entrez dans une phase dite contradictoire de 6 semaines (durant laquelle il vous faut transmettre les justificatifs demandés) et qui se clôturera sur une décision (validation ou sanction pouvant aller jusqu’à un retrait d’aide au poste) conformément à l’instruction N° DGEFP/SDPAE/MIP/2022/83 du 5 avril 2022 relative à la mise en œuvre opérationnelle du contrôle a posteriori des recrutements en auto-prescription prévu par les articles R. 5132-1-12 à R. 5132-1-17 du code du travail.
  
  Pour transmettre les justificatifs, rendez-vous sur le tableau de bord de EI Les petits jardins ID-2002 à la rubrique “Contrôle a posteriori > Campagne en cours”.
  
  Accès direct à votre liste d’auto-prescriptions : http://localhost:8000/siae_evaluation/siae_job_applications_list/1002/
  
  En cas de besoin, vous pouvez consulter ce mode d’emploi : https://aide.emplois.inclusion.beta.gouv.fr/sections/15257969468817-Contrôle-a-posteriori-pour-les-SIAE/
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_transition_to_adversarial_phase[no response email body]
  '''
  Bonjour,
  
  Sauf erreur de notre part, vous n’avez pas transmis les justificatifs dans le cadre du contrôle a posteriori sur vos embauches réalisées en auto-prescription.
  
  La DDETS 1 ne peut donc pas faire de contrôle, par conséquent vous entrez dans une phase dite contradictoire de 6 semaines (durant laquelle il vous faut transmettre les justificatifs demandés) et qui se clôturera sur une décision (validation ou sanction pouvant aller jusqu’à un retrait d’aide au poste) conformément à l’instruction N° DGEFP/SDPAE/MIP/2022/83 du 5 avril 2022 relative à la mise en œuvre opérationnelle du contrôle a posteriori des recrutements en auto-prescription prévu par les articles R. 5132-1-12 à R. 5132-1-17 du code du travail.
  
  Pour transmettre les justificatifs, rendez-vous sur le tableau de bord de EI Les grands jardins ID-2001 à la rubrique “Contrôle a posteriori > Campagne en cours”.
  
  Accès direct à votre liste d’auto-prescriptions : http://localhost:8000/siae_evaluation/siae_job_applications_list/1001/
  
  En cas de besoin, vous pouvez consulter ce mode d’emploi : https://aide.emplois.inclusion.beta.gouv.fr/sections/15257969468817-Contrôle-a-posteriori-pour-les-SIAE/
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_transition_to_adversarial_phase[refused review email body]
  '''
  Bonjour,
  
  La DDETS 1 a vérifié tous les justificatifs que vous avez transmis dans le cadre du contrôle a posteriori sur vos embauches réalisées en auto-prescription entre le 02 Octobre 2022 et le 02 Décembre 2022.
  
  Suite à cette vérification, un ou plusieurs justificatifs sont attendus par la DDETS 1.
  
  Rendez-vous sur le tableau de bord de EI Geo refused ID-2005 à la rubrique “Campagne en cours”.
  
  Une ou plusieurs de vos auto-prescriptions nécessitent la transmission de nouveaux justificatifs.
  
  Dans la page de chaque auto-prescription, un commentaire concernant le refus du premier justificatif peut être présent afin de vous fournir plus de précisions.
  
  En cas de besoin, vous pouvez consulter ce mode d’emploi : https://aide.emplois.inclusion.beta.gouv.fr/hc/fr/sections/15257969468817-Contrôle-a-posteriori-pour-les-SIAE
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_transition_to_adversarial_phase_accepted_but_not_reviewed[positive review email body]
  '''
  Bonjour,
  
  La DDETS 1 a validé la conformité des justificatifs que vous avez transmis dans le cadre du contrôle a posteriori sur les embauches réalisées en auto-prescription entre le 02 Octobre 2022 et le 02 Décembre 2022.
  
  Cette campagne de contrôle est terminée pour votre SIAE EI Prim’vert ID-1234.
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_transition_to_adversarial_phase_force_accepted[force accepted email body]
  '''
  Bonjour,
  
  La campagne de contrôle a posteriori sur les embauches réalisées en auto-prescription entre le 02 Octobre 2022 et le 02 Décembre 2022 entre en phase contradictoire.
  
  La DDETS 1 n’a pas étudié la conformité des justificatifs que vous avez transmis dans le délai imparti. Par conséquent, vos auto-prescriptions sont considérées comme conformes.
  
  Cette campagne de contrôle est terminée pour votre SIAE EI Prim’vert ID-2000.
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_transition_to_adversarial_phase_force_accepted[institution summary email body]
  '''
  Bonjour,
  
  Les structures suivantes avaient transmis leurs justificatifs mais n’ont pas eu de retour de la DDETS, leur contrôle est considéré positif :
  
  - EI Prim’vert ID-2000
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_transition_to_adversarial_phase_forced_to_adversarial_stage[institution summary email body]
  '''
  Bonjour,
  
  Vous trouverez ci-dessous la liste des SIAE qui n’ont transmis aucun justificatif dans le cadre du contrôle a posteriori :
  
  - EI Les grands jardins ID-2000
  
  Ces structures n’ayant pas transmis les justificatifs dans le délai des 6 semaines passent automatiquement en phase contradictoire et disposent à nouveau de 6 semaines pour se manifester.
  
  N’hésitez pas à les contacter afin de comprendre les éventuelles difficultés rencontrées pour transmettre les justificatifs.
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_transition_to_adversarial_phase_forced_to_adversarial_stage[no response email body]
  '''
  Bonjour,
  
  Sauf erreur de notre part, vous n’avez pas transmis les justificatifs dans le cadre du contrôle a posteriori sur vos embauches réalisées en auto-prescription.
  
  La DDETS 1 ne peut donc pas faire de contrôle, par conséquent vous entrez dans une phase dite contradictoire de 6 semaines (durant laquelle il vous faut transmettre les justificatifs demandés) et qui se clôturera sur une décision (validation ou sanction pouvant aller jusqu’à un retrait d’aide au poste) conformément à l’instruction N° DGEFP/SDPAE/MIP/2022/83 du 5 avril 2022 relative à la mise en œuvre opérationnelle du contrôle a posteriori des recrutements en auto-prescription prévu par les articles R. 5132-1-12 à R. 5132-1-17 du code du travail.
  
  Pour transmettre les justificatifs, rendez-vous sur le tableau de bord de EI Les grands jardins ID-2000 à la rubrique “Contrôle a posteriori > Campagne en cours”.
  
  Accès direct à votre liste d’auto-prescriptions : http://localhost:8000/siae_evaluation/siae_job_applications_list/1000/
  
  En cas de besoin, vous pouvez consulter ce mode d’emploi : https://aide.emplois.inclusion.beta.gouv.fr/sections/15257969468817-Contrôle-a-posteriori-pour-les-SIAE/
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
# name: TestEvaluationCampaignManager.test_transition_to_adversarial_phase_refused_but_not_reviewed[negative review email body]
  '''
  Bonjour,
  
  La DDETS 1 a vérifié tous les justificatifs que vous avez transmis dans le cadre du contrôle a posteriori sur vos embauches réalisées en auto-prescription entre le 02 Octobre 2022 et le 02 Décembre 2022.
  
  Suite à cette vérification, un ou plusieurs justificatifs sont attendus par la DDETS 1.
  
  Rendez-vous sur le tableau de bord de EI Prim’vert ID-1234 à la rubrique “Campagne en cours”.
  
  Une ou plusieurs de vos auto-prescriptions nécessitent la transmission de nouveaux justificatifs.
  
  Dans la page de chaque auto-prescription, un commentaire concernant le refus du premier justificatif peut être présent afin de vous fournir plus de précisions.
  
  En cas de besoin, vous pouvez consulter ce mode d’emploi : https://aide.emplois.inclusion.beta.gouv.fr/hc/fr/sections/15257969468817-Contrôle-a-posteriori-pour-les-SIAE
  
  Cordialement,
  
  ---
  [DEV] Cet email est envoyé depuis un environnement de démonstration, merci de ne pas en tenir compte [DEV]
  Les emplois de l'inclusion
  http://localhost:8000
  '''
# ---
