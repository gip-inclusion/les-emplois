# serializer version: 1
# name: test_candidatures_geiq_is_empty[cancelled][empty]
  dict({
    'count': 0,
    'next': None,
    'previous': None,
    'results': list([
    ]),
  })
# ---
# name: test_candidatures_geiq_is_empty[new][empty]
  dict({
    'count': 0,
    'next': None,
    'previous': None,
    'results': list([
    ]),
  })
# ---
# name: test_candidatures_geiq_is_empty[obsolete][empty]
  dict({
    'count': 0,
    'next': None,
    'previous': None,
    'results': list([
    ]),
  })
# ---
# name: test_candidatures_geiq_is_empty[postponed][empty]
  dict({
    'count': 0,
    'next': None,
    'previous': None,
    'results': list([
    ]),
  })
# ---
# name: test_candidatures_geiq_is_empty[prior_to_hire][empty]
  dict({
    'count': 0,
    'next': None,
    'previous': None,
    'results': list([
    ]),
  })
# ---
# name: test_candidatures_geiq_is_empty[processing][empty]
  dict({
    'count': 0,
    'next': None,
    'previous': None,
    'results': list([
    ]),
  })
# ---
# name: test_candidatures_geiq_is_empty[refused][empty]
  dict({
    'count': 0,
    'next': None,
    'previous': None,
    'results': list([
    ]),
  })
# ---
# name: test_candidatures_geiq_nominal[SQL queries with result]
  dict({
    'num_queries': 7,
    'queries': list([
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Paginator.count[<site-packages>/django/core/paginator.py]',
          'GeiqJobApplicationListView.list[<site-packages>/rest_framework/mixins.py]',
          'GeiqJobApplicationListView.get[api/geiq/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "job_applications_jobapplication"
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          WHERE ("job_applications_jobapplication"."state" = %s
                 AND "companies_company"."kind" = %s
                 AND "companies_company"."siret"::text LIKE %s)
        ''',
      }),
      dict({
        'origin': list([
          'GeiqJobApplicationListView.list[<site-packages>/rest_framework/mixins.py]',
          'GeiqJobApplicationListView.get[api/geiq/views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_link",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."hiring_without_approval",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."ata_allocation_since",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "eligibility_geiqeligibilitydiagnosis"."id",
                 "eligibility_geiqeligibilitydiagnosis"."author_id",
                 "eligibility_geiqeligibilitydiagnosis"."author_kind",
                 "eligibility_geiqeligibilitydiagnosis"."author_prescriber_organization_id",
                 "eligibility_geiqeligibilitydiagnosis"."created_at",
                 "eligibility_geiqeligibilitydiagnosis"."updated_at",
                 "eligibility_geiqeligibilitydiagnosis"."expires_at",
                 "eligibility_geiqeligibilitydiagnosis"."job_seeker_id",
                 "eligibility_geiqeligibilitydiagnosis"."author_geiq_id",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."is_head_office",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."is_authorized",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source",
                 "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text",
                 "jobs_rome"."updated_at",
                 "jobs_rome"."code",
                 "jobs_rome"."name"
          FROM "job_applications_jobapplication"
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON ("users_user"."id" = "users_jobseekerprofile"."user_id")
          LEFT OUTER JOIN "eligibility_geiqeligibilitydiagnosis" ON ("job_applications_jobapplication"."geiq_eligibility_diagnosis_id" = "eligibility_geiqeligibilitydiagnosis"."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "companies_jobdescription" ON ("job_applications_jobapplication"."hired_job_id" = "companies_jobdescription"."id")
          LEFT OUTER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          LEFT OUTER JOIN "jobs_rome" ON ("jobs_appellation"."rome_id" = "jobs_rome"."code")
          WHERE ("job_applications_jobapplication"."state" = %s
                 AND "companies_company"."kind" = %s
                 AND "companies_company"."siret"::text LIKE %s)
          ORDER BY "companies_company"."siret" ASC,
                   "users_user"."last_name" ASC,
                   "users_user"."first_name" ASC,
                   "job_applications_jobapplication"."id" ASC
          LIMIT 2
        ''',
      }),
      dict({
        'origin': list([
          'GeiqJobApplicationListView.list[<site-packages>/rest_framework/mixins.py]',
          'GeiqJobApplicationListView.get[api/geiq/views.py]',
        ]),
        'sql': '''
          SELECT ("eligibility_geiqselectedadministrativecriteria"."eligibility_diagnosis_id") AS "_prefetch_related_val_eligibility_diagnosis_id",
                 "eligibility_geiqadministrativecriteria"."id",
                 "eligibility_geiqadministrativecriteria"."name",
                 "eligibility_geiqadministrativecriteria"."desc",
                 "eligibility_geiqadministrativecriteria"."written_proof",
                 "eligibility_geiqadministrativecriteria"."written_proof_url",
                 "eligibility_geiqadministrativecriteria"."written_proof_validity",
                 "eligibility_geiqadministrativecriteria"."kind",
                 "eligibility_geiqadministrativecriteria"."ui_rank",
                 "eligibility_geiqadministrativecriteria"."created_at",
                 "eligibility_geiqadministrativecriteria"."created_by_id",
                 "eligibility_geiqadministrativecriteria"."parent_id",
                 "eligibility_geiqadministrativecriteria"."annex",
                 "eligibility_geiqadministrativecriteria"."level",
                 "eligibility_geiqadministrativecriteria"."slug",
                 "eligibility_geiqadministrativecriteria"."api_code"
          FROM "eligibility_geiqadministrativecriteria"
          INNER JOIN "eligibility_geiqselectedadministrativecriteria" ON ("eligibility_geiqadministrativecriteria"."id" = "eligibility_geiqselectedadministrativecriteria"."administrative_criteria_id")
          WHERE "eligibility_geiqselectedadministrativecriteria"."eligibility_diagnosis_id" IN (%s,
                                                                                                %s)
          ORDER BY "eligibility_geiqadministrativecriteria"."level" ASC NULLS LAST,
                   "eligibility_geiqadministrativecriteria"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'GeiqJobApplicationListView.list[<site-packages>/rest_framework/mixins.py]',
          'GeiqJobApplicationListView.get[api/geiq/views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_prioraction"."id",
                 "job_applications_prioraction"."job_application_id",
                 "job_applications_prioraction"."action",
                 "job_applications_prioraction"."dates"
          FROM "job_applications_prioraction"
          WHERE ("job_applications_prioraction"."action" IN (%s,
                                                             %s,
                                                             %s,
                                                             %s)
                 AND "job_applications_prioraction"."job_application_id" IN (%s,
                                                                             %s))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'GeiqJobApplicationListView.list[<site-packages>/rest_framework/mixins.py]',
          'GeiqJobApplicationListView.get[api/geiq/views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_prioraction"."id",
                 "job_applications_prioraction"."job_application_id",
                 "job_applications_prioraction"."action",
                 "job_applications_prioraction"."dates"
          FROM "job_applications_prioraction"
          WHERE ("job_applications_prioraction"."action" IN (%s,
                                                             %s,
                                                             %s,
                                                             %s)
                 AND "job_applications_prioraction"."job_application_id" IN (%s,
                                                                             %s))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: test_candidatures_geiq_nominal[SQL queries without filter]
  dict({
    'num_queries': 7,
    'queries': list([
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Paginator.count[<site-packages>/django/core/paginator.py]',
          'GeiqJobApplicationListView.list[<site-packages>/rest_framework/mixins.py]',
          'GeiqJobApplicationListView.get[api/geiq/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "job_applications_jobapplication"
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          WHERE ("job_applications_jobapplication"."state" = %s
                 AND "companies_company"."kind" = %s)
        ''',
      }),
      dict({
        'origin': list([
          'GeiqJobApplicationListView.list[<site-packages>/rest_framework/mixins.py]',
          'GeiqJobApplicationListView.get[api/geiq/views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_link",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."hiring_without_approval",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."ata_allocation_since",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "eligibility_geiqeligibilitydiagnosis"."id",
                 "eligibility_geiqeligibilitydiagnosis"."author_id",
                 "eligibility_geiqeligibilitydiagnosis"."author_kind",
                 "eligibility_geiqeligibilitydiagnosis"."author_prescriber_organization_id",
                 "eligibility_geiqeligibilitydiagnosis"."created_at",
                 "eligibility_geiqeligibilitydiagnosis"."updated_at",
                 "eligibility_geiqeligibilitydiagnosis"."expires_at",
                 "eligibility_geiqeligibilitydiagnosis"."job_seeker_id",
                 "eligibility_geiqeligibilitydiagnosis"."author_geiq_id",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."is_head_office",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."is_authorized",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source",
                 "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text",
                 "jobs_rome"."updated_at",
                 "jobs_rome"."code",
                 "jobs_rome"."name"
          FROM "job_applications_jobapplication"
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON ("users_user"."id" = "users_jobseekerprofile"."user_id")
          LEFT OUTER JOIN "eligibility_geiqeligibilitydiagnosis" ON ("job_applications_jobapplication"."geiq_eligibility_diagnosis_id" = "eligibility_geiqeligibilitydiagnosis"."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "companies_jobdescription" ON ("job_applications_jobapplication"."hired_job_id" = "companies_jobdescription"."id")
          LEFT OUTER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          LEFT OUTER JOIN "jobs_rome" ON ("jobs_appellation"."rome_id" = "jobs_rome"."code")
          WHERE ("job_applications_jobapplication"."state" = %s
                 AND "companies_company"."kind" = %s)
          ORDER BY "companies_company"."siret" ASC,
                   "users_user"."last_name" ASC,
                   "users_user"."first_name" ASC,
                   "job_applications_jobapplication"."id" ASC
          LIMIT 2
        ''',
      }),
      dict({
        'origin': list([
          'GeiqJobApplicationListView.list[<site-packages>/rest_framework/mixins.py]',
          'GeiqJobApplicationListView.get[api/geiq/views.py]',
        ]),
        'sql': '''
          SELECT ("eligibility_geiqselectedadministrativecriteria"."eligibility_diagnosis_id") AS "_prefetch_related_val_eligibility_diagnosis_id",
                 "eligibility_geiqadministrativecriteria"."id",
                 "eligibility_geiqadministrativecriteria"."name",
                 "eligibility_geiqadministrativecriteria"."desc",
                 "eligibility_geiqadministrativecriteria"."written_proof",
                 "eligibility_geiqadministrativecriteria"."written_proof_url",
                 "eligibility_geiqadministrativecriteria"."written_proof_validity",
                 "eligibility_geiqadministrativecriteria"."kind",
                 "eligibility_geiqadministrativecriteria"."ui_rank",
                 "eligibility_geiqadministrativecriteria"."created_at",
                 "eligibility_geiqadministrativecriteria"."created_by_id",
                 "eligibility_geiqadministrativecriteria"."parent_id",
                 "eligibility_geiqadministrativecriteria"."annex",
                 "eligibility_geiqadministrativecriteria"."level",
                 "eligibility_geiqadministrativecriteria"."slug",
                 "eligibility_geiqadministrativecriteria"."api_code"
          FROM "eligibility_geiqadministrativecriteria"
          INNER JOIN "eligibility_geiqselectedadministrativecriteria" ON ("eligibility_geiqadministrativecriteria"."id" = "eligibility_geiqselectedadministrativecriteria"."administrative_criteria_id")
          WHERE "eligibility_geiqselectedadministrativecriteria"."eligibility_diagnosis_id" IN (%s,
                                                                                                %s)
          ORDER BY "eligibility_geiqadministrativecriteria"."level" ASC NULLS LAST,
                   "eligibility_geiqadministrativecriteria"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'GeiqJobApplicationListView.list[<site-packages>/rest_framework/mixins.py]',
          'GeiqJobApplicationListView.get[api/geiq/views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_prioraction"."id",
                 "job_applications_prioraction"."job_application_id",
                 "job_applications_prioraction"."action",
                 "job_applications_prioraction"."dates"
          FROM "job_applications_prioraction"
          WHERE ("job_applications_prioraction"."action" IN (%s,
                                                             %s,
                                                             %s,
                                                             %s)
                 AND "job_applications_prioraction"."job_application_id" IN (%s,
                                                                             %s))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'GeiqJobApplicationListView.list[<site-packages>/rest_framework/mixins.py]',
          'GeiqJobApplicationListView.get[api/geiq/views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_prioraction"."id",
                 "job_applications_prioraction"."job_application_id",
                 "job_applications_prioraction"."action",
                 "job_applications_prioraction"."dates"
          FROM "job_applications_prioraction"
          WHERE ("job_applications_prioraction"."action" IN (%s,
                                                             %s,
                                                             %s,
                                                             %s)
                 AND "job_applications_prioraction"."job_application_id" IN (%s,
                                                                             %s))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: test_candidatures_geiq_nominal[SQL queries without result]
  dict({
    'num_queries': 3,
    'queries': list([
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'ROLLBACK TO SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: test_candidatures_geiq_nominal[empty]
  dict({
    'count': 0,
    'next': None,
    'previous': None,
    'results': list([
    ]),
  })
# ---
# name: test_candidatures_geiq_nominal[with_results]
  dict({
    'count': 2,
    'next': None,
    'previous': None,
    'results': list([
      dict({
        'adresse_code_postal': '35000',
        'adresse_ligne_1': '12 rue Georges Bizet',
        'adresse_ligne_2': '',
        'adresse_ville': 'Rennes',
        'auteur_diagnostic': 'GEIQ',
        'civilite': 'F',
        'criteres_eligibilite': list([
          '-26',
        ]),
        'date_debut_contrat': '2023-07-21',
        'date_fin_contrat': '2025-07-21',
        'date_naissance': '1990-01-01',
        'duree_hebdo': 47,
        'est_vae_inversee': True,
        'id_embauche': 'bf657b69-3245-430c-b461-09c6792b9504',
        'id_utilisateur': '7614fc4b-aef9-4694-ab17-12324300180a',
        'jours_accompagnement': 42,
        'mises_en_situation_pro': list([
          dict({
            'code': 'PMSMP',
            'date_debut': '2023-07-21',
            'date_fin': '2025-07-21',
          }),
        ]),
        'nb_heures_formation': 1664,
        'niveau_formation': 'N3',
        'niveau_qualification': 'SQ',
        'nom': 'Doe',
        'poste_occupe': 'N1101',
        'precision_prescripteur': "HUDA - Hébergement d'urgence pour demandeurs d'asile",
        'prenom': 'Jane',
        'prequalifications': list([
          dict({
            'code': 'AFPR',
            'date_debut': '2023-07-21',
            'date_fin': '2025-07-21',
          }),
        ]),
        'prescripteur_origine': 'AUTRE',
        'siret_employeur': '11832575900001',
        'type_contrat': 'CPRO',
        'type_qualification': 'CQP',
      }),
      dict({
        'adresse_code_postal': '35000',
        'adresse_ligne_1': '12 rue Georges Bizet',
        'adresse_ligne_2': '',
        'adresse_ville': 'Rennes',
        'auteur_diagnostic': 'PRESCRIPTEUR',
        'civilite': 'F',
        'criteres_eligibilite': list([
        ]),
        'date_debut_contrat': '2023-07-21',
        'date_fin_contrat': '2025-07-21',
        'date_naissance': '1990-01-01',
        'duree_hebdo': 35,
        'est_vae_inversee': False,
        'id_embauche': 'bf657b69-3245-430c-b461-09c6792b9505',
        'id_utilisateur': '7614fc4b-aef9-4694-ab17-12324300180a',
        'jours_accompagnement': 28,
        'mises_en_situation_pro': list([
        ]),
        'nb_heures_formation': 12,
        'niveau_formation': 'N3',
        'niveau_qualification': 'N3',
        'nom': 'Doe',
        'poste_occupe': 'N1101',
        'precision_prescripteur': 'France Travail',
        'prenom': 'Jane',
        'prequalifications': list([
        ]),
        'prescripteur_origine': 'PE',
        'siret_employeur': '11832575966666',
        'type_contrat': 'CAPP',
        'type_qualification': 'CCN',
      }),
    ]),
  })
# ---
