# serializer version: 1
# name: TestSiaeAPIFetchList.test_performances
  dict({
    'num_queries': 6,
    'queries': list([
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'CompanyFilterSet.filter_queryset[api/siae_api/viewsets.py]',
          'SiaeViewSet.list[<site-packages>/rest_framework/mixins.py]',
          'SiaeViewSet.list[api/siae_api/viewsets.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."code_insee" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'Paginator.count[<site-packages>/django/core/paginator.py]',
          'SiaeViewSet.list[<site-packages>/rest_framework/mixins.py]',
          'SiaeViewSet.list[api/siae_api/viewsets.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND ST_DWithin("companies_company"."coords", %s, %s))
        ''',
      }),
      dict({
        'origin': list([
          'SiaeViewSet.list[<site-packages>/rest_framework/mixins.py]',
          'SiaeViewSet.list[api/siae_api/viewsets.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND ST_DWithin("companies_company"."coords", %s, %s))
          ORDER BY "companies_company"."id" ASC
          LIMIT 2
        ''',
      }),
      dict({
        'origin': list([
          'SiaeViewSet.list[<site-packages>/rest_framework/mixins.py]',
          'SiaeViewSet.list[api/siae_api/viewsets.py]',
        ]),
        'sql': '''
          SELECT "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source",
                 "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text",
                 "jobs_rome"."updated_at",
                 "jobs_rome"."code",
                 "jobs_rome"."name",
                 "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "companies_jobdescription"
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          LEFT OUTER JOIN "jobs_rome" ON ("jobs_appellation"."rome_id" = "jobs_rome"."code")
          LEFT OUTER JOIN "cities_city" ON ("companies_jobdescription"."location_id" = "cities_city"."id")
          WHERE ("companies_jobdescription"."is_active"
                 AND "companies_jobdescription"."company_id" IN (%s,
                                                                 %s))
          ORDER BY "companies_jobdescription"."updated_at" DESC,
                   "companies_jobdescription"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
