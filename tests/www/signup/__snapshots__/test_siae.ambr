# serializer version: 1
# name: TestCompanySignup.test_company_select_does_not_die_under_requests
  dict({
    'num_queries': 6,
    'queries': list([
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'IfNode[signup/company_select.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[signup/company_select.html]',
          'company_select[www/signup/views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("companies_company"."id") "companies_company"."id",
                             "companies_company"."address_line_1",
                             "companies_company"."address_line_2",
                             "companies_company"."post_code",
                             "companies_company"."city",
                             "companies_company"."department",
                             "companies_company"."coords",
                             "companies_company"."geocoding_score",
                             "companies_company"."geocoding_updated_at",
                             "companies_company"."ban_api_resolved_address",
                             "companies_company"."insee_city_id",
                             "companies_company"."name",
                             "companies_company"."created_at",
                             "companies_company"."updated_at",
                             "companies_company"."uid",
                             "companies_company"."active_members_email_reminder_last_sent_at",
                             "companies_company"."automatic_geocoding_update",
                             "companies_company"."siret",
                             "companies_company"."naf",
                             "companies_company"."kind",
                             "companies_company"."brand",
                             "companies_company"."phone",
                             "companies_company"."email",
                             "companies_company"."auth_email",
                             "companies_company"."website",
                             "companies_company"."description",
                             "companies_company"."provided_support",
                             "companies_company"."source",
                             "companies_company"."created_by_id",
                             "companies_company"."block_job_applications",
                             "companies_company"."job_applications_blocked_at",
                             "companies_company"."convention_id",
                             "companies_company"."job_app_score",
                             "companies_company"."is_searchable",
                             "companies_company"."rdv_solidarites_id"
          FROM "companies_company"
          LEFT OUTER JOIN "companies_companymembership" ON ("companies_company"."id" = "companies_companymembership"."company_id")
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND "companies_company"."siret"::text LIKE %s
                 AND "companies_companymembership"."user_id" IS NULL)
        ''',
      }),
      dict({
        'origin': list([
          'IfNode[signup/company_select.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[signup/company_select.html]',
          'company_select[www/signup/views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("companies_company"."id") "companies_company"."id",
                             "companies_company"."address_line_1",
                             "companies_company"."address_line_2",
                             "companies_company"."post_code",
                             "companies_company"."city",
                             "companies_company"."department",
                             "companies_company"."coords",
                             "companies_company"."geocoding_score",
                             "companies_company"."geocoding_updated_at",
                             "companies_company"."ban_api_resolved_address",
                             "companies_company"."insee_city_id",
                             "companies_company"."name",
                             "companies_company"."created_at",
                             "companies_company"."updated_at",
                             "companies_company"."uid",
                             "companies_company"."active_members_email_reminder_last_sent_at",
                             "companies_company"."automatic_geocoding_update",
                             "companies_company"."siret",
                             "companies_company"."naf",
                             "companies_company"."kind",
                             "companies_company"."brand",
                             "companies_company"."phone",
                             "companies_company"."email",
                             "companies_company"."auth_email",
                             "companies_company"."website",
                             "companies_company"."description",
                             "companies_company"."provided_support",
                             "companies_company"."source",
                             "companies_company"."created_by_id",
                             "companies_company"."block_job_applications",
                             "companies_company"."job_applications_blocked_at",
                             "companies_company"."convention_id",
                             "companies_company"."job_app_score",
                             "companies_company"."is_searchable",
                             "companies_company"."rdv_solidarites_id"
          FROM "companies_company"
          INNER JOIN "companies_companymembership" ON ("companies_company"."id" = "companies_companymembership"."company_id")
          INNER JOIN "users_user" ON ("companies_companymembership"."user_id" = "users_user"."id")
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND "companies_company"."siret"::text LIKE %s
                 AND NOT (EXISTS
                            (SELECT %s AS "a"
                             FROM "companies_company" U0
                             LEFT OUTER JOIN "companies_companymembership" U1 ON (U0."id" = U1."company_id")
                             WHERE (U1."user_id" IS NULL
                                    AND U0."id" = ("companies_company"."id"))
                             LIMIT 1))
                 AND "companies_companymembership"."is_admin"
                 AND "users_user"."is_active")
        ''',
      }),
      dict({
        'origin': list([
          'IfNode[signup/company_select.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[signup/company_select.html]',
          'company_select[www/signup/views.py]',
        ]),
        'sql': '''
          SELECT "companies_companymembership"."id",
                 "companies_companymembership"."user_id",
                 "companies_companymembership"."joined_at",
                 "companies_companymembership"."is_admin",
                 "companies_companymembership"."is_active",
                 "companies_companymembership"."created_at",
                 "companies_companymembership"."updated_at",
                 "companies_companymembership"."company_id",
                 "companies_companymembership"."updated_by_id",
                 "companies_companymembership"."notifications"
          FROM "companies_companymembership"
          WHERE "companies_companymembership"."company_id" IN (%s,
                                                               %s,
                                                               %s,
                                                               %s,
                                                               %s,
                                                               %s)
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'IfNode[signup/company_select.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[signup/company_select.html]',
          'company_select[www/signup/views.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "users_user"
          WHERE "users_user"."id" IN (%s,
                                      %s,
                                      %s,
                                      %s,
                                      %s,
                                      %s,
                                      %s,
                                      %s,
                                      %s,
                                      %s,
                                      %s,
                                      %s,
                                      %s,
                                      %s,
                                      %s,
                                      %s,
                                      %s,
                                      %s)
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
