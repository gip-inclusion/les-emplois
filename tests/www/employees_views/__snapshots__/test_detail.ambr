# serializer version: 1
# name: TestEmployeeDetailView.test_detail_view[employee detail view]
  dict({
    'num_queries': 24,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_companymembership"."id",
                 "companies_companymembership"."user_id",
                 "companies_companymembership"."joined_at",
                 "companies_companymembership"."is_admin",
                 "companies_companymembership"."is_active",
                 "companies_companymembership"."created_at",
                 "companies_companymembership"."updated_at",
                 "companies_companymembership"."company_id",
                 "companies_companymembership"."updated_by_id",
                 "companies_companymembership"."notifications"
          FROM "companies_companymembership"
          WHERE ("companies_companymembership"."user_id" = %s
                 AND "companies_companymembership"."is_active")
          ORDER BY "companies_companymembership"."created_at" ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_siaeconvention" U0
             WHERE (U0."deactivated_at" >= %s
                    AND U0."id" = ("companies_company"."convention_id"))
             LIMIT 1) AS "has_convention_in_grace_period",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at"
          FROM "companies_company"
          INNER JOIN "companies_companymembership" ON ("companies_company"."id" = "companies_companymembership"."company_id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND "companies_companymembership"."user_id" = %s
                 AND "companies_company"."id" IN (%s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1)
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."deactivated_at" >= %s
                                AND U0."id" = ("companies_company"."convention_id"))
                         LIMIT 1)))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'EmployeeDetailView.get_object[<site-packages>/django/views/generic/detail.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."ata_allocation_since",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at"
          FROM "users_user"
          LEFT OUTER JOIN "users_jobseekerprofile" ON ("users_user"."id" = "users_jobseekerprofile"."user_id")
          WHERE ("users_user"."kind" = %s
                 AND EXISTS
                   (SELECT %s AS "a"
                    FROM "job_applications_jobapplication" U0
                    WHERE (U0."job_seeker_id" = ("users_user"."id")
                           AND U0."state" = %s
                           AND U0."to_company_id" = %s)
                    LIMIT 1)
                 AND "users_user"."public_id" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.first[<site-packages>/django/db/models/query.py]',
          'EmployeeDetailView.get_job_application[www/employees_views/views.py]',
          'EmployeeDetailView.get_context_data[www/employees_views/views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_link",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."hiring_without_approval",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 "eligibility_eligibilitydiagnosis"."id",
                 "eligibility_eligibilitydiagnosis"."author_id",
                 "eligibility_eligibilitydiagnosis"."author_kind",
                 "eligibility_eligibilitydiagnosis"."author_prescriber_organization_id",
                 "eligibility_eligibilitydiagnosis"."created_at",
                 "eligibility_eligibilitydiagnosis"."updated_at",
                 "eligibility_eligibilitydiagnosis"."expires_at",
                 "eligibility_eligibilitydiagnosis"."job_seeker_id",
                 "eligibility_eligibilitydiagnosis"."author_siae_id",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."is_head_office",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."is_authorized",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 T7."id",
                 T7."password",
                 T7."last_login",
                 T7."is_superuser",
                 T7."username",
                 T7."first_name",
                 T7."last_name",
                 T7."is_staff",
                 T7."is_active",
                 T7."date_joined",
                 T7."address_line_1",
                 T7."address_line_2",
                 T7."post_code",
                 T7."city",
                 T7."department",
                 T7."coords",
                 T7."geocoding_score",
                 T7."geocoding_updated_at",
                 T7."ban_api_resolved_address",
                 T7."insee_city_id",
                 T7."title",
                 T7."email",
                 T7."phone",
                 T7."kind",
                 T7."identity_provider",
                 T7."has_completed_welcoming_tour",
                 T7."created_by_id",
                 T7."external_data_source_history",
                 T7."last_checked_at",
                 T7."public_id",
                 T7."address_filled_at",
                 T7."first_login",
                 T8."id",
                 T8."address_line_1",
                 T8."address_line_2",
                 T8."post_code",
                 T8."city",
                 T8."department",
                 T8."coords",
                 T8."geocoding_score",
                 T8."geocoding_updated_at",
                 T8."ban_api_resolved_address",
                 T8."insee_city_id",
                 T8."name",
                 T8."created_at",
                 T8."updated_at",
                 T8."uid",
                 T8."active_members_email_reminder_last_sent_at",
                 T8."siret",
                 T8."naf",
                 T8."kind",
                 T8."brand",
                 T8."phone",
                 T8."email",
                 T8."auth_email",
                 T8."website",
                 T8."description",
                 T8."provided_support",
                 T8."source",
                 T8."created_by_id",
                 T8."block_job_applications",
                 T8."job_applications_blocked_at",
                 T8."convention_id",
                 T8."job_app_score",
                 T8."rdv_solidarites_id",
                 T9."id",
                 T9."address_line_1",
                 T9."address_line_2",
                 T9."post_code",
                 T9."city",
                 T9."department",
                 T9."coords",
                 T9."geocoding_score",
                 T9."geocoding_updated_at",
                 T9."ban_api_resolved_address",
                 T9."insee_city_id",
                 T9."name",
                 T9."created_at",
                 T9."updated_at",
                 T9."uid",
                 T9."active_members_email_reminder_last_sent_at",
                 T9."siret",
                 T9."is_head_office",
                 T9."kind",
                 T9."is_brsa",
                 T9."phone",
                 T9."email",
                 T9."website",
                 T9."description",
                 T9."is_authorized",
                 T9."code_safir_pole_emploi",
                 T9."created_by_id",
                 T9."authorization_status",
                 T9."authorization_updated_at",
                 T9."authorization_updated_by_id",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 T10."id",
                 T10."password",
                 T10."last_login",
                 T10."is_superuser",
                 T10."username",
                 T10."first_name",
                 T10."last_name",
                 T10."is_staff",
                 T10."is_active",
                 T10."date_joined",
                 T10."address_line_1",
                 T10."address_line_2",
                 T10."post_code",
                 T10."city",
                 T10."department",
                 T10."coords",
                 T10."geocoding_score",
                 T10."geocoding_updated_at",
                 T10."ban_api_resolved_address",
                 T10."insee_city_id",
                 T10."title",
                 T10."email",
                 T10."phone",
                 T10."kind",
                 T10."identity_provider",
                 T10."has_completed_welcoming_tour",
                 T10."created_by_id",
                 T10."external_data_source_history",
                 T10."last_checked_at",
                 T10."public_id",
                 T10."address_filled_at",
                 T10."first_login",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."ata_allocation_since",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at"
          FROM "job_applications_jobapplication"
          INNER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          LEFT OUTER JOIN "eligibility_eligibilitydiagnosis" ON ("job_applications_jobapplication"."eligibility_diagnosis_id" = "eligibility_eligibilitydiagnosis"."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("eligibility_eligibilitydiagnosis"."author_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "users_user" T7 ON ("eligibility_eligibilitydiagnosis"."job_seeker_id" = T7."id")
          LEFT OUTER JOIN "companies_company" T8 ON ("eligibility_eligibilitydiagnosis"."author_siae_id" = T8."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" T9 ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = T9."id")
          INNER JOIN "users_user" T10 ON ("approvals_approval"."user_id" = T10."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON (T10."id" = "users_jobseekerprofile"."user_id")
          WHERE ("job_applications_jobapplication"."approval_id" IS NOT NULL
                 AND "job_applications_jobapplication"."job_seeker_id" = %s
                 AND "job_applications_jobapplication"."state" = %s
                 AND "job_applications_jobapplication"."to_company_id" = %s)
          ORDER BY "job_applications_jobapplication"."created_at" DESC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.first[<site-packages>/django/db/models/query.py]',
          'EmployeeDetailView.get_job_application[www/employees_views/views.py]',
          'EmployeeDetailView.get_context_data[www/employees_views/views.py]',
        ]),
        'sql': '''
          SELECT "approvals_suspension"."id",
                 "approvals_suspension"."approval_id",
                 "approvals_suspension"."start_at",
                 "approvals_suspension"."end_at",
                 "approvals_suspension"."siae_id",
                 "approvals_suspension"."reason",
                 "approvals_suspension"."reason_explanation",
                 "approvals_suspension"."created_at",
                 "approvals_suspension"."created_by_id",
                 "approvals_suspension"."updated_at",
                 "approvals_suspension"."updated_by_id"
          FROM "approvals_suspension"
          WHERE "approvals_suspension"."approval_id" IN (%s)
          ORDER BY "approvals_suspension"."start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.first[<site-packages>/django/db/models/query.py]',
          'EmployeeDetailView.get_job_application[www/employees_views/views.py]',
          'EmployeeDetailView.get_context_data[www/employees_views/views.py]',
        ]),
        'sql': '''
          SELECT "approvals_prolongationrequest"."id",
                 "approvals_prolongationrequest"."approval_id",
                 "approvals_prolongationrequest"."start_at",
                 "approvals_prolongationrequest"."end_at",
                 "approvals_prolongationrequest"."reason",
                 "approvals_prolongationrequest"."reason_explanation",
                 "approvals_prolongationrequest"."declared_by_id",
                 "approvals_prolongationrequest"."declared_by_siae_id",
                 "approvals_prolongationrequest"."validated_by_id",
                 "approvals_prolongationrequest"."prescriber_organization_id",
                 "approvals_prolongationrequest"."created_at",
                 "approvals_prolongationrequest"."created_by_id",
                 "approvals_prolongationrequest"."updated_at",
                 "approvals_prolongationrequest"."updated_by_id",
                 "approvals_prolongationrequest"."report_file_id",
                 "approvals_prolongationrequest"."require_phone_interview",
                 "approvals_prolongationrequest"."contact_email",
                 "approvals_prolongationrequest"."contact_phone",
                 "approvals_prolongationrequest"."status",
                 "approvals_prolongationrequest"."processed_at",
                 "approvals_prolongationrequest"."processed_by_id",
                 "approvals_prolongationrequest"."reminder_sent_at",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 T4."id",
                 T4."password",
                 T4."last_login",
                 T4."is_superuser",
                 T4."username",
                 T4."first_name",
                 T4."last_name",
                 T4."is_staff",
                 T4."is_active",
                 T4."date_joined",
                 T4."address_line_1",
                 T4."address_line_2",
                 T4."post_code",
                 T4."city",
                 T4."department",
                 T4."coords",
                 T4."geocoding_score",
                 T4."geocoding_updated_at",
                 T4."ban_api_resolved_address",
                 T4."insee_city_id",
                 T4."title",
                 T4."email",
                 T4."phone",
                 T4."kind",
                 T4."identity_provider",
                 T4."has_completed_welcoming_tour",
                 T4."created_by_id",
                 T4."external_data_source_history",
                 T4."last_checked_at",
                 T4."public_id",
                 T4."address_filled_at",
                 T4."first_login",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."is_head_office",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."is_authorized",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 T6."id",
                 T6."password",
                 T6."last_login",
                 T6."is_superuser",
                 T6."username",
                 T6."first_name",
                 T6."last_name",
                 T6."is_staff",
                 T6."is_active",
                 T6."date_joined",
                 T6."address_line_1",
                 T6."address_line_2",
                 T6."post_code",
                 T6."city",
                 T6."department",
                 T6."coords",
                 T6."geocoding_score",
                 T6."geocoding_updated_at",
                 T6."ban_api_resolved_address",
                 T6."insee_city_id",
                 T6."title",
                 T6."email",
                 T6."phone",
                 T6."kind",
                 T6."identity_provider",
                 T6."has_completed_welcoming_tour",
                 T6."created_by_id",
                 T6."external_data_source_history",
                 T6."last_checked_at",
                 T6."public_id",
                 T6."address_filled_at",
                 T6."first_login"
          FROM "approvals_prolongationrequest"
          LEFT OUTER JOIN "users_user" ON ("approvals_prolongationrequest"."declared_by_id" = "users_user"."id")
          LEFT OUTER JOIN "users_user" T4 ON ("approvals_prolongationrequest"."validated_by_id" = T4."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("approvals_prolongationrequest"."prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "users_user" T6 ON ("approvals_prolongationrequest"."processed_by_id" = T6."id")
          WHERE "approvals_prolongationrequest"."approval_id" IN (%s)
          ORDER BY "approvals_prolongationrequest"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplication.get_eligibility_diagnosis[job_applications/models.py]',
          'EmployeeDetailView.get_context_data[www/employees_views/views.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id"
          FROM "companies_company"
          WHERE "companies_company"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Company.has_admin[common_apps/organizations/models.py]',
          'Company.convention_can_be_accessed_by[companies/models.py]',
          'nav[utils/templatetags/nav.py]',
          'InclusionNode[layout/_header_authenticated.html]',
          'IncludeNode[layout/base.html]',
          'IfNode[layout/base.html]',
          'ExtendsNode[employees/detail.html]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "users_user"
          INNER JOIN "companies_companymembership" ON ("users_user"."id" = "companies_companymembership"."user_id")
          WHERE ("companies_companymembership"."id" IN
                   (SELECT U0."id"
                    FROM "companies_companymembership" U0
                    INNER JOIN "users_user" U2 ON (U0."user_id" = U2."id")
                    WHERE (U0."company_id" = %s
                           AND U2."is_active"
                           AND U0."is_active"
                           AND U0."is_admin"
                           AND U2."is_active"))
                 AND "users_user"."id" = %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'IncludeNode[employees/detail.html]',
          'IfNode[employees/detail.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[employees/detail.html]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'VariableNode[apply/includes/eligibility_diagnosis.html]',
          'IfNode[apply/includes/eligibility_diagnosis.html]',
          'IfNode[apply/includes/eligibility_diagnosis.html]',
          'IfNode[apply/includes/eligibility_diagnosis.html]',
          'IncludeNode[employees/detail.html]',
          'IfNode[employees/detail.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[employees/detail.html]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'IfNode[apply/includes/eligibility_diagnosis.html]',
          'WithNode[apply/includes/eligibility_diagnosis.html]',
          'IfNode[apply/includes/eligibility_diagnosis.html]',
          'IfNode[apply/includes/eligibility_diagnosis.html]',
          'IfNode[apply/includes/eligibility_diagnosis.html]',
          'IncludeNode[employees/detail.html]',
          'IfNode[employees/detail.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[employees/detail.html]',
        ]),
        'sql': '''
          SELECT "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at",
                 "eligibility_administrativecriteria"."created_by_id"
          FROM "eligibility_administrativecriteria"
          INNER JOIN "eligibility_selectedadministrativecriteria" ON ("eligibility_administrativecriteria"."id" = "eligibility_selectedadministrativecriteria"."administrative_criteria_id")
          WHERE "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id" = %s
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'User.latest_approval[users/models.py]',
          'User.has_valid_common_approval[users/models.py]',
          'EligibilityDiagnosis.considered_to_expire_at[eligibility/models/iae.py]',
          'VariableNode[apply/includes/eligibility_diagnosis.html]',
          'IfNode[apply/includes/eligibility_diagnosis.html]',
          'IfNode[apply/includes/eligibility_diagnosis.html]',
          'IfNode[apply/includes/eligibility_diagnosis.html]',
          'IncludeNode[employees/detail.html]',
          'IfNode[employees/detail.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[employees/detail.html]',
        ]),
        'sql': '''
          SELECT "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind"
          FROM "approvals_approval"
          WHERE "approvals_approval"."user_id" = %s
          ORDER BY "approvals_approval"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'ForNode[employees/detail.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[employees/detail.html]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_link",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."hiring_without_approval",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 T4."id",
                 T4."password",
                 T4."last_login",
                 T4."is_superuser",
                 T4."username",
                 T4."first_name",
                 T4."last_name",
                 T4."is_staff",
                 T4."is_active",
                 T4."date_joined",
                 T4."address_line_1",
                 T4."address_line_2",
                 T4."post_code",
                 T4."city",
                 T4."department",
                 T4."coords",
                 T4."geocoding_score",
                 T4."geocoding_updated_at",
                 T4."ban_api_resolved_address",
                 T4."insee_city_id",
                 T4."title",
                 T4."email",
                 T4."phone",
                 T4."kind",
                 T4."identity_provider",
                 T4."has_completed_welcoming_tour",
                 T4."created_by_id",
                 T4."external_data_source_history",
                 T4."last_checked_at",
                 T4."public_id",
                 T4."address_filled_at",
                 T4."first_login",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id"
          FROM "job_applications_jobapplication"
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          LEFT OUTER JOIN "users_user" T4 ON ("job_applications_jobapplication"."sender_id" = T4."id")
          WHERE ("job_applications_jobapplication"."job_seeker_id" = %s
                 AND "job_applications_jobapplication"."to_company_id" = %s)
          ORDER BY "job_applications_jobapplication"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'ForNode[employees/detail.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[employees/detail.html]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'IfNode[approvals/includes/job_description_creation.html]',
          'IfNode[approvals/includes/job_description_creation.html]',
          'IncludeNode[approvals/includes/job_applications.html]',
          'IncludeNode[employees/detail.html]',
          'ForNode[employees/detail.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[employees/detail.html]',
        ]),
        'sql': '''
          SELECT "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."is_head_office",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."is_authorized",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id"
          FROM "prescribers_prescriberorganization"
          WHERE "prescribers_prescriberorganization"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'IfNode[approvals/includes/job_description_creation.html]',
          'IfNode[approvals/includes/job_description_creation.html]',
          'IncludeNode[approvals/includes/job_applications.html]',
          'IncludeNode[employees/detail.html]',
          'ForNode[employees/detail.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[employees/detail.html]',
        ]),
        'sql': '''
          SELECT "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."is_head_office",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."is_authorized",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id"
          FROM "prescribers_prescriberorganization"
          WHERE "prescribers_prescriberorganization"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'QuerySet.first[<site-packages>/django/db/models/query.py]',
          'Approval.pending_prolongation_request[approvals/models.py]',
          'WithNode[approvals/includes/box.html]',
          'IfNode[approvals/includes/box.html]',
          'IfNode[approvals/includes/box.html]',
          'IncludeNode[employees/detail.html]',
          'IfNode[employees/detail.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[employees/detail.html]',
        ]),
        'sql': '''
          SELECT "approvals_prolongationrequest"."id",
                 "approvals_prolongationrequest"."approval_id",
                 "approvals_prolongationrequest"."start_at",
                 "approvals_prolongationrequest"."end_at",
                 "approvals_prolongationrequest"."reason",
                 "approvals_prolongationrequest"."reason_explanation",
                 "approvals_prolongationrequest"."declared_by_id",
                 "approvals_prolongationrequest"."declared_by_siae_id",
                 "approvals_prolongationrequest"."validated_by_id",
                 "approvals_prolongationrequest"."prescriber_organization_id",
                 "approvals_prolongationrequest"."created_at",
                 "approvals_prolongationrequest"."created_by_id",
                 "approvals_prolongationrequest"."updated_at",
                 "approvals_prolongationrequest"."updated_by_id",
                 "approvals_prolongationrequest"."report_file_id",
                 "approvals_prolongationrequest"."require_phone_interview",
                 "approvals_prolongationrequest"."contact_email",
                 "approvals_prolongationrequest"."contact_phone",
                 "approvals_prolongationrequest"."status",
                 "approvals_prolongationrequest"."processed_at",
                 "approvals_prolongationrequest"."processed_by_id",
                 "approvals_prolongationrequest"."reminder_sent_at",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 T4."id",
                 T4."password",
                 T4."last_login",
                 T4."is_superuser",
                 T4."username",
                 T4."first_name",
                 T4."last_name",
                 T4."is_staff",
                 T4."is_active",
                 T4."date_joined",
                 T4."address_line_1",
                 T4."address_line_2",
                 T4."post_code",
                 T4."city",
                 T4."department",
                 T4."coords",
                 T4."geocoding_score",
                 T4."geocoding_updated_at",
                 T4."ban_api_resolved_address",
                 T4."insee_city_id",
                 T4."title",
                 T4."email",
                 T4."phone",
                 T4."kind",
                 T4."identity_provider",
                 T4."has_completed_welcoming_tour",
                 T4."created_by_id",
                 T4."external_data_source_history",
                 T4."last_checked_at",
                 T4."public_id",
                 T4."address_filled_at",
                 T4."first_login",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."is_head_office",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."is_authorized",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 T6."id",
                 T6."password",
                 T6."last_login",
                 T6."is_superuser",
                 T6."username",
                 T6."first_name",
                 T6."last_name",
                 T6."is_staff",
                 T6."is_active",
                 T6."date_joined",
                 T6."address_line_1",
                 T6."address_line_2",
                 T6."post_code",
                 T6."city",
                 T6."department",
                 T6."coords",
                 T6."geocoding_score",
                 T6."geocoding_updated_at",
                 T6."ban_api_resolved_address",
                 T6."insee_city_id",
                 T6."title",
                 T6."email",
                 T6."phone",
                 T6."kind",
                 T6."identity_provider",
                 T6."has_completed_welcoming_tour",
                 T6."created_by_id",
                 T6."external_data_source_history",
                 T6."last_checked_at",
                 T6."public_id",
                 T6."address_filled_at",
                 T6."first_login"
          FROM "approvals_prolongationrequest"
          LEFT OUTER JOIN "users_user" ON ("approvals_prolongationrequest"."declared_by_id" = "users_user"."id")
          LEFT OUTER JOIN "users_user" T4 ON ("approvals_prolongationrequest"."validated_by_id" = T4."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("approvals_prolongationrequest"."prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "users_user" T6 ON ("approvals_prolongationrequest"."processed_by_id" = T6."id")
          WHERE ("approvals_prolongationrequest"."approval_id" = %s
                 AND "approvals_prolongationrequest"."status" = %s)
          ORDER BY "approvals_prolongationrequest"."created_at" DESC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Session.save[<site-packages>/django/db/models/base.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          UPDATE "django_session"
          SET "session_data" = %s,
              "expire_date" = %s
          WHERE "django_session"."session_key" = %s
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: TestEmployeeDetailView.test_link_immersion_facile[alerte à l'opportunité immersion facile PASS expiré]
  '''
  <div class="c-box p-0 mb-4" id="immersion-facile-opportunity-alert">
                              <div class="c-box__header--immersion-facile p-3 p-lg-4">
                                  <span class="h4 m-0">Trouver une immersion</span>
                              </div>
                              <div class="p-3 p-lg-4">
                                  <p>
                                      
                                          Le pass de ce candidat est expiré.
                                          <br/>
                                      
                                      <strong>Immersion Facilitée</strong> vous aide à lui trouver une immersion professionnelle sur son territoire.
                                  </p>
                                  <a aria-label="Rechercher une immersion (ouverture dans un nouvel onglet)" class="btn-link has-external-link" href="https://immersion-facile.beta.gouv.fr/recherche?mtm_campaign=les-emplois-recherche-immersion&amp;mtm_kwd=les-emplois-recherche-immersion" rel="noopener" target="_blank">
                                      Rechercher une immersion
                                  </a>
                              </div>
                          </div>
  '''
# ---
# name: TestEmployeeDetailView.test_link_immersion_facile[alerte à l'opportunité immersion facile]
  '''
  <div class="c-box p-0 mb-4" id="immersion-facile-opportunity-alert">
                              <div class="c-box__header--immersion-facile p-3 p-lg-4">
                                  <span class="h4 m-0">Trouver une immersion</span>
                              </div>
                              <div class="p-3 p-lg-4">
                                  <p>
                                      
                                          Le pass IAE de ce candidat arrive bientôt à expiration.
                                          <br/>
                                      
                                      <strong>Immersion Facilitée</strong> vous aide à lui trouver une immersion professionnelle sur son territoire.
                                  </p>
                                  <a aria-label="Rechercher une immersion (ouverture dans un nouvel onglet)" class="btn-link has-external-link" href="https://immersion-facile.beta.gouv.fr/recherche?mtm_campaign=les-emplois-recherche-immersion&amp;mtm_kwd=les-emplois-recherche-immersion" rel="noopener" target="_blank">
                                      Rechercher une immersion
                                  </a>
                              </div>
                          </div>
  '''
# ---
