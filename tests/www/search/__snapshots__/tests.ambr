# serializer version: 1
# name: TestJobDescriptionSearchView.test_district
  dict({
    'num_queries': 8,
    'queries': list([
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'JobDescriptionSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."slug" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'JobDescriptionSearchView.get_results_page_and_counts[www/search/views.py]',
          'JobDescriptionSearchView.form_valid[www/search/views.py]',
          'JobDescriptionSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "companies_jobdescription"
          INNER JOIN "companies_company" ON ("companies_jobdescription"."company_id" = "companies_company"."id")
          LEFT OUTER JOIN "cities_city" ON ("companies_jobdescription"."location_id" = "cities_city"."id")
          WHERE ("companies_jobdescription"."is_active"
                 AND EXISTS
                   (SELECT %s AS "a"
                    FROM "companies_company" V0
                    WHERE (V0."id" = ("companies_jobdescription"."company_id")
                           AND (NOT (V0."kind" IN (%s, %s, %s, %s, %s))
                                OR V0."source" = %s
                                OR EXISTS
                                  (SELECT %s AS "a"
                                   FROM "companies_siaeconvention" U0
                                   WHERE (U0."id" = (V0."convention_id")
                                          AND U0."is_active")
                                   LIMIT 1)))
                    LIMIT 1)
                 AND ((ST_DWithin("cities_city"."coords", %s, %s)
                       AND "companies_jobdescription"."location_id" IS NOT NULL)
                      OR (ST_DWithin("companies_company"."coords", %s, %s)
                          AND "companies_company"."coords" IS NOT NULL
                          AND "companies_jobdescription"."location_id" IS NULL))
                 AND NOT ("companies_company"."block_job_applications"))
        ''',
      }),
      dict({
        'origin': list([
          'JobDescriptionSearchView.get_results_page_and_counts[www/search/views.py]',
          'JobDescriptionSearchView.form_valid[www/search/views.py]',
          'JobDescriptionSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_company" V0
             WHERE (V0."id" = ("companies_jobdescription"."company_id")
                    AND (NOT (V0."kind" IN (%s, %s, %s, %s, %s))
                         OR V0."source" = %s
                         OR EXISTS
                           (SELECT %s AS "a"
                            FROM "companies_siaeconvention" U0
                            WHERE (U0."id" = (V0."convention_id")
                                   AND U0."is_active")
                            LIMIT 1)))
             LIMIT 1) AS "is_siae_active",
                 CASE
                     WHEN "companies_jobdescription"."location_id" IS NOT NULL THEN (ST_Distance("cities_city"."coords", %s) / %s)
                     WHEN "companies_jobdescription"."location_id" IS NULL THEN (ST_Distance("companies_company"."coords", %s) / %s)
                     ELSE NULL
                 END AS "distance",
                 "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "companies_jobdescription"
          INNER JOIN "companies_company" ON ("companies_jobdescription"."company_id" = "companies_company"."id")
          LEFT OUTER JOIN "cities_city" ON ("companies_jobdescription"."location_id" = "cities_city"."id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE ("companies_jobdescription"."is_active"
                 AND EXISTS
                   (SELECT %s AS "a"
                    FROM "companies_company" V0
                    WHERE (V0."id" = ("companies_jobdescription"."company_id")
                           AND (NOT (V0."kind" IN (%s, %s, %s, %s, %s))
                                OR V0."source" = %s
                                OR EXISTS
                                  (SELECT %s AS "a"
                                   FROM "companies_siaeconvention" U0
                                   WHERE (U0."id" = (V0."convention_id")
                                          AND U0."is_active")
                                   LIMIT 1)))
                    LIMIT 1)
                 AND ((ST_DWithin("cities_city"."coords", %s, %s)
                       AND "companies_jobdescription"."location_id" IS NOT NULL)
                      OR (ST_DWithin("companies_company"."coords", %s, %s)
                          AND "companies_company"."coords" IS NOT NULL
                          AND "companies_jobdescription"."location_id" IS NULL))
                 AND NOT ("companies_company"."block_job_applications"))
          ORDER BY "companies_jobdescription"."source_kind" ASC NULLS FIRST,
                   "companies_jobdescription"."updated_at" DESC,
                   "companies_jobdescription"."created_at" DESC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'JobDescriptionSearchView.get_results_page_and_counts[www/search/views.py]',
          'JobDescriptionSearchView.form_valid[www/search/views.py]',
          'JobDescriptionSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobdescription_id") AS "_prefetch_related_val_jobdescription_id",
                 "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_link",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."hiring_without_approval",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at"
          FROM "job_applications_jobapplication"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplication_selected_jobs"."jobapplication_id")
          WHERE ("job_applications_jobapplication"."state" IN (%s,
                                                               %s,
                                                               %s)
                 AND "job_applications_jobapplication_selected_jobs"."jobdescription_id" IN (%s))
          ORDER BY "job_applications_jobapplication"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'JobDescriptionSearchView.get_results_page_and_counts[www/search/views.py]',
          'JobDescriptionSearchView.form_valid[www/search/views.py]',
          'JobDescriptionSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s))
        ''',
      }),
      dict({
        'origin': list([
          'RemoteAutocompleteSelect2Widget.optgroups[utils/widgets.py]',
          'VariableNode[search/includes/siaes_search_form.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'JobDescriptionSearchView.form_valid[www/search/views.py]',
          'JobDescriptionSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."slug" IN (%s)
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: TestJobDescriptionSearchView.test_results
  dict({
    'num_queries': 8,
    'queries': list([
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'JobDescriptionSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."slug" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'JobDescriptionSearchView.get_results_page_and_counts[www/search/views.py]',
          'JobDescriptionSearchView.form_valid[www/search/views.py]',
          'JobDescriptionSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "companies_jobdescription"
          INNER JOIN "companies_company" ON ("companies_jobdescription"."company_id" = "companies_company"."id")
          LEFT OUTER JOIN "cities_city" ON ("companies_jobdescription"."location_id" = "cities_city"."id")
          WHERE ("companies_jobdescription"."is_active"
                 AND EXISTS
                   (SELECT %s AS "a"
                    FROM "companies_company" V0
                    WHERE (V0."id" = ("companies_jobdescription"."company_id")
                           AND (NOT (V0."kind" IN (%s, %s, %s, %s, %s))
                                OR V0."source" = %s
                                OR EXISTS
                                  (SELECT %s AS "a"
                                   FROM "companies_siaeconvention" U0
                                   WHERE (U0."id" = (V0."convention_id")
                                          AND U0."is_active")
                                   LIMIT 1)))
                    LIMIT 1)
                 AND ((ST_DWithin("cities_city"."coords", %s, %s)
                       AND "companies_jobdescription"."location_id" IS NOT NULL)
                      OR (ST_DWithin("companies_company"."coords", %s, %s)
                          AND "companies_company"."coords" IS NOT NULL
                          AND "companies_jobdescription"."location_id" IS NULL))
                 AND NOT ("companies_company"."block_job_applications"))
        ''',
      }),
      dict({
        'origin': list([
          'JobDescriptionSearchView.get_results_page_and_counts[www/search/views.py]',
          'JobDescriptionSearchView.form_valid[www/search/views.py]',
          'JobDescriptionSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_company" V0
             WHERE (V0."id" = ("companies_jobdescription"."company_id")
                    AND (NOT (V0."kind" IN (%s, %s, %s, %s, %s))
                         OR V0."source" = %s
                         OR EXISTS
                           (SELECT %s AS "a"
                            FROM "companies_siaeconvention" U0
                            WHERE (U0."id" = (V0."convention_id")
                                   AND U0."is_active")
                            LIMIT 1)))
             LIMIT 1) AS "is_siae_active",
                 CASE
                     WHEN "companies_jobdescription"."location_id" IS NOT NULL THEN (ST_Distance("cities_city"."coords", %s) / %s)
                     WHEN "companies_jobdescription"."location_id" IS NULL THEN (ST_Distance("companies_company"."coords", %s) / %s)
                     ELSE NULL
                 END AS "distance",
                 "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "companies_jobdescription"
          INNER JOIN "companies_company" ON ("companies_jobdescription"."company_id" = "companies_company"."id")
          LEFT OUTER JOIN "cities_city" ON ("companies_jobdescription"."location_id" = "cities_city"."id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE ("companies_jobdescription"."is_active"
                 AND EXISTS
                   (SELECT %s AS "a"
                    FROM "companies_company" V0
                    WHERE (V0."id" = ("companies_jobdescription"."company_id")
                           AND (NOT (V0."kind" IN (%s, %s, %s, %s, %s))
                                OR V0."source" = %s
                                OR EXISTS
                                  (SELECT %s AS "a"
                                   FROM "companies_siaeconvention" U0
                                   WHERE (U0."id" = (V0."convention_id")
                                          AND U0."is_active")
                                   LIMIT 1)))
                    LIMIT 1)
                 AND ((ST_DWithin("cities_city"."coords", %s, %s)
                       AND "companies_jobdescription"."location_id" IS NOT NULL)
                      OR (ST_DWithin("companies_company"."coords", %s, %s)
                          AND "companies_company"."coords" IS NOT NULL
                          AND "companies_jobdescription"."location_id" IS NULL))
                 AND NOT ("companies_company"."block_job_applications"))
          ORDER BY "companies_jobdescription"."source_kind" ASC NULLS FIRST,
                   "companies_jobdescription"."updated_at" DESC,
                   "companies_jobdescription"."created_at" DESC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'JobDescriptionSearchView.get_results_page_and_counts[www/search/views.py]',
          'JobDescriptionSearchView.form_valid[www/search/views.py]',
          'JobDescriptionSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobdescription_id") AS "_prefetch_related_val_jobdescription_id",
                 "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_link",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."hiring_without_approval",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at"
          FROM "job_applications_jobapplication"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplication_selected_jobs"."jobapplication_id")
          WHERE ("job_applications_jobapplication"."state" IN (%s,
                                                               %s,
                                                               %s)
                 AND "job_applications_jobapplication_selected_jobs"."jobdescription_id" IN (%s))
          ORDER BY "job_applications_jobapplication"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'JobDescriptionSearchView.get_results_page_and_counts[www/search/views.py]',
          'JobDescriptionSearchView.form_valid[www/search/views.py]',
          'JobDescriptionSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s))
        ''',
      }),
      dict({
        'origin': list([
          'RemoteAutocompleteSelect2Widget.optgroups[utils/widgets.py]',
          'VariableNode[search/includes/siaes_search_form.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'JobDescriptionSearchView.form_valid[www/search/views.py]',
          'JobDescriptionSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."slug" IN (%s)
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: TestSearchCompany.test_company[SQL queries with company filter]
  dict({
    'num_queries': 9,
    'queries': list([
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."slug" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'EmployerSearchView.add_form_choices[www/search/views.py]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 (ST_Distance("companies_company"."coords", %s) / %s) AS "distance"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'EmployerSearchView.get_results_page_and_counts[www/search/views.py]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s)
                 AND "companies_company"."id" = %s)
        ''',
      }),
      dict({
        'origin': list([
          'EmployerSearchView.get_results_page_and_counts[www/search/views.py]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "companies_jobdescription"
          INNER JOIN "companies_company" ON ("companies_jobdescription"."company_id" = "companies_company"."id")
          LEFT OUTER JOIN "cities_city" ON ("companies_jobdescription"."location_id" = "cities_city"."id")
          WHERE ("companies_jobdescription"."is_active"
                 AND EXISTS
                   (SELECT %s AS "a"
                    FROM "companies_company" V0
                    WHERE (V0."id" = ("companies_jobdescription"."company_id")
                           AND (NOT (V0."kind" IN (%s, %s, %s, %s, %s))
                                OR V0."source" = %s
                                OR EXISTS
                                  (SELECT %s AS "a"
                                   FROM "companies_siaeconvention" U0
                                   WHERE (U0."id" = (V0."convention_id")
                                          AND U0."is_active")
                                   LIMIT 1)))
                    LIMIT 1)
                 AND ((ST_DWithin("cities_city"."coords", %s, %s)
                       AND "companies_jobdescription"."location_id" IS NOT NULL)
                      OR (ST_DWithin("companies_company"."coords", %s, %s)
                          AND "companies_company"."coords" IS NOT NULL
                          AND "companies_jobdescription"."location_id" IS NULL))
                 AND NOT ("companies_company"."block_job_applications"))
        ''',
      }),
      dict({
        'origin': list([
          'RemoteAutocompleteSelect2Widget.optgroups[utils/widgets.py]',
          'VariableNode[search/includes/siaes_search_form.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."slug" IN (%s)
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ForNode[search/includes/siaes_search_results.html]',
          'IncludeNode[search/includes/siaes_search_content.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 (ST_Distance("companies_company"."coords", %s) / %s) AS "distance",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_companymembership" U0
             WHERE (U0."company_id" = ("companies_company"."id")
                    AND U0."is_active")
             LIMIT 1) AS "has_active_members"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s)
                 AND "companies_company"."id" = %s)
          ORDER BY 35 DESC,
                   "companies_company"."block_job_applications" ASC,
                   "companies_company"."job_app_score" ASC,
                   "companies_company"."id" ASC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'ForNode[search/includes/siaes_search_results.html]',
          'IncludeNode[search/includes/siaes_search_content.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source",
                 COUNT("job_applications_jobapplication_selected_jobs"."jobapplication_id") FILTER (
                                                                                                    WHERE "job_applications_jobapplication"."state" IN (%s, %s, %s)) AS "job_applications_count",
                 CASE
                     WHEN COUNT("job_applications_jobapplication_selected_jobs"."jobapplication_id") FILTER (
                                                                                                             WHERE ("job_applications_jobapplication"."state" IN (%s, %s, %s))) >= %s THEN %s
                     ELSE %s
                 END AS "is_popular",
                 "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "companies_jobdescription"
          LEFT OUTER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          LEFT OUTER JOIN "job_applications_jobapplication" ON ("job_applications_jobapplication_selected_jobs"."jobapplication_id" = "job_applications_jobapplication"."id")
          INNER JOIN "companies_company" ON ("companies_jobdescription"."company_id" = "companies_company"."id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          LEFT OUTER JOIN "cities_city" ON ("companies_jobdescription"."location_id" = "cities_city"."id")
          WHERE ("companies_jobdescription"."company_id" IN
                   (SELECT V0."id"
                    FROM "companies_company" V0
                    WHERE (NOT (V0."siret" = %s)
                           AND (NOT (V0."kind" IN (%s,
                                                   %s,
                                                   %s,
                                                   %s,
                                                   %s))
                                OR V0."source" = %s
                                OR EXISTS
                                  (SELECT %s AS "a"
                                   FROM "companies_siaeconvention" U0
                                   WHERE (U0."id" = (V0."convention_id")
                                          AND U0."is_active")
                                   LIMIT 1))
                           AND ST_DWithin(V0."coords", %s, %s)
                           AND V0."id" = %s))
                 AND "companies_jobdescription"."is_active"
                 AND "companies_jobdescription"."company_id" IN (%s))
          GROUP BY "companies_jobdescription"."id",
                   "jobs_appellation"."code",
                   "companies_company"."id",
                   "cities_city"."id"
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: TestSearchCompany.test_company[SQL queries without company filter]
  dict({
    'num_queries': 9,
    'queries': list([
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."slug" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'EmployerSearchView.add_form_choices[www/search/views.py]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 (ST_Distance("companies_company"."coords", %s) / %s) AS "distance"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'EmployerSearchView.get_results_page_and_counts[www/search/views.py]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s))
        ''',
      }),
      dict({
        'origin': list([
          'EmployerSearchView.get_results_page_and_counts[www/search/views.py]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "companies_jobdescription"
          INNER JOIN "companies_company" ON ("companies_jobdescription"."company_id" = "companies_company"."id")
          LEFT OUTER JOIN "cities_city" ON ("companies_jobdescription"."location_id" = "cities_city"."id")
          WHERE ("companies_jobdescription"."is_active"
                 AND EXISTS
                   (SELECT %s AS "a"
                    FROM "companies_company" V0
                    WHERE (V0."id" = ("companies_jobdescription"."company_id")
                           AND (NOT (V0."kind" IN (%s, %s, %s, %s, %s))
                                OR V0."source" = %s
                                OR EXISTS
                                  (SELECT %s AS "a"
                                   FROM "companies_siaeconvention" U0
                                   WHERE (U0."id" = (V0."convention_id")
                                          AND U0."is_active")
                                   LIMIT 1)))
                    LIMIT 1)
                 AND ((ST_DWithin("cities_city"."coords", %s, %s)
                       AND "companies_jobdescription"."location_id" IS NOT NULL)
                      OR (ST_DWithin("companies_company"."coords", %s, %s)
                          AND "companies_company"."coords" IS NOT NULL
                          AND "companies_jobdescription"."location_id" IS NULL))
                 AND NOT ("companies_company"."block_job_applications"))
        ''',
      }),
      dict({
        'origin': list([
          'RemoteAutocompleteSelect2Widget.optgroups[utils/widgets.py]',
          'VariableNode[search/includes/siaes_search_form.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."slug" IN (%s)
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ForNode[search/includes/siaes_search_results.html]',
          'IncludeNode[search/includes/siaes_search_content.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 (ST_Distance("companies_company"."coords", %s) / %s) AS "distance",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_companymembership" U0
             WHERE (U0."company_id" = ("companies_company"."id")
                    AND U0."is_active")
             LIMIT 1) AS "has_active_members"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s))
          ORDER BY 35 DESC,
                   "companies_company"."block_job_applications" ASC,
                   "companies_company"."job_app_score" ASC,
                   "companies_company"."id" ASC
          LIMIT 3
        ''',
      }),
      dict({
        'origin': list([
          'ForNode[search/includes/siaes_search_results.html]',
          'IncludeNode[search/includes/siaes_search_content.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source",
                 COUNT("job_applications_jobapplication_selected_jobs"."jobapplication_id") FILTER (
                                                                                                    WHERE "job_applications_jobapplication"."state" IN (%s, %s, %s)) AS "job_applications_count",
                 CASE
                     WHEN COUNT("job_applications_jobapplication_selected_jobs"."jobapplication_id") FILTER (
                                                                                                             WHERE ("job_applications_jobapplication"."state" IN (%s, %s, %s))) >= %s THEN %s
                     ELSE %s
                 END AS "is_popular",
                 "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "companies_jobdescription"
          LEFT OUTER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          LEFT OUTER JOIN "job_applications_jobapplication" ON ("job_applications_jobapplication_selected_jobs"."jobapplication_id" = "job_applications_jobapplication"."id")
          INNER JOIN "companies_company" ON ("companies_jobdescription"."company_id" = "companies_company"."id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          LEFT OUTER JOIN "cities_city" ON ("companies_jobdescription"."location_id" = "cities_city"."id")
          WHERE ("companies_jobdescription"."company_id" IN
                   (SELECT V0."id"
                    FROM "companies_company" V0
                    WHERE (NOT (V0."siret" = %s)
                           AND (NOT (V0."kind" IN (%s,
                                                   %s,
                                                   %s,
                                                   %s,
                                                   %s))
                                OR V0."source" = %s
                                OR EXISTS
                                  (SELECT %s AS "a"
                                   FROM "companies_siaeconvention" U0
                                   WHERE (U0."id" = (V0."convention_id")
                                          AND U0."is_active")
                                   LIMIT 1))
                           AND ST_DWithin(V0."coords", %s, %s)))
                 AND "companies_jobdescription"."is_active"
                 AND "companies_jobdescription"."company_id" IN (%s,
                                                                 %s,
                                                                 %s))
          GROUP BY "companies_jobdescription"."id",
                   "jobs_appellation"."code",
                   "companies_company"."id",
                   "cities_city"."id"
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: TestSearchCompany.test_district
  dict({
    'num_queries': 9,
    'queries': list([
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."slug" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'EmployerSearchView.add_form_choices[www/search/views.py]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 (ST_Distance("companies_company"."coords", %s) / %s) AS "distance"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'EmployerSearchView.get_results_page_and_counts[www/search/views.py]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s))
        ''',
      }),
      dict({
        'origin': list([
          'EmployerSearchView.get_results_page_and_counts[www/search/views.py]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "companies_jobdescription"
          INNER JOIN "companies_company" ON ("companies_jobdescription"."company_id" = "companies_company"."id")
          LEFT OUTER JOIN "cities_city" ON ("companies_jobdescription"."location_id" = "cities_city"."id")
          WHERE ("companies_jobdescription"."is_active"
                 AND EXISTS
                   (SELECT %s AS "a"
                    FROM "companies_company" V0
                    WHERE (V0."id" = ("companies_jobdescription"."company_id")
                           AND (NOT (V0."kind" IN (%s, %s, %s, %s, %s))
                                OR V0."source" = %s
                                OR EXISTS
                                  (SELECT %s AS "a"
                                   FROM "companies_siaeconvention" U0
                                   WHERE (U0."id" = (V0."convention_id")
                                          AND U0."is_active")
                                   LIMIT 1)))
                    LIMIT 1)
                 AND ((ST_DWithin("cities_city"."coords", %s, %s)
                       AND "companies_jobdescription"."location_id" IS NOT NULL)
                      OR (ST_DWithin("companies_company"."coords", %s, %s)
                          AND "companies_company"."coords" IS NOT NULL
                          AND "companies_jobdescription"."location_id" IS NULL))
                 AND NOT ("companies_company"."block_job_applications"))
        ''',
      }),
      dict({
        'origin': list([
          'RemoteAutocompleteSelect2Widget.optgroups[utils/widgets.py]',
          'VariableNode[search/includes/siaes_search_form.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."slug" IN (%s)
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ForNode[search/includes/siaes_search_results.html]',
          'IncludeNode[search/includes/siaes_search_content.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 (ST_Distance("companies_company"."coords", %s) / %s) AS "distance",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_companymembership" U0
             WHERE (U0."company_id" = ("companies_company"."id")
                    AND U0."is_active")
             LIMIT 1) AS "has_active_members"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s))
          ORDER BY 35 DESC,
                   "companies_company"."block_job_applications" ASC,
                   "companies_company"."job_app_score" ASC,
                   "companies_company"."id" ASC
          LIMIT 2
        ''',
      }),
      dict({
        'origin': list([
          'ForNode[search/includes/siaes_search_results.html]',
          'IncludeNode[search/includes/siaes_search_content.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source",
                 COUNT("job_applications_jobapplication_selected_jobs"."jobapplication_id") FILTER (
                                                                                                    WHERE "job_applications_jobapplication"."state" IN (%s, %s, %s)) AS "job_applications_count",
                 CASE
                     WHEN COUNT("job_applications_jobapplication_selected_jobs"."jobapplication_id") FILTER (
                                                                                                             WHERE ("job_applications_jobapplication"."state" IN (%s, %s, %s))) >= %s THEN %s
                     ELSE %s
                 END AS "is_popular",
                 "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "companies_jobdescription"
          LEFT OUTER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          LEFT OUTER JOIN "job_applications_jobapplication" ON ("job_applications_jobapplication_selected_jobs"."jobapplication_id" = "job_applications_jobapplication"."id")
          INNER JOIN "companies_company" ON ("companies_jobdescription"."company_id" = "companies_company"."id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          LEFT OUTER JOIN "cities_city" ON ("companies_jobdescription"."location_id" = "cities_city"."id")
          WHERE ("companies_jobdescription"."company_id" IN
                   (SELECT V0."id"
                    FROM "companies_company" V0
                    WHERE (NOT (V0."siret" = %s)
                           AND (NOT (V0."kind" IN (%s,
                                                   %s,
                                                   %s,
                                                   %s,
                                                   %s))
                                OR V0."source" = %s
                                OR EXISTS
                                  (SELECT %s AS "a"
                                   FROM "companies_siaeconvention" U0
                                   WHERE (U0."id" = (V0."convention_id")
                                          AND U0."is_active")
                                   LIMIT 1))
                           AND ST_DWithin(V0."coords", %s, %s)))
                 AND "companies_jobdescription"."is_active"
                 AND "companies_jobdescription"."company_id" IN (%s,
                                                                 %s))
          GROUP BY "companies_jobdescription"."id",
                   "jobs_appellation"."code",
                   "companies_company"."id",
                   "cities_city"."id"
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: TestSearchCompany.test_order_by
  dict({
    'num_queries': 9,
    'queries': list([
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."slug" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'EmployerSearchView.add_form_choices[www/search/views.py]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 (ST_Distance("companies_company"."coords", %s) / %s) AS "distance"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'EmployerSearchView.get_results_page_and_counts[www/search/views.py]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s))
        ''',
      }),
      dict({
        'origin': list([
          'EmployerSearchView.get_results_page_and_counts[www/search/views.py]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "companies_jobdescription"
          INNER JOIN "companies_company" ON ("companies_jobdescription"."company_id" = "companies_company"."id")
          LEFT OUTER JOIN "cities_city" ON ("companies_jobdescription"."location_id" = "cities_city"."id")
          WHERE ("companies_jobdescription"."is_active"
                 AND EXISTS
                   (SELECT %s AS "a"
                    FROM "companies_company" V0
                    WHERE (V0."id" = ("companies_jobdescription"."company_id")
                           AND (NOT (V0."kind" IN (%s, %s, %s, %s, %s))
                                OR V0."source" = %s
                                OR EXISTS
                                  (SELECT %s AS "a"
                                   FROM "companies_siaeconvention" U0
                                   WHERE (U0."id" = (V0."convention_id")
                                          AND U0."is_active")
                                   LIMIT 1)))
                    LIMIT 1)
                 AND ((ST_DWithin("cities_city"."coords", %s, %s)
                       AND "companies_jobdescription"."location_id" IS NOT NULL)
                      OR (ST_DWithin("companies_company"."coords", %s, %s)
                          AND "companies_company"."coords" IS NOT NULL
                          AND "companies_jobdescription"."location_id" IS NULL))
                 AND NOT ("companies_company"."block_job_applications"))
        ''',
      }),
      dict({
        'origin': list([
          'RemoteAutocompleteSelect2Widget.optgroups[utils/widgets.py]',
          'VariableNode[search/includes/siaes_search_form.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."slug" IN (%s)
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ForNode[search/includes/siaes_search_results.html]',
          'IncludeNode[search/includes/siaes_search_content.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 (ST_Distance("companies_company"."coords", %s) / %s) AS "distance",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_companymembership" U0
             WHERE (U0."company_id" = ("companies_company"."id")
                    AND U0."is_active")
             LIMIT 1) AS "has_active_members"
          FROM "companies_company"
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1))
                 AND ST_DWithin("companies_company"."coords", %s, %s))
          ORDER BY 35 DESC,
                   "companies_company"."block_job_applications" ASC,
                   "companies_company"."job_app_score" ASC,
                   "companies_company"."id" ASC
          LIMIT 5
        ''',
      }),
      dict({
        'origin': list([
          'ForNode[search/includes/siaes_search_results.html]',
          'IncludeNode[search/includes/siaes_search_content.html]',
          'IncludeNode[search/siaes_search_results.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[search/siaes_search_results.html]',
          'EmployerSearchView.form_valid[www/search/views.py]',
          'EmployerSearchView.get[www/search/views.py]',
        ]),
        'sql': '''
          SELECT "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source",
                 COUNT("job_applications_jobapplication_selected_jobs"."jobapplication_id") FILTER (
                                                                                                    WHERE "job_applications_jobapplication"."state" IN (%s, %s, %s)) AS "job_applications_count",
                 CASE
                     WHEN COUNT("job_applications_jobapplication_selected_jobs"."jobapplication_id") FILTER (
                                                                                                             WHERE ("job_applications_jobapplication"."state" IN (%s, %s, %s))) >= %s THEN %s
                     ELSE %s
                 END AS "is_popular",
                 "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "companies_jobdescription"
          LEFT OUTER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          LEFT OUTER JOIN "job_applications_jobapplication" ON ("job_applications_jobapplication_selected_jobs"."jobapplication_id" = "job_applications_jobapplication"."id")
          INNER JOIN "companies_company" ON ("companies_jobdescription"."company_id" = "companies_company"."id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          LEFT OUTER JOIN "cities_city" ON ("companies_jobdescription"."location_id" = "cities_city"."id")
          WHERE ("companies_jobdescription"."company_id" IN
                   (SELECT V0."id"
                    FROM "companies_company" V0
                    WHERE (NOT (V0."siret" = %s)
                           AND (NOT (V0."kind" IN (%s,
                                                   %s,
                                                   %s,
                                                   %s,
                                                   %s))
                                OR V0."source" = %s
                                OR EXISTS
                                  (SELECT %s AS "a"
                                   FROM "companies_siaeconvention" U0
                                   WHERE (U0."id" = (V0."convention_id")
                                          AND U0."is_active")
                                   LIMIT 1))
                           AND ST_DWithin(V0."coords", %s, %s)))
                 AND "companies_jobdescription"."is_active"
                 AND "companies_jobdescription"."company_id" IN (%s,
                                                                 %s,
                                                                 %s,
                                                                 %s,
                                                                 %s))
          GROUP BY "companies_jobdescription"."id",
                   "jobs_appellation"."code",
                   "companies_company"."id",
                   "cities_city"."id"
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
