# serializer version: 1
# name: TestApprovalsListView.test_job_seeker_filters[approvals list]
  dict({
    'num_queries': 15,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_companymembership"."id",
                 "companies_companymembership"."user_id",
                 "companies_companymembership"."joined_at",
                 "companies_companymembership"."is_admin",
                 "companies_companymembership"."is_active",
                 "companies_companymembership"."created_at",
                 "companies_companymembership"."updated_at",
                 "companies_companymembership"."company_id",
                 "companies_companymembership"."updated_by_id",
                 "companies_companymembership"."notifications"
          FROM "companies_companymembership"
          WHERE ("companies_companymembership"."user_id" = %s
                 AND "companies_companymembership"."is_active")
          ORDER BY "companies_companymembership"."created_at" ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_siaeconvention" U0
             WHERE (U0."deactivated_at" >= %s
                    AND U0."id" = ("companies_company"."convention_id"))
             LIMIT 1) AS "has_convention_in_grace_period",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at"
          FROM "companies_company"
          INNER JOIN "companies_companymembership" ON ("companies_company"."id" = "companies_companymembership"."company_id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND "companies_companymembership"."user_id" = %s
                 AND "companies_company"."id" IN (%s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1)
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."deactivated_at" >= %s
                                AND U0."id" = ("companies_company"."convention_id"))
                         LIMIT 1)))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'ApprovalForm._get_choices_for_job_seekers[www/approvals_views/forms.py]',
          'ApprovalForm.__init__[www/approvals_views/forms.py]',
          'ApprovalListView.setup[www/approvals_views/views.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "users_user"
          INNER JOIN "approvals_approval" ON ("users_user"."id" = "approvals_approval"."user_id")
          WHERE ("approvals_approval"."id" IN
                   (SELECT V0."id"
                    FROM "approvals_approval" V0
                    WHERE EXISTS
                        (SELECT %s AS "a"
                         FROM "job_applications_jobapplication" U0
                         WHERE (U0."approval_id" = (V0."id")
                                AND U0."state" = %s
                                AND U0."to_company_id" = %s)
                         LIMIT 1))
                 AND "users_user"."kind" = %s)
          ORDER BY "users_user"."first_name" ASC,
                   "users_user"."last_name" ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'ApprovalListView.get_context_data[www/approvals_views/views.py]',
          'ApprovalListView.get_context_data[www/approvals_views/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*)
          FROM
            (SELECT DISTINCT "approvals_approval"."id" AS "col1",
                             "approvals_approval"."start_at" AS "col2",
                             "approvals_approval"."end_at" AS "col3",
                             "approvals_approval"."created_at" AS "col4",
                             "approvals_approval"."number" AS "col5",
                             "approvals_approval"."pe_notification_status" AS "col6",
                             "approvals_approval"."pe_notification_time" AS "col7",
                             "approvals_approval"."pe_notification_endpoint" AS "col8",
                             "approvals_approval"."pe_notification_exit_code" AS "col9",
                             "approvals_approval"."user_id" AS "col10",
                             "approvals_approval"."created_by_id" AS "col11",
                             "approvals_approval"."origin" AS "col12",
                             "approvals_approval"."eligibility_diagnosis_id" AS "col13",
                             "approvals_approval"."updated_at" AS "col14",
                             "approvals_approval"."origin_siae_siret" AS "col15",
                             "approvals_approval"."origin_siae_kind" AS "col16",
                             "approvals_approval"."origin_sender_kind" AS "col17",
                             "approvals_approval"."origin_prescriber_organization_kind" AS "col18"
             FROM "approvals_approval"
             WHERE EXISTS
                 (SELECT %s AS "a"
                  FROM "job_applications_jobapplication" U0
                  WHERE (U0."approval_id" = ("approvals_approval"."id")
                         AND U0."state" = %s
                         AND U0."to_company_id" = %s)
                  LIMIT 1)) subquery
        ''',
      }),
      dict({
        'origin': list([
          'ApprovalListView.get_context_data[www/approvals_views/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "employee_record_employeerecord"
          INNER JOIN "job_applications_jobapplication" ON ("employee_record_employeerecord"."job_application_id" = "job_applications_jobapplication"."id")
          WHERE ("job_applications_jobapplication"."to_company_id" = %s
                 AND "employee_record_employeerecord"."status" = %s)
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Company.has_admin[common_apps/organizations/models.py]',
          'Company.convention_can_be_accessed_by[companies/models.py]',
          'nav[utils/templatetags/nav.py]',
          'InclusionNode[layout/_header_authenticated.html]',
          'IncludeNode[layout/base.html]',
          'IfNode[layout/base.html]',
          'ExtendsNode[approvals/list.html]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "users_user"
          INNER JOIN "companies_companymembership" ON ("users_user"."id" = "companies_companymembership"."user_id")
          WHERE ("companies_companymembership"."id" IN
                   (SELECT U0."id"
                    FROM "companies_companymembership" U0
                    INNER JOIN "users_user" U2 ON (U0."user_id" = U2."id")
                    WHERE (U0."company_id" = %s
                           AND U2."is_active"
                           AND U0."is_active"
                           AND U0."is_admin"
                           AND U2."is_active"))
                 AND "users_user"."id" = %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'IfNode[approvals/includes/list_results.html]',
          'IncludeNode[approvals/list.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[approvals/list.html]',
        ]),
        'sql': '''
          SELECT DISTINCT "approvals_approval"."id",
                          "approvals_approval"."start_at",
                          "approvals_approval"."end_at",
                          "approvals_approval"."created_at",
                          "approvals_approval"."number",
                          "approvals_approval"."pe_notification_status",
                          "approvals_approval"."pe_notification_time",
                          "approvals_approval"."pe_notification_endpoint",
                          "approvals_approval"."pe_notification_exit_code",
                          "approvals_approval"."user_id",
                          "approvals_approval"."created_by_id",
                          "approvals_approval"."origin",
                          "approvals_approval"."eligibility_diagnosis_id",
                          "approvals_approval"."updated_at",
                          "approvals_approval"."origin_siae_siret",
                          "approvals_approval"."origin_siae_kind",
                          "approvals_approval"."origin_sender_kind",
                          "approvals_approval"."origin_prescriber_organization_kind",
                          "users_user"."id",
                          "users_user"."password",
                          "users_user"."last_login",
                          "users_user"."is_superuser",
                          "users_user"."username",
                          "users_user"."first_name",
                          "users_user"."last_name",
                          "users_user"."is_staff",
                          "users_user"."is_active",
                          "users_user"."date_joined",
                          "users_user"."address_line_1",
                          "users_user"."address_line_2",
                          "users_user"."post_code",
                          "users_user"."city",
                          "users_user"."department",
                          "users_user"."coords",
                          "users_user"."geocoding_score",
                          "users_user"."geocoding_updated_at",
                          "users_user"."ban_api_resolved_address",
                          "users_user"."insee_city_id",
                          "users_user"."title",
                          "users_user"."email",
                          "users_user"."phone",
                          "users_user"."kind",
                          "users_user"."identity_provider",
                          "users_user"."has_completed_welcoming_tour",
                          "users_user"."created_by_id",
                          "users_user"."external_data_source_history",
                          "users_user"."last_checked_at",
                          "users_user"."public_id",
                          "users_user"."address_filled_at",
                          "users_user"."first_login"
          FROM "approvals_approval"
          INNER JOIN "users_user" ON ("approvals_approval"."user_id" = "users_user"."id")
          WHERE EXISTS
              (SELECT %s AS "a"
               FROM "job_applications_jobapplication" U0
               WHERE (U0."approval_id" = ("approvals_approval"."id")
                      AND U0."state" = %s
                      AND U0."to_company_id" = %s)
               LIMIT 1)
          ORDER BY "approvals_approval"."created_at" DESC
          LIMIT 2
        ''',
      }),
      dict({
        'origin': list([
          'IfNode[approvals/includes/list_results.html]',
          'IncludeNode[approvals/list.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[approvals/list.html]',
        ]),
        'sql': '''
          SELECT "approvals_suspension"."id",
                 "approvals_suspension"."approval_id",
                 "approvals_suspension"."start_at",
                 "approvals_suspension"."end_at",
                 "approvals_suspension"."siae_id",
                 "approvals_suspension"."reason",
                 "approvals_suspension"."reason_explanation",
                 "approvals_suspension"."created_at",
                 "approvals_suspension"."created_by_id",
                 "approvals_suspension"."updated_at",
                 "approvals_suspension"."updated_by_id"
          FROM "approvals_suspension"
          WHERE "approvals_suspension"."approval_id" IN (%s,
                                                         %s)
          ORDER BY "approvals_suspension"."start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Session.save[<site-packages>/django/db/models/base.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          UPDATE "django_session"
          SET "session_data" = %s,
              "expire_date" = %s
          WHERE "django_session"."session_key" = %s
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
