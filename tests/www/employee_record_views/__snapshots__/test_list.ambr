# serializer version: 1
# name: ListEmployeeRecordsTest.test_employee_record_to_disable
  '''
  <div class="c-box--results__footer">
                  <div class="d-flex flex-column flex-md-row justify-content-md-end gap-3">
                      
                          <a aria-label="Désactiver la fiche salarié de Jane DOE" class="btn btn-outline-primary btn-block w-100 w-md-auto" href="/employee_record/disable/[PK of EmployeeRecord]">Désactiver</a>
                      
                      <a aria-label="Compléter la fiche salarié de Jane DOE" class="btn btn-primary btn-block w-100 w-md-auto" href="/employee_record/create/[PK of JobApplication]?from_status=NEW">Compléter</a>
                  </div>
              </div>
  '''
# ---
# name: ListEmployeeRecordsTest.test_employee_record_to_disable_with_nir_associated_to_other[action]
  '''
  <div class="c-box--results__footer">
                  <a aria-label="Régulariser le n° de sécurité sociale Jane DOE (ouverture dans un nouvel onglet)" class="btn btn-primary btn-block w-100 w-md-auto has-external-link" href="https://tally.so/r/wzxQlg?employeerecord=[PK of EmployeeRecord]" rel="noopener" target="_blank">Régulariser le n° de sécurité sociale</a>
              </div>
  '''
# ---
# name: ListEmployeeRecordsTest.test_employee_record_to_disable_with_nir_associated_to_other[alert]
  '''
  <div class="alert alert-warning" role="status">
              <div class="row">
                  <div class="col-auto pe-0">
                      <i aria-hidden="true" class="ri-error-warning-line ri-xl text-danger"></i>
                  </div>
                  <div class="col">
                      <p class="mb-2">
                          <strong>Une action de votre part est nécessaire</strong>
                      </p>
                      <p class="mb-0">
                          Attention, nous avons détecté une ou plusieurs fiches salarié qui nécessitent une régularisation manuelle de votre part.
                      </p>
                  </div>
              </div>
          </div>
  '''
# ---
# name: ListEmployeeRecordsTest.test_employee_records_with_a_prolongation_need_to_be_updated[action]
  '''
  <div class="c-box--results__footer">
                  <a aria-label="Mettre à jour la fiche salarié de Jane DOE" class="btn btn-primary btn-block w-100 w-md-auto" href="/employee_record/create/[PK of JobApplication]">Mettre à jour</a>
              </div>
  '''
# ---
# name: ListEmployeeRecordsTest.test_employee_records_with_a_prolongation_need_to_be_updated[alert]
  '''
  <div class="alert alert-warning" role="status">
              <div class="row">
                  <div class="col-auto pe-0">
                      <i aria-hidden="true" class="ri-error-warning-line ri-xl text-danger"></i>
                  </div>
                  <div class="col">
                      <p class="mb-2">
                          <strong>Une action de votre part est nécessaire</strong>
                      </p>
                      <p class="mb-0">
                          Attention, nous avons détecté une ou plusieurs fiches salarié qui nécessitent une régularisation manuelle de votre part.
                      </p>
                  </div>
              </div>
          </div>
  '''
# ---
# name: ListEmployeeRecordsTest.test_employee_records_with_a_suspension_need_to_be_updated[action]
  '''
  <div class="c-box--results__footer">
                  <a aria-label="Mettre à jour la fiche salarié de Jane DOE" class="btn btn-primary btn-block w-100 w-md-auto" href="/employee_record/create/[PK of JobApplication]">Mettre à jour</a>
              </div>
  '''
# ---
# name: ListEmployeeRecordsTest.test_employee_records_with_a_suspension_need_to_be_updated[alert]
  '''
  <div class="alert alert-warning" role="status">
              <div class="row">
                  <div class="col-auto pe-0">
                      <i aria-hidden="true" class="ri-error-warning-line ri-xl text-danger"></i>
                  </div>
                  <div class="col">
                      <p class="mb-2">
                          <strong>Une action de votre part est nécessaire</strong>
                      </p>
                      <p class="mb-0">
                          Attention, nous avons détecté une ou plusieurs fiches salarié qui nécessitent une régularisation manuelle de votre part.
                      </p>
                  </div>
              </div>
          </div>
  '''
# ---
# name: ListEmployeeRecordsTest.test_employee_records_with_nir_associated_to_other[action]
  '''
  <div class="c-box--results__footer">
                  <a aria-label="Régulariser le n° de sécurité sociale Jane DOE (ouverture dans un nouvel onglet)" class="btn btn-primary btn-block w-100 w-md-auto has-external-link" href="https://tally.so/r/wzxQlg?jobapplication=[PK of JobApplication]" rel="noopener" target="_blank">Régulariser le n° de sécurité sociale</a>
              </div>
  '''
# ---
# name: ListEmployeeRecordsTest.test_employee_records_with_nir_associated_to_other[alert]
  '''
  <div class="alert alert-warning" role="status">
              <div class="row">
                  <div class="col-auto pe-0">
                      <i aria-hidden="true" class="ri-error-warning-line ri-xl text-danger"></i>
                  </div>
                  <div class="col">
                      <p class="mb-2">
                          <strong>Une action de votre part est nécessaire</strong>
                      </p>
                      <p class="mb-0">
                          Attention, nous avons détecté une ou plusieurs fiches salarié qui nécessitent une régularisation manuelle de votre part.
                      </p>
                  </div>
              </div>
          </div>
  '''
# ---
# name: ListEmployeeRecordsTest.test_existing_employee_records_with_a_prolongation_does_not_show_need_to_be_updated_message
  '''
  <div class="c-box--results__footer">
                  <div class="d-flex flex-column flex-md-row justify-content-md-end gap-3">
                      
                          <a aria-label="Désactiver la fiche salarié de Jane DOE" class="btn btn-outline-primary btn-block w-100 w-md-auto" href="/employee_record/disable/[PK of EmployeeRecord]">Désactiver</a>
                      
                      <a aria-label="Compléter la fiche salarié de Jane DOE" class="btn btn-primary btn-block w-100 w-md-auto" href="/employee_record/create/[PK of JobApplication]?from_status=NEW">Compléter</a>
                  </div>
              </div>
  '''
# ---
# name: ListEmployeeRecordsTest.test_existing_employee_records_with_a_suspension_does_not_show_need_to_be_updated_message
  '''
  <div class="c-box--results__footer">
                  <div class="d-flex flex-column flex-md-row justify-content-md-end gap-3">
                      
                          <a aria-label="Désactiver la fiche salarié de Jane DOE" class="btn btn-outline-primary btn-block w-100 w-md-auto" href="/employee_record/disable/[PK of EmployeeRecord]">Désactiver</a>
                      
                      <a aria-label="Compléter la fiche salarié de Jane DOE" class="btn btn-primary btn-block w-100 w-md-auto" href="/employee_record/create/[PK of JobApplication]?from_status=NEW">Compléter</a>
                  </div>
              </div>
  '''
# ---
# name: ListEmployeeRecordsTest.test_new_employee_records_sorted[employee records]
  dict({
    'num_queries': 12,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_companymembership"."id",
                 "companies_companymembership"."user_id",
                 "companies_companymembership"."joined_at",
                 "companies_companymembership"."is_admin",
                 "companies_companymembership"."is_active",
                 "companies_companymembership"."created_at",
                 "companies_companymembership"."updated_at",
                 "companies_companymembership"."company_id",
                 "companies_companymembership"."updated_by_id",
                 "companies_companymembership"."notifications"
          FROM "companies_companymembership"
          WHERE ("companies_companymembership"."user_id" = %s
                 AND "companies_companymembership"."is_active")
          ORDER BY "companies_companymembership"."created_at" ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."rdv_solidarites_id",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_siaeconvention" U0
             WHERE (U0."deactivated_at" >= %s
                    AND U0."id" = ("companies_company"."convention_id"))
             LIMIT 1) AS "has_convention_in_grace_period",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at"
          FROM "companies_company"
          INNER JOIN "companies_companymembership" ON ("companies_company"."id" = "companies_companymembership"."company_id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND "companies_companymembership"."user_id" = %s
                 AND "companies_company"."id" IN (%s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1)
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."deactivated_at" >= %s
                                AND U0."id" = ("companies_company"."convention_id"))
                         LIMIT 1)))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'list_employee_records[www/employee_record_views/views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."job_seeker_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_link",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."hiring_without_approval",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          WHERE ("job_applications_jobapplication"."state" = %s
                 AND "job_applications_jobapplication"."to_company_id" = %s)
          ORDER BY "job_applications_jobapplication"."job_seeker_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'list_employee_records[www/employee_record_views/views.py]',
        ]),
        'sql': '''
          SELECT "employee_record_employeerecord"."status",
                 COUNT("employee_record_employeerecord"."status") AS "cnt"
          FROM "employee_record_employeerecord"
          INNER JOIN "job_applications_jobapplication" ON ("employee_record_employeerecord"."job_application_id" = "job_applications_jobapplication"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          GROUP BY "employee_record_employeerecord"."status"
        ''',
      }),
      dict({
        'origin': list([
          'list_employee_records[www/employee_record_views/views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_link",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."hiring_without_approval",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 EXISTS
            (SELECT %s AS "a"
             FROM "approvals_suspension" U0
             INNER JOIN "approvals_approval" U1 ON (U0."approval_id" = U1."id")
             INNER JOIN "job_applications_jobapplication" U2 ON (U1."id" = U2."approval_id")
             WHERE (U2."id" = ("job_applications_jobapplication"."id")
                    AND U0."siae_id" = %s)
             LIMIT 1) AS "has_suspension",
                 EXISTS
            (SELECT %s AS "a"
             FROM "approvals_prolongation" U0
             INNER JOIN "approvals_approval" U1 ON (U0."approval_id" = U1."id")
             INNER JOIN "job_applications_jobapplication" U2 ON (U1."id" = U2."approval_id")
             WHERE (U2."id" = ("job_applications_jobapplication"."id")
                    AND U0."declared_by_siae_id" = %s)
             LIMIT 1) AS "has_prolongation",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."ata_allocation_since",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON ("users_user"."id" = "users_jobseekerprofile"."user_id")
          WHERE ("job_applications_jobapplication"."id" IN (
                                                              (SELECT U0."id" AS "col1"
                                                               FROM "job_applications_jobapplication" U0
                                                               INNER JOIN "employee_record_employeerecord" U1 ON (U0."id" = U1."job_application_id")
                                                               WHERE (U1."status" = %s
                                                                      AND U0."to_company_id" = %s)
                                                               ORDER BY U0."created_at" DESC)
                                                            UNION
                                                              (SELECT U0."id" AS "col1"
                                                               FROM "job_applications_jobapplication" U0
                                                               LEFT OUTER JOIN "employee_record_employeerecord" U2 ON (U0."id" = U2."job_application_id")
                                                               WHERE (U0."state" = %s
                                                                      AND U0."approval_id" IS NOT NULL
                                                                      AND U0."create_employee_record"
                                                                      AND U2."id" IS NULL
                                                                      AND U0."hiring_start_at" >= %s
                                                                      AND U0."to_company_id" = %s)
                                                               ORDER BY U0."created_at" DESC)
                                                            UNION
                                                              (SELECT V0."id" AS "col1"
                                                               FROM "job_applications_jobapplication" V0
                                                               LEFT OUTER JOIN "employee_record_employeerecord" V3 ON (V0."id" = V3."job_application_id")
                                                               WHERE (V0."state" = %s
                                                                      AND ((V0."create_employee_record"
                                                                            AND EXISTS
                                                                              (SELECT %s AS "a"
                                                                               FROM "approvals_suspension" U0
                                                                               WHERE (U0."approval_id" = (V0."approval_id")
                                                                                      AND U0."created_at" >= %s
                                                                                      AND U0."siae_id" = (V0."to_company_id"))
                                                                               LIMIT 1))
                                                                           OR EXISTS
                                                                             (SELECT %s AS "a"
                                                                              FROM "approvals_prolongation" U0
                                                                              WHERE (U0."approval_id" = (V0."approval_id")
                                                                                     AND U0."created_at" >= %s
                                                                                     AND U0."declared_by_siae_id" = (V0."to_company_id"))
                                                                              LIMIT 1))
                                                                      AND V3."id" IS NULL
                                                                      AND V0."to_company_id" = %s)
                                                               ORDER BY V0."created_at" DESC))
                 AND NOT ("approvals_approval"."number" IN
                            (SELECT V0."approval_number"
                             FROM "employee_record_employeerecord" V0
                             INNER JOIN "job_applications_jobapplication" V1 ON (V0."job_application_id" = V1."id")
                             WHERE (V1."to_company_id" IN
                                      (SELECT U0."id"
                                       FROM "companies_company" U0
                                       WHERE (NOT (U0."siret" = %s)
                                              AND U0."convention_id" = %s))
                                    AND NOT (V0."status" IN (%s))))
                          AND "approvals_approval"."number" IS NOT NULL))
          ORDER BY "job_applications_jobapplication"."hiring_start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'list_employee_records[www/employee_record_views/views.py]',
        ]),
        'sql': '''
          SELECT "employee_record_employeerecord"."id",
                 "employee_record_employeerecord"."asp_processing_code",
                 "employee_record_employeerecord"."asp_processing_label",
                 "employee_record_employeerecord"."asp_batch_file",
                 "employee_record_employeerecord"."asp_batch_line_number",
                 "employee_record_employeerecord"."archived_json",
                 "employee_record_employeerecord"."created_at",
                 "employee_record_employeerecord"."updated_at",
                 "employee_record_employeerecord"."processed_at",
                 "employee_record_employeerecord"."status",
                 "employee_record_employeerecord"."job_application_id",
                 "employee_record_employeerecord"."financial_annex_id",
                 "employee_record_employeerecord"."approval_number",
                 "employee_record_employeerecord"."asp_id",
                 "employee_record_employeerecord"."asp_measure",
                 "employee_record_employeerecord"."siret",
                 "employee_record_employeerecord"."processed_as_duplicate"
          FROM "employee_record_employeerecord"
          WHERE "employee_record_employeerecord"."job_application_id" IN (%s,
                                                                          %s,
                                                                          %s)
          ORDER BY "employee_record_employeerecord"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'list_employee_records[www/employee_record_views/views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "employee_record_employeerecord"
          INNER JOIN "job_applications_jobapplication" ON ("employee_record_employeerecord"."job_application_id" = "job_applications_jobapplication"."id")
          WHERE ("job_applications_jobapplication"."to_company_id" = %s
                 AND "employee_record_employeerecord"."status" = %s)
        ''',
      }),
      dict({
        'origin': list([
          'Company.has_admin[common_apps/organizations/models.py]',
          'Company.convention_can_be_accessed_by[companies/models.py]',
          'nav[utils/templatetags/nav.py]',
          'InclusionNode[layout/_header_authenticated.html]',
          'IncludeNode[layout/base.html]',
          'IfNode[layout/base.html]',
          'ExtendsNode[employee_record/list.html]',
          'list_employee_records[www/employee_record_views/views.py]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "users_user"
          INNER JOIN "companies_companymembership" ON ("users_user"."id" = "companies_companymembership"."user_id")
          WHERE ("companies_companymembership"."id" IN
                   (SELECT U0."id"
                    FROM "companies_companymembership" U0
                    INNER JOIN "users_user" U2 ON (U0."user_id" = U2."id")
                    WHERE (U0."company_id" = %s
                           AND U2."is_active"
                           AND U0."is_active"
                           AND U0."is_admin"
                           AND U2."is_active"))
                 AND "users_user"."id" = %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
