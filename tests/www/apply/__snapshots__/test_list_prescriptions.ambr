# serializer version: 1
# name: test_as_unauthorized_prescriber[SQL queries for prescriptions list]
  dict({
    'num_queries': 19,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "prescribers_prescribermembership"."id",
                 "prescribers_prescribermembership"."user_id",
                 "prescribers_prescribermembership"."joined_at",
                 "prescribers_prescribermembership"."is_admin",
                 "prescribers_prescribermembership"."is_active",
                 "prescribers_prescribermembership"."created_at",
                 "prescribers_prescribermembership"."updated_at",
                 "prescribers_prescribermembership"."organization_id",
                 "prescribers_prescribermembership"."updated_by_id",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized"
          FROM "prescribers_prescribermembership"
          INNER JOIN "prescribers_prescriberorganization" ON ("prescribers_prescribermembership"."organization_id" = "prescribers_prescriberorganization"."id")
          WHERE ("prescribers_prescribermembership"."user_id" = %s
                 AND "prescribers_prescribermembership"."is_active")
          ORDER BY "prescribers_prescribermembership"."created_at" ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."full_name_search_vector",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login",
                             "users_user"."upcoming_deletion_notified_at",
                             "users_user"."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."sender_id" = "users_user"."id")
          WHERE "job_applications_jobapplication"."sender_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."job_seeker_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             T3."id",
                             T3."password",
                             T3."last_login",
                             T3."is_superuser",
                             T3."username",
                             T3."first_name",
                             T3."last_name",
                             T3."is_staff",
                             T3."is_active",
                             T3."date_joined",
                             T3."address_line_1",
                             T3."address_line_2",
                             T3."post_code",
                             T3."city",
                             T3."department",
                             T3."coords",
                             T3."geocoding_score",
                             T3."geocoding_updated_at",
                             T3."ban_api_resolved_address",
                             T3."insee_city_id",
                             T3."title",
                             T3."full_name_search_vector",
                             T3."email",
                             T3."phone",
                             T3."kind",
                             T3."identity_provider",
                             T3."has_completed_welcoming_tour",
                             T3."created_by_id",
                             T3."external_data_source_history",
                             T3."last_checked_at",
                             T3."public_id",
                             T3."address_filled_at",
                             T3."first_login",
                             T3."upcoming_deletion_notified_at",
                             T3."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" T3 ON ("job_applications_jobapplication"."job_seeker_id" = T3."id")
          WHERE "job_applications_jobapplication"."sender_id" = %s
          ORDER BY "job_applications_jobapplication"."job_seeker_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'PrescriberFilterJobApplicationsForm._get_choices_for_administrativecriteria[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_administrativecriteria"
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'PrescriberFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at"
          FROM "job_applications_jobapplication"
          WHERE "job_applications_jobapplication"."sender_id" = %s
          ORDER BY "job_applications_jobapplication"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'PrescriberFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'PrescriberFilterJobApplicationsForm.get_to_companies_choices[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."to_company_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "companies_company"."id",
                             "companies_company"."address_line_1",
                             "companies_company"."address_line_2",
                             "companies_company"."post_code",
                             "companies_company"."city",
                             "companies_company"."department",
                             "companies_company"."coords",
                             "companies_company"."geocoding_score",
                             "companies_company"."geocoding_updated_at",
                             "companies_company"."ban_api_resolved_address",
                             "companies_company"."insee_city_id",
                             "companies_company"."name",
                             "companies_company"."created_at",
                             "companies_company"."updated_at",
                             "companies_company"."uid",
                             "companies_company"."active_members_email_reminder_last_sent_at",
                             "companies_company"."automatic_geocoding_update",
                             "companies_company"."siret",
                             "companies_company"."naf",
                             "companies_company"."kind",
                             "companies_company"."brand",
                             "companies_company"."phone",
                             "companies_company"."email",
                             "companies_company"."auth_email",
                             "companies_company"."website",
                             "companies_company"."description",
                             "companies_company"."provided_support",
                             "companies_company"."source",
                             "companies_company"."created_by_id",
                             "companies_company"."block_job_applications",
                             "companies_company"."job_applications_blocked_at",
                             "companies_company"."spontaneous_applications_open_since",
                             "companies_company"."convention_id",
                             "companies_company"."job_app_score",
                             "companies_company"."is_searchable",
                             "companies_company"."rdv_solidarites_id",
                             "companies_company"."fields_history"
          FROM "job_applications_jobapplication"
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          WHERE "job_applications_jobapplication"."sender_id" = %s
          ORDER BY "job_applications_jobapplication"."to_company_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT COUNT(*)
          FROM
            (SELECT GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
               (SELECT U0."id" AS "id"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE (U0."expires_at" > %s
                       AND (U0."author_kind" = %s
                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                ORDER BY U0."created_at" DESC
                LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                    COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                               (SELECT U0."id" AS "id"
                                FROM "eligibility_eligibilitydiagnosis" U0
                                WHERE (U0."expires_at" > %s
                                       AND (U0."author_kind" = %s
                                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                ORDER BY U0."created_at" DESC
                                LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
                    (COALESCE(LOWER(T5."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER(T5."last_name"), %s)), %s)) AS "job_seeker_full_name",
          
               (SELECT U1."start_at" AS "appointment__start_at"
                FROM "rdv_insertion_participation" U0
                INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                       AND U1."start_at" > %s
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                       AND U0."status" = %s)
                ORDER BY 1 ASC
                LIMIT 1) AS "next_appointment_start_at",
          
               (SELECT COUNT(U0."id") AS "count"
                FROM "rdv_insertion_participation" U0
                INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                       AND U1."start_at" > %s
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                       AND U0."status" = %s)
                ORDER BY RANDOM() ASC) AS "upcoming_participations_count",
                    (
                       (SELECT COUNT(U0."id") AS "count"
                        FROM "rdv_insertion_participation" U0
                        INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                        WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                               AND U1."start_at" > %s
                               AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                               AND U0."status" = %s)
                        ORDER BY RANDOM() ASC) - %s) AS "other_participations_count"
             FROM "job_applications_jobapplication"
             LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
             INNER JOIN "users_user" T5 ON ("job_applications_jobapplication"."job_seeker_id" = T5."id")
             WHERE ("job_applications_jobapplication"."sender_id" = %s
                    AND "job_applications_jobapplication"."archived_at" IS NULL)
             GROUP BY "job_applications_jobapplication"."id",
                      3,
                      4,
                      7) subquery
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
            (SELECT U0."id" AS "id"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE (U0."expires_at" > %s
                    AND (U0."author_kind" = %s
                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
             ORDER BY U0."created_at" DESC
             LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                 COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                            (SELECT U0."id" AS "id"
                             FROM "eligibility_eligibilitydiagnosis" U0
                             WHERE (U0."expires_at" > %s
                                    AND (U0."author_kind" = %s
                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                             ORDER BY U0."created_at" DESC
                             LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
                 (COALESCE(LOWER(T5."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER(T5."last_name"), %s)), %s)) AS "job_seeker_full_name",
          
            (SELECT U1."start_at" AS "appointment__start_at"
             FROM "rdv_insertion_participation" U0
             INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
             WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                    AND U1."start_at" > %s
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                    AND U0."status" = %s)
             ORDER BY 1 ASC
             LIMIT 1) AS "next_appointment_start_at",
          
            (SELECT COUNT(U0."id") AS "count"
             FROM "rdv_insertion_participation" U0
             INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
             WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                    AND U1."start_at" > %s
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                    AND U0."status" = %s)
             ORDER BY RANDOM() ASC) AS "upcoming_participations_count",
                 (
                    (SELECT COUNT(U0."id") AS "count"
                     FROM "rdv_insertion_participation" U0
                     INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                     WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                            AND U1."start_at" > %s
                            AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                            AND U0."status" = %s)
                     ORDER BY RANDOM() ASC) - %s) AS "other_participations_count",
                 T5."id",
                 T5."password",
                 T5."last_login",
                 T5."is_superuser",
                 T5."username",
                 T5."first_name",
                 T5."last_name",
                 T5."is_staff",
                 T5."is_active",
                 T5."date_joined",
                 T5."address_line_1",
                 T5."address_line_2",
                 T5."post_code",
                 T5."city",
                 T5."department",
                 T5."coords",
                 T5."geocoding_score",
                 T5."geocoding_updated_at",
                 T5."ban_api_resolved_address",
                 T5."insee_city_id",
                 T5."title",
                 T5."full_name_search_vector",
                 T5."email",
                 T5."phone",
                 T5."kind",
                 T5."identity_provider",
                 T5."has_completed_welcoming_tour",
                 T5."created_by_id",
                 T5."external_data_source_history",
                 T5."last_checked_at",
                 T5."public_id",
                 T5."address_filled_at",
                 T5."first_login",
                 T5."upcoming_deletion_notified_at",
                 T5."allow_next_sso_sub_update",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."ft_gps_id",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."are_allocation_since",
                 "users_jobseekerprofile"."activity_bonus_since",
                 "users_jobseekerprofile"."cape_freelance",
                 "users_jobseekerprofile"."cesa_freelance",
                 "users_jobseekerprofile"."actor_met_for_business_creation",
                 "users_jobseekerprofile"."mean_monthly_income_before_process",
                 "users_jobseekerprofile"."eiti_contributions",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "users_jobseekerprofile"."created_by_prescriber_organization_id",
                 "users_jobseekerprofile"."is_stalled",
                 "users_jobseekerprofile"."is_not_stalled_anymore",
                 "users_jobseekerprofile"."fields_history",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update",
                 T8."id",
                 T8."address_line_1",
                 T8."address_line_2",
                 T8."post_code",
                 T8."city",
                 T8."department",
                 T8."coords",
                 T8."geocoding_score",
                 T8."geocoding_updated_at",
                 T8."ban_api_resolved_address",
                 T8."insee_city_id",
                 T8."name",
                 T8."created_at",
                 T8."updated_at",
                 T8."uid",
                 T8."active_members_email_reminder_last_sent_at",
                 T8."automatic_geocoding_update",
                 T8."siret",
                 T8."naf",
                 T8."kind",
                 T8."brand",
                 T8."phone",
                 T8."email",
                 T8."auth_email",
                 T8."website",
                 T8."description",
                 T8."provided_support",
                 T8."source",
                 T8."created_by_id",
                 T8."block_job_applications",
                 T8."job_applications_blocked_at",
                 T8."spontaneous_applications_open_since",
                 T8."convention_id",
                 T8."job_app_score",
                 T8."is_searchable",
                 T8."rdv_solidarites_id",
                 T8."fields_history",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."sender_id" = "users_user"."id")
          LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          INNER JOIN "users_user" T5 ON ("job_applications_jobapplication"."job_seeker_id" = T5."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON (T5."id" = "users_jobseekerprofile"."user_id")
          LEFT OUTER JOIN "companies_company" T8 ON ("job_applications_jobapplication"."sender_company_id" = T8."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          LEFT OUTER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          WHERE ("job_applications_jobapplication"."sender_id" = %s
                 AND "job_applications_jobapplication"."archived_at" IS NULL)
          GROUP BY "job_applications_jobapplication"."id",
                   48,
                   49,
                   52,
                   T5."id",
                   "users_jobseekerprofile"."user_id",
                   "users_user"."id",
                   T8."id",
                   "prescribers_prescriberorganization"."id",
                   "companies_company"."id",
                   "companies_siaeconvention"."id",
                   "approvals_approval"."id"
          ORDER BY "job_applications_jobapplication"."created_at" DESC,
                   "job_applications_jobapplication"."id" DESC
          LIMIT 2
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "approvals_approval"
          WHERE "approvals_approval"."user_id" IN (%s,
                                                   %s)
          ORDER BY "approvals_approval"."start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          '_add_administrative_criteria[www/apply/views/list_views.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "eligibility_selectedadministrativecriteria"."id",
                 "eligibility_selectedadministrativecriteria"."certified",
                 "eligibility_selectedadministrativecriteria"."certified_at",
                 "eligibility_selectedadministrativecriteria"."certification_period",
                 "eligibility_selectedadministrativecriteria"."data_returned_by_api",
                 "eligibility_selectedadministrativecriteria"."created_at",
                 "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id",
                 "eligibility_selectedadministrativecriteria"."administrative_criteria_id",
                 "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_selectedadministrativecriteria"
          INNER JOIN "eligibility_administrativecriteria" ON ("eligibility_selectedadministrativecriteria"."administrative_criteria_id" = "eligibility_administrativecriteria"."id")
          WHERE "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id" IN (%s,
                                                                                            %s)
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."name" ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Session.save[<site-packages>/django/db/models/base.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          UPDATE "django_session"
          SET "session_data" = %s,
              "expire_date" = %s
          WHERE "django_session"."session_key" = %s
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: test_exports_as_pole_emploi_prescriber
  '''
  <div class="c-info mb-3 mb-md-4" id="besoin-dun-chiffre">
      <button aria-controls="collapseBesoinChiffre" aria-expanded="false" class="c-info__summary collapsed" data-bs-target="#collapseBesoinChiffre" data-bs-toggle="collapse" type="button">
          <span>
              Besoin d'un chiffre ?
          </span>
      </button>
      <div class="c-info__detail collapse" id="collapseBesoinChiffre">
          Accédez aux données de votre agence (non nominatives) compilées, calculées et mises à jour quotidiennement :
          <ul class="mb-0">
              <li>
                  <a href="/stats/pe/state/main" rel="noopener" target="_blank">
                      Voir les données de l'ensemble de l'état des candidatures orientées
                  </a>
              </li>
              <li>
                  <a href="/stats/pe/conversion/main" rel="noopener" target="_blank">
                      Voir les données du taux de transformation des candidatures
                  </a>
              </li>
          </ul>
      </div>
  </div>
  
  '''
# ---
# name: test_exports_download[SQL queries of export]
  dict({
    'num_queries': 12,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "prescribers_prescribermembership"."id",
                 "prescribers_prescribermembership"."user_id",
                 "prescribers_prescribermembership"."joined_at",
                 "prescribers_prescribermembership"."is_admin",
                 "prescribers_prescribermembership"."is_active",
                 "prescribers_prescribermembership"."created_at",
                 "prescribers_prescribermembership"."updated_at",
                 "prescribers_prescribermembership"."organization_id",
                 "prescribers_prescribermembership"."updated_by_id",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized"
          FROM "prescribers_prescribermembership"
          INNER JOIN "prescribers_prescriberorganization" ON ("prescribers_prescribermembership"."organization_id" = "prescribers_prescriberorganization"."id")
          WHERE ("prescribers_prescribermembership"."user_id" = %s
                 AND "prescribers_prescribermembership"."is_active")
          ORDER BY "prescribers_prescribermembership"."created_at" ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'serialize_queryset_by_batch[<site-packages>/xlsx_streaming/streaming.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
            (SELECT U0."id" AS "id"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE (U0."expires_at" > %s
                    AND (U0."author_kind" = %s
                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
             ORDER BY U0."created_at" DESC
             LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                 COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                            (SELECT U0."id" AS "id"
                             FROM "eligibility_eligibilitydiagnosis" U0
                             WHERE (U0."expires_at" > %s
                                    AND (U0."author_kind" = %s
                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                             ORDER BY U0."created_at" DESC
                             LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
                 T5."id",
                 T5."password",
                 T5."last_login",
                 T5."is_superuser",
                 T5."username",
                 T5."first_name",
                 T5."last_name",
                 T5."is_staff",
                 T5."is_active",
                 T5."date_joined",
                 T5."address_line_1",
                 T5."address_line_2",
                 T5."post_code",
                 T5."city",
                 T5."department",
                 T5."coords",
                 T5."geocoding_score",
                 T5."geocoding_updated_at",
                 T5."ban_api_resolved_address",
                 T5."insee_city_id",
                 T5."title",
                 T5."full_name_search_vector",
                 T5."email",
                 T5."phone",
                 T5."kind",
                 T5."identity_provider",
                 T5."has_completed_welcoming_tour",
                 T5."created_by_id",
                 T5."external_data_source_history",
                 T5."last_checked_at",
                 T5."public_id",
                 T5."address_filled_at",
                 T5."first_login",
                 T5."upcoming_deletion_notified_at",
                 T5."allow_next_sso_sub_update",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."ft_gps_id",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."are_allocation_since",
                 "users_jobseekerprofile"."activity_bonus_since",
                 "users_jobseekerprofile"."cape_freelance",
                 "users_jobseekerprofile"."cesa_freelance",
                 "users_jobseekerprofile"."actor_met_for_business_creation",
                 "users_jobseekerprofile"."mean_monthly_income_before_process",
                 "users_jobseekerprofile"."eiti_contributions",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "users_jobseekerprofile"."created_by_prescriber_organization_id",
                 "users_jobseekerprofile"."is_stalled",
                 "users_jobseekerprofile"."is_not_stalled_anymore",
                 "users_jobseekerprofile"."fields_history",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update",
                 T8."id",
                 T8."address_line_1",
                 T8."address_line_2",
                 T8."post_code",
                 T8."city",
                 T8."department",
                 T8."coords",
                 T8."geocoding_score",
                 T8."geocoding_updated_at",
                 T8."ban_api_resolved_address",
                 T8."insee_city_id",
                 T8."name",
                 T8."created_at",
                 T8."updated_at",
                 T8."uid",
                 T8."active_members_email_reminder_last_sent_at",
                 T8."automatic_geocoding_update",
                 T8."siret",
                 T8."naf",
                 T8."kind",
                 T8."brand",
                 T8."phone",
                 T8."email",
                 T8."auth_email",
                 T8."website",
                 T8."description",
                 T8."provided_support",
                 T8."source",
                 T8."created_by_id",
                 T8."block_job_applications",
                 T8."job_applications_blocked_at",
                 T8."spontaneous_applications_open_since",
                 T8."convention_id",
                 T8."job_app_score",
                 T8."is_searchable",
                 T8."rdv_solidarites_id",
                 T8."fields_history",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."sender_id" = "users_user"."id")
          LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          INNER JOIN "users_user" T5 ON ("job_applications_jobapplication"."job_seeker_id" = T5."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON (T5."id" = "users_jobseekerprofile"."user_id")
          LEFT OUTER JOIN "companies_company" T8 ON ("job_applications_jobapplication"."sender_company_id" = T8."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          LEFT OUTER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          WHERE "job_applications_jobapplication"."sender_id" = %s
          GROUP BY "job_applications_jobapplication"."id",
                   48,
                   T5."id",
                   "users_jobseekerprofile"."user_id",
                   "users_user"."id",
                   T8."id",
                   "prescribers_prescriberorganization"."id",
                   "companies_company"."id",
                   "companies_siaeconvention"."id",
                   "approvals_approval"."id"
          ORDER BY "job_applications_jobapplication"."created_at" DESC,
                   "job_applications_jobapplication"."id" ASC
          LIMIT 1000
        ''',
      }),
      dict({
        'origin': list([
          'serialize_queryset_by_batch[<site-packages>/xlsx_streaming/streaming.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'serialize_queryset_by_batch[<site-packages>/xlsx_streaming/streaming.py]',
        ]),
        'sql': '''
          SELECT "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "approvals_approval"
          WHERE "approvals_approval"."user_id" IN (%s,
                                                   %s)
          ORDER BY "approvals_approval"."start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'CommonApprovalQuerySet.first[<site-packages>/django/db/models/query.py]',
          'User.latest_pe_approval[users/models.py]',
          'User.latest_common_approval[users/models.py]',
          '_serialize_job_application[job_applications/export.py]',
          '_job_applications_serializer[job_applications/export.py]',
          'serialize_queryset_by_batch[<site-packages>/xlsx_streaming/streaming.py]',
        ]),
        'sql': '''
          SELECT "approvals_poleemploiapproval"."id",
                 "approvals_poleemploiapproval"."start_at",
                 "approvals_poleemploiapproval"."end_at",
                 "approvals_poleemploiapproval"."created_at",
                 "approvals_poleemploiapproval"."pe_notification_status",
                 "approvals_poleemploiapproval"."pe_notification_time",
                 "approvals_poleemploiapproval"."pe_notification_endpoint",
                 "approvals_poleemploiapproval"."pe_notification_exit_code",
                 "approvals_poleemploiapproval"."pe_structure_code",
                 "approvals_poleemploiapproval"."number",
                 "approvals_poleemploiapproval"."pole_emploi_id",
                 "approvals_poleemploiapproval"."first_name",
                 "approvals_poleemploiapproval"."last_name",
                 "approvals_poleemploiapproval"."birth_name",
                 "approvals_poleemploiapproval"."birthdate",
                 "approvals_poleemploiapproval"."nir",
                 "approvals_poleemploiapproval"."ntt_nia",
                 "approvals_poleemploiapproval"."siae_siret",
                 "approvals_poleemploiapproval"."siae_kind"
          FROM "approvals_poleemploiapproval"
          WHERE ("approvals_poleemploiapproval"."nir" = %s
                 AND NOT ("approvals_poleemploiapproval"."number" IN
                            (SELECT U0."number" AS "number"
                             FROM "approvals_approval" U0
                             WHERE U0."user_id" = %s)))
          ORDER BY "approvals_poleemploiapproval"."end_at" DESC,
                   "approvals_poleemploiapproval"."start_at" ASC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'EligibilityDiagnosisQuerySet.first[<site-packages>/django/db/models/query.py]',
          'RelatedManager.last_considered_valid[eligibility/models/iae.py]',
          'RelatedManager.has_considered_valid[eligibility/models/iae.py]',
          'User.has_valid_diagnosis[users/models.py]',
          '_get_eligibility_status[job_applications/export.py]',
          '_serialize_job_application[job_applications/export.py]',
          '_job_applications_serializer[job_applications/export.py]',
          'serialize_queryset_by_batch[<site-packages>/xlsx_streaming/streaming.py]',
        ]),
        'sql': '''
          SELECT "eligibility_eligibilitydiagnosis"."id",
                 "eligibility_eligibilitydiagnosis"."author_id",
                 "eligibility_eligibilitydiagnosis"."author_kind",
                 "eligibility_eligibilitydiagnosis"."author_prescriber_organization_id",
                 "eligibility_eligibilitydiagnosis"."created_at",
                 "eligibility_eligibilitydiagnosis"."updated_at",
                 "eligibility_eligibilitydiagnosis"."expires_at",
                 "eligibility_eligibilitydiagnosis"."job_seeker_id",
                 "eligibility_eligibilitydiagnosis"."author_siae_id",
                 CASE
                     WHEN "eligibility_eligibilitydiagnosis"."author_kind" = %s THEN %s
                     ELSE %s
                 END AS "from_prescriber",
                 T3."id",
                 T3."password",
                 T3."last_login",
                 T3."is_superuser",
                 T3."username",
                 T3."first_name",
                 T3."last_name",
                 T3."is_staff",
                 T3."is_active",
                 T3."date_joined",
                 T3."address_line_1",
                 T3."address_line_2",
                 T3."post_code",
                 T3."city",
                 T3."department",
                 T3."coords",
                 T3."geocoding_score",
                 T3."geocoding_updated_at",
                 T3."ban_api_resolved_address",
                 T3."insee_city_id",
                 T3."title",
                 T3."full_name_search_vector",
                 T3."email",
                 T3."phone",
                 T3."kind",
                 T3."identity_provider",
                 T3."has_completed_welcoming_tour",
                 T3."created_by_id",
                 T3."external_data_source_history",
                 T3."last_checked_at",
                 T3."public_id",
                 T3."address_filled_at",
                 T3."first_login",
                 T3."upcoming_deletion_notified_at",
                 T3."allow_next_sso_sub_update",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history"
          FROM "eligibility_eligibilitydiagnosis"
          INNER JOIN "users_user" T3 ON ("eligibility_eligibilitydiagnosis"."author_id" = T3."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("eligibility_eligibilitydiagnosis"."author_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "companies_company" ON ("eligibility_eligibilitydiagnosis"."author_siae_id" = "companies_company"."id")
          WHERE ("eligibility_eligibilitydiagnosis"."job_seeker_id" = %s
                 AND "eligibility_eligibilitydiagnosis"."author_kind" = %s
                 AND "eligibility_eligibilitydiagnosis"."job_seeker_id" = %s
                 AND "eligibility_eligibilitydiagnosis"."expires_at" > %s)
          ORDER BY 10 DESC,
                   "eligibility_eligibilitydiagnosis"."created_at" DESC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'CommonApprovalQuerySet.first[<site-packages>/django/db/models/query.py]',
          'User.latest_pe_approval[users/models.py]',
          'User.latest_common_approval[users/models.py]',
          '_serialize_job_application[job_applications/export.py]',
          '_job_applications_serializer[job_applications/export.py]',
          'serialize_queryset_by_batch[<site-packages>/xlsx_streaming/streaming.py]',
        ]),
        'sql': '''
          SELECT "approvals_poleemploiapproval"."id",
                 "approvals_poleemploiapproval"."start_at",
                 "approvals_poleemploiapproval"."end_at",
                 "approvals_poleemploiapproval"."created_at",
                 "approvals_poleemploiapproval"."pe_notification_status",
                 "approvals_poleemploiapproval"."pe_notification_time",
                 "approvals_poleemploiapproval"."pe_notification_endpoint",
                 "approvals_poleemploiapproval"."pe_notification_exit_code",
                 "approvals_poleemploiapproval"."pe_structure_code",
                 "approvals_poleemploiapproval"."number",
                 "approvals_poleemploiapproval"."pole_emploi_id",
                 "approvals_poleemploiapproval"."first_name",
                 "approvals_poleemploiapproval"."last_name",
                 "approvals_poleemploiapproval"."birth_name",
                 "approvals_poleemploiapproval"."birthdate",
                 "approvals_poleemploiapproval"."nir",
                 "approvals_poleemploiapproval"."ntt_nia",
                 "approvals_poleemploiapproval"."siae_siret",
                 "approvals_poleemploiapproval"."siae_kind"
          FROM "approvals_poleemploiapproval"
          WHERE ("approvals_poleemploiapproval"."nir" = %s
                 AND NOT ("approvals_poleemploiapproval"."number" IN
                            (SELECT U0."number" AS "number"
                             FROM "approvals_approval" U0
                             WHERE U0."user_id" = %s)))
          ORDER BY "approvals_poleemploiapproval"."end_at" DESC,
                   "approvals_poleemploiapproval"."start_at" ASC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'EligibilityDiagnosisQuerySet.first[<site-packages>/django/db/models/query.py]',
          'RelatedManager.last_considered_valid[eligibility/models/iae.py]',
          'RelatedManager.has_considered_valid[eligibility/models/iae.py]',
          'User.has_valid_diagnosis[users/models.py]',
          '_get_eligibility_status[job_applications/export.py]',
          '_serialize_job_application[job_applications/export.py]',
          '_job_applications_serializer[job_applications/export.py]',
          'serialize_queryset_by_batch[<site-packages>/xlsx_streaming/streaming.py]',
        ]),
        'sql': '''
          SELECT "eligibility_eligibilitydiagnosis"."id",
                 "eligibility_eligibilitydiagnosis"."author_id",
                 "eligibility_eligibilitydiagnosis"."author_kind",
                 "eligibility_eligibilitydiagnosis"."author_prescriber_organization_id",
                 "eligibility_eligibilitydiagnosis"."created_at",
                 "eligibility_eligibilitydiagnosis"."updated_at",
                 "eligibility_eligibilitydiagnosis"."expires_at",
                 "eligibility_eligibilitydiagnosis"."job_seeker_id",
                 "eligibility_eligibilitydiagnosis"."author_siae_id",
                 CASE
                     WHEN "eligibility_eligibilitydiagnosis"."author_kind" = %s THEN %s
                     ELSE %s
                 END AS "from_prescriber",
                 T3."id",
                 T3."password",
                 T3."last_login",
                 T3."is_superuser",
                 T3."username",
                 T3."first_name",
                 T3."last_name",
                 T3."is_staff",
                 T3."is_active",
                 T3."date_joined",
                 T3."address_line_1",
                 T3."address_line_2",
                 T3."post_code",
                 T3."city",
                 T3."department",
                 T3."coords",
                 T3."geocoding_score",
                 T3."geocoding_updated_at",
                 T3."ban_api_resolved_address",
                 T3."insee_city_id",
                 T3."title",
                 T3."full_name_search_vector",
                 T3."email",
                 T3."phone",
                 T3."kind",
                 T3."identity_provider",
                 T3."has_completed_welcoming_tour",
                 T3."created_by_id",
                 T3."external_data_source_history",
                 T3."last_checked_at",
                 T3."public_id",
                 T3."address_filled_at",
                 T3."first_login",
                 T3."upcoming_deletion_notified_at",
                 T3."allow_next_sso_sub_update",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history"
          FROM "eligibility_eligibilitydiagnosis"
          INNER JOIN "users_user" T3 ON ("eligibility_eligibilitydiagnosis"."author_id" = T3."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("eligibility_eligibilitydiagnosis"."author_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "companies_company" ON ("eligibility_eligibilitydiagnosis"."author_siae_id" = "companies_company"."id")
          WHERE ("eligibility_eligibilitydiagnosis"."job_seeker_id" = %s
                 AND "eligibility_eligibilitydiagnosis"."author_kind" = %s
                 AND "eligibility_eligibilitydiagnosis"."job_seeker_id" = %s
                 AND "eligibility_eligibilitydiagnosis"."expires_at" > %s)
          ORDER BY 10 DESC,
                   "eligibility_eligibilitydiagnosis"."created_at" DESC
          LIMIT 1
        ''',
      }),
    ]),
  })
# ---
# name: test_exports_download[export content]
  list([
    list([
      'Civilité candidat',
      'Nom candidat',
      'Prénom candidat',
      'Email candidat',
      'Téléphone candidat',
      'Date de naissance candidat',
      'Ville candidat',
      'Département candidat',
      'Nom structure employeur',
      'Type employeur',
      'Métiers',
      'Source de la candidature',
      'Nom organisation prescripteur',
      'Nom utilisateur prescripteur',
      'Date de la candidature',
      'Statut de la candidature',
      'Dates de début d’embauche',
      'Dates de fin d’embauche',
      'Motifs de refus',
      'Éligibilité IAE validée',
      'Eligible au contrôle',
      'Numéro PASS\xa0IAE',
      'Début PASS\xa0IAE',
      'Fin PASS\xa0IAE',
      'Statut PASS\xa0IAE',
    ]),
    list([
      'MME',
      'Doe',
      'Jane',
      'jane.doe@test.local',
      '0612345678',
      datetime.datetime(1990, 1, 1, 0, 0),
      'Rennes',
      '35000',
      'Acme inc.',
      'EI',
      'Candidature spontanée',
      'Orienteur',
      '',
      'Pierre DUPONT',
      datetime.datetime(2024, 8, 18, 0, 0),
      'Nouvelle candidature',
      datetime.datetime(2024, 8, 18, 0, 0),
      datetime.datetime(2026, 8, 18, 0, 0),
      '',
      'oui',
      'non',
      '',
      '',
      '',
      '',
    ]),
    list([
      '',
      'U…',
      'S…',
      '',
      '',
      '',
      '',
      '',
      'Le fameux garage',
      'EI',
      'Candidature spontanée',
      'Orienteur',
      '',
      'Pierre DUPONT',
      datetime.datetime(2024, 8, 17, 0, 0),
      'Nouvelle candidature',
      datetime.datetime(2024, 8, 18, 0, 0),
      datetime.datetime(2026, 8, 18, 0, 0),
      '',
      'oui',
      'non',
      '',
      '',
      '',
      '',
    ]),
  ])
# ---
# name: test_filters
  '''
  <div aria-labelledby="offcanvasApplyFiltersLabel" class="c-offcanvas-filters offcanvas offcanvas-end" id="offcanvasApplyFilters" tabindex="-1">
      <div class="offcanvas-header">
          <h4 class="mb-0 btn-ico" id="offcanvasApplyFiltersLabel">
              <i aria-hidden="true" class="ri-sound-module-fill fw-medium">
              </i>
              <span>
                  Filtrer
              </span>
          </h4>
          <button aria-label="Fermer" class="btn-close" data-bs-dismiss="offcanvas" type="button">
          </button>
      </div>
      <div class="offcanvas-body" id="offcanvasApplyFiltersContent">
          <fieldset>
              <legend>
                  <button aria-controls="collapseStates" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseStates" data-bs-toggle="collapse" type="button">
                      Statut
                  </button>
              </legend>
              <div class="my-3 collapse" id="collapseStates">
                  <ul>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_0" name="states" type="checkbox" value="new"/>
                              <label class="form-check-label" for="id_states_0">
                                  Nouvelle candidature
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_1" name="states" type="checkbox" value="processing"/>
                              <label class="form-check-label" for="id_states_1">
                                  Candidature à l'étude
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_2" name="states" type="checkbox" value="postponed"/>
                              <label class="form-check-label" for="id_states_2">
                                  Candidature en attente
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_3" name="states" type="checkbox" value="prior_to_hire"/>
                              <label class="form-check-label" for="id_states_3">
                                  Action préalable à l’embauche
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_4" name="states" type="checkbox" value="accepted"/>
                              <label class="form-check-label" for="id_states_4">
                                  Candidature acceptée
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_5" name="states" type="checkbox" value="refused"/>
                              <label class="form-check-label" for="id_states_5">
                                  Candidature déclinée
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_6" name="states" type="checkbox" value="cancelled"/>
                              <label class="form-check-label" for="id_states_6">
                                  Embauche annulée
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_7" name="states" type="checkbox" value="obsolete"/>
                              <label class="form-check-label" for="id_states_7">
                                  Embauché ailleurs
                              </label>
                          </div>
                      </li>
                  </ul>
              </div>
          </fieldset>
          <input id="display-kind" name="display" type="hidden" value="list"/>
          <input id="id_order" name="order" type="hidden" value="-created_at"/>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapseToCompanies" aria-expanded="false" class="btn has-collapse-caret collapsed" data-bs-target="#collapseToCompanies" data-bs-toggle="collapse" type="button">
                      Organisation destinataire
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapseToCompanies">
                  <div class="form-group">
                      <label class="visually-hidden" for="id_to_companies">
                          Organisation
                      </label>
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_to_companies" lang="fr" multiple="" name="to_companies">
                      </select>
                  </div>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapseSenders" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseSenders" data-bs-toggle="collapse" type="button">
                      Émetteur
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapseSenders">
                  <div class="form-group">
                      <label class="form-label" for="id_senders">
                          Nom de la personne
                      </label>
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_senders" lang="fr" multiple="" name="senders">
                      </select>
                  </div>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapse-criteria" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-criteria" data-bs-toggle="collapse" type="button">
                      Critères administratifs déclarés
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapse-criteria">
                  <div class="form-group">
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_criteria" lang="fr" multiple="" name="criteria">
                          <option value="1">
                              Bénéficiaire du RSA
                          </option>
                          <option value="2">
                              Allocataire ASS
                          </option>
                          <option value="3">
                              Allocataire AAH
                          </option>
                          <option value="4">
                              DETLD (+ 24 mois)
                          </option>
                          <option value="5">
                              Niveau d'étude 3 (CAP, BEP) ou infra
                          </option>
                          <option value="6">
                              Senior (+50 ans)
                          </option>
                          <option value="7">
                              Jeune (-26 ans)
                          </option>
                          <option value="8">
                              Sortant de l'ASE
                          </option>
                          <option value="9">
                              DELD (12-24 mois)
                          </option>
                          <option value="10">
                              Travailleur handicapé
                          </option>
                          <option value="11">
                              Parent isolé
                          </option>
                          <option value="12">
                              Personne sans hébergement ou hébergée ou ayant un parcours de rue
                          </option>
                          <option value="13">
                              Réfugié statutaire, bénéficiaire d'une protection temporaire, protégé subsidiaire ou demandeur d'asile
                          </option>
                          <option value="14">
                              Résident ZRR
                          </option>
                          <option value="15">
                              Résident QPV
                          </option>
                          <option value="16">
                              Sortant de détention ou personne placée sous main de justice
                          </option>
                          <option value="17">
                              Maîtrise de la langue française
                          </option>
                          <option value="18">
                              Mobilité
                          </option>
                      </select>
                  </div>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapseEligibility" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseEligibility" data-bs-toggle="collapse" type="button">
                      Éligibilité IAE
                  </button>
              </legend>
              <div class="my-3 collapse" id="collapseEligibility">
                  <ul>
                      <li>
                          <div class="">
                              <div class="form-check">
                                  <input class="form-check-input is-valid" id="id_eligibility_validated" name="eligibility_validated" type="checkbox"/>
                                  <label class="form-check-label" for="id_eligibility_validated">
                                      Valide
                                  </label>
                              </div>
                          </div>
                      </li>
                      <li>
                          <div class="">
                              <div class="form-check">
                                  <input class="form-check-input is-valid" id="id_eligibility_pending" name="eligibility_pending" type="checkbox"/>
                                  <label class="form-check-label" for="id_eligibility_pending">
                                      À valider
                                  </label>
                              </div>
                          </div>
                      </li>
                  </ul>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapsePassIAE" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapsePassIAE" data-bs-toggle="collapse" type="button">
                      Statut du PASS IAE
                  </button>
              </legend>
              <div class="my-3 collapse" id="collapsePassIAE">
                  <ul>
                      <li>
                          <div class="">
                              <div class="form-check">
                                  <input class="form-check-input is-valid" id="id_pass_iae_active" name="pass_iae_active" type="checkbox"/>
                                  <label class="form-check-label" for="id_pass_iae_active">
                                      Actif
                                  </label>
                              </div>
                          </div>
                      </li>
                      <li>
                          <div class="">
                              <div class="form-check">
                                  <input class="form-check-input is-valid" id="id_pass_iae_suspended" name="pass_iae_suspended" type="checkbox"/>
                                  <label class="form-check-label" for="id_pass_iae_suspended">
                                      Suspendu
                                  </label>
                              </div>
                          </div>
                      </li>
                      <li>
                          <div class="">
                              <div class="form-check">
                                  <input class="form-check-input is-valid" id="id_pass_iae_expired" name="pass_iae_expired" type="checkbox"/>
                                  <label class="form-check-label" for="id_pass_iae_expired">
                                      Expiré
                                  </label>
                              </div>
                          </div>
                      </li>
                  </ul>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapse-archived" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-archived" data-bs-toggle="collapse" type="button">
                      Candidatures archivées
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapse-archived">
                  <div class="form-group">
                      <div class="is-valid" id="id_archived">
                          <div class="form-check">
                              <input checked="checked" class="form-check-input is-valid" id="id_archived_0" name="archived" type="radio" value=""/>
                              <label class="form-check-label" for="id_archived_0">
                                  Candidatures actives (affichage par défaut)
                              </label>
                          </div>
                          <div class="form-check">
                              <input class="form-check-input is-valid" id="id_archived_1" name="archived" type="radio" value="archived"/>
                              <label class="form-check-label" for="id_archived_1">
                                  Candidatures archivées
                              </label>
                          </div>
                          <div class="form-check">
                              <input class="form-check-input is-valid" id="id_archived_2" name="archived" type="radio" value="all"/>
                              <label class="form-check-label" for="id_archived_2">
                                  Toutes les candidatures
                              </label>
                          </div>
                      </div>
                  </div>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapseDate" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseDate" data-bs-toggle="collapse" type="button">
                      Date d'envoi de la candidature
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapseDate">
                  <div class="form-group">
                      <label class="form-label" for="id_start_date">
                          À partir du
                      </label>
                      <duet-date-picker class="is-valid" identifier="id_start_date" name="start_date">
                      </duet-date-picker>
                  </div>
                  <div class="form-group">
                      <label class="form-label" for="id_end_date">
                          Jusqu'au
                      </label>
                      <duet-date-picker class="is-valid" identifier="id_end_date" name="end_date">
                      </duet-date-picker>
                  </div>
              </div>
          </fieldset>
      </div>
      <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
          <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">
              Voir
          </button>
      </div>
  </div>
  
  '''
# ---
# name: test_list_snapshot[applications list]
  '''
  <section aria-labelledby="apply-list-count" id="job-applications-section">
      <div class="c-box c-box--results has-links-inside my-3 my-md-4">
          <div class="c-box--results__header">
              <div class="d-flex flex-column flex-lg-row gap-1 gap-lg-3 mb-3">
                  <p class="fs-sm mb-0 flex-grow-1">
                      Émise le 27 novembre 2024 par
                      <strong>
                          Vous
                      </strong>
                      chez
                      <a class="btn-ico btn-link" href="/company/[PK of Company]/card?back_url=/apply/prescriptions/list%3Fdisplay%3Dlist">
                          <i aria-hidden="true" class="ri-community-line fw-medium ri-sm me-1">
                          </i>
                          <span>
                              Acme inc.
                          </span>
                      </a>
                  </p>
                  <div>
                      <span class="badge rounded-pill text-nowrap badge-sm mb-1 bg-danger" id="state_[PK of JobApplication]">
                          Candidature déclinée
                      </span>
                  </div>
              </div>
              <div class="c-box--results__summary">
                  <i aria-hidden="true" class="ri-user-line">
                  </i>
                  <div>
                      <h3>
                          J… D…
                      </h3>
                      <div class="d-flex flex-column flex-md-row align-items-start align-items-md-end gap-1 gap-md-2">
                          <span>
                              <i aria-hidden="true" class="ri-map-pin-2-line fw-normal me-1">
                              </i>
                              35 -
                                  Rennes
                          </span>
                          <span class="badge badge-xs rounded-pill bg-warning-lighter text-warning">
                              <i aria-hidden="true" class="ri-error-warning-line">
                              </i>
                              Éligibilité IAE à valider
                          </span>
                      </div>
                  </div>
              </div>
          </div>
          <hr class="m-0"/>
          <div class="c-box--results__body">
              <div class="c-box--results__list-data">
                  <div class="c-info c-info--secondary">
                      <span class="c-info__summary">
                          Candidature spontanée
                      </span>
                  </div>
              </div>
          </div>
          <div class="c-box--results__footer">
              <div class="d-flex flex-column flex-md-row justify-content-md-end align-items-md-center gap-3">
                  <a aria-label="Gérer la candidature de J… D…" class="btn btn-outline-primary btn-block w-100 w-md-auto" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir_candidature_prescripteur" href="/apply/[PK of JobApplication]/prescriber/details?back_url=/apply/prescriptions/list%3Fdisplay%3Dlist">
                      Voir sa candidature
                  </a>
              </div>
          </div>
      </div>
      <div class="c-box c-box--results has-links-inside my-3 my-md-4">
          <div class="c-box--results__header">
              <div class="d-flex flex-column flex-lg-row gap-1 gap-lg-3 mb-3">
                  <p class="fs-sm mb-0 flex-grow-1">
                      Émise le 27 novembre 2024 par
                      <strong>
                          Vous
                      </strong>
                      chez
                      <a class="btn-ico btn-link" href="/company/[PK of Company]/card?back_url=/apply/prescriptions/list%3Fdisplay%3Dlist">
                          <i aria-hidden="true" class="ri-community-line fw-medium ri-sm me-1">
                          </i>
                          <span>
                              Acme inc.
                          </span>
                      </a>
                  </p>
                  <div>
                      <span class="badge rounded-pill text-nowrap badge-sm mb-1 bg-info" id="state_[PK of JobApplication]">
                          Nouvelle candidature
                      </span>
                  </div>
              </div>
              <div class="c-box--results__summary">
                  <i aria-hidden="true" class="ri-user-line">
                  </i>
                  <div>
                      <h3>
                          J… D…
                      </h3>
                      <div class="d-flex flex-column flex-md-row align-items-start align-items-md-end gap-1 gap-md-2">
                          <span>
                              <i aria-hidden="true" class="ri-map-pin-2-line fw-normal me-1">
                              </i>
                              35 -
                                  Rennes
                          </span>
                          <span class="badge badge-xs rounded-pill bg-warning-lighter text-warning">
                              <i aria-hidden="true" class="ri-error-warning-line">
                              </i>
                              Éligibilité IAE à valider
                          </span>
                      </div>
                  </div>
              </div>
          </div>
          <hr class="m-0"/>
          <div class="c-box--results__body">
              <div class="c-box--results__list-data">
                  <div class="c-info c-info--secondary">
                      <span class="c-info__summary">
                          Candidature spontanée
                      </span>
                  </div>
              </div>
          </div>
          <div class="c-box--results__footer">
              <div class="d-flex flex-column flex-md-row justify-content-md-end align-items-md-center gap-3">
                  <a aria-label="Gérer la candidature de J… D…" class="btn btn-outline-primary btn-block w-100 w-md-auto" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir_candidature_prescripteur" href="/apply/[PK of JobApplication]/prescriber/details?back_url=/apply/prescriptions/list%3Fdisplay%3Dlist">
                      Voir sa candidature
                  </a>
              </div>
          </div>
      </div>
      <div class="c-box c-box--results has-links-inside my-3 my-md-4">
          <div class="c-box--results__header">
              <div class="d-flex flex-column flex-lg-row gap-1 gap-lg-3 mb-3">
                  <p class="fs-sm mb-0 flex-grow-1">
                      Émise le 27 novembre 2024 par
                      <strong>
                          Vous
                      </strong>
                      chez
                      <a class="btn-ico btn-link" href="/company/[PK of Company]/card?back_url=/apply/prescriptions/list%3Fdisplay%3Dlist">
                          <i aria-hidden="true" class="ri-community-line fw-medium ri-sm me-1">
                          </i>
                          <span>
                              Acme inc.
                          </span>
                      </a>
                  </p>
                  <div>
                      <span class="badge rounded-pill text-nowrap badge-sm mb-1 bg-success" id="state_[PK of JobApplication]">
                          Candidature acceptée
                      </span>
                  </div>
              </div>
              <div class="c-box--results__summary">
                  <i aria-hidden="true" class="ri-user-line">
                  </i>
                  <div>
                      <h3>
                          J… D…
                      </h3>
                      <div class="d-flex flex-column flex-md-row align-items-start align-items-md-end gap-1 gap-md-2">
                          <span>
                              <i aria-hidden="true" class="ri-map-pin-2-line fw-normal me-1">
                              </i>
                              35 -
                                  Rennes
                          </span>
                          <span class="badge badge-xs rounded-pill bg-warning-lighter text-warning">
                              <i aria-hidden="true" class="ri-error-warning-line">
                              </i>
                              Éligibilité IAE à valider
                          </span>
                      </div>
                  </div>
              </div>
          </div>
          <hr class="m-0"/>
          <div class="c-box--results__body">
              <div class="c-box--results__list-data">
                  <div class="c-info c-info--secondary">
                      <span class="c-info__summary">
                          Candidature spontanée
                      </span>
                  </div>
              </div>
          </div>
          <div class="c-box--results__footer">
              <div class="d-flex flex-column flex-md-row justify-content-md-end align-items-md-center gap-3">
                  <a aria-label="Gérer la candidature de J… D…" class="btn btn-outline-primary btn-block w-100 w-md-auto" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir_candidature_prescripteur" href="/apply/[PK of JobApplication]/prescriber/details?back_url=/apply/prescriptions/list%3Fdisplay%3Dlist">
                      Voir sa candidature
                  </a>
              </div>
          </div>
      </div>
  </section>
  
  '''
# ---
# name: test_list_snapshot[applications table]
  '''
  <section aria-labelledby="apply-list-count" id="job-applications-section">
      <div class="table-responsive mt-3 mt-md-4">
          <table class="table table-hover table-sortable">
              <caption class="visually-hidden">
                  Liste des candidatures (les colonnes disposant d’un bouton dans leur entête peuvent être triées en cliquant sur le bouton)
              </caption>
              <thead>
                  <tr>
                      <th aria-sort="none" scope="col">
                          <button data-emplois-elements-visibility-on-selection="disabled" data-emplois-setter-target="#id_order" data-emplois-setter-value="job_seeker_full_name" type="button">
                              Candidature de
                          </button>
                      </th>
                      <th aria-sort="descending" scope="col">
                          <button data-emplois-elements-visibility-on-selection="disabled" data-emplois-setter-target="#id_order" data-emplois-setter-value="created_at" type="button">
                              Émise le
                          </button>
                      </th>
                      <th scope="col">
                          Statut
                      </th>
                      <th scope="col">
                          Employeur
                      </th>
                      <th scope="col">
                          Poste
                      </th>
                      <th scope="col">
                          Emetteur
                      </th>
                      <th class="text-nowrap" scope="col">
                          Critères administratifs IAE
                      </th>
                      <th class="text-end w-50px" scope="col">
                      </th>
                  </tr>
              </thead>
              <tbody>
                  <tr class="align-top">
                      <td>
                          <a class="btn-link" href="/apply/[PK of JobApplication]/prescriber/details?back_url=/apply/prescriptions/list%3Fdisplay%3Dtable">
                              J… D…
                          </a>
                          <span class="d-block">
                              35 -
                  Rennes
                          </span>
                          <span class="badge badge-xs rounded-pill bg-warning-lighter text-warning">
                              <i aria-hidden="true" class="ri-error-warning-line">
                              </i>
                              Éligibilité IAE à valider
                          </span>
                      </td>
                      <td>
                          27/11/2024
                      </td>
                      <td>
                          <span class="badge rounded-pill text-nowrap badge-xs bg-danger" id="state_[PK of JobApplication]">
                              Candidature déclinée
                          </span>
                      </td>
                      <td>
                          Acme inc.
                      </td>
                      <td>
                          Candidature spontanée
                      </td>
                      <td>
                          Vous
                      </td>
                      <td>
                          <i class="text-disabled">
                              Aucun critère sélectionné
                          </i>
                      </td>
                      <td class="text-end w-50px align-middle">
                          <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir sa candidature" data-bs-toggle="tooltip" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir_candidature_prescripteur" href="/apply/[PK of JobApplication]/prescriber/details?back_url=/apply/prescriptions/list%3Fdisplay%3Dtable">
                              <i aria-label="Gérer la candidature de J… D…" class="ri-arrow-drop-right-line fs-lg">
                              </i>
                          </a>
                      </td>
                  </tr>
                  <tr class="align-top">
                      <td>
                          <a class="btn-link" href="/apply/[PK of JobApplication]/prescriber/details?back_url=/apply/prescriptions/list%3Fdisplay%3Dtable">
                              J… D…
                          </a>
                          <span class="d-block">
                              35 -
                  Rennes
                          </span>
                          <span class="badge badge-xs rounded-pill bg-warning-lighter text-warning">
                              <i aria-hidden="true" class="ri-error-warning-line">
                              </i>
                              Éligibilité IAE à valider
                          </span>
                      </td>
                      <td>
                          27/11/2024
                      </td>
                      <td>
                          <span class="badge rounded-pill text-nowrap badge-xs bg-info" id="state_[PK of JobApplication]">
                              Nouvelle candidature
                          </span>
                      </td>
                      <td>
                          Acme inc.
                      </td>
                      <td>
                          Candidature spontanée
                      </td>
                      <td>
                          Vous
                      </td>
                      <td>
                          <i class="text-disabled">
                              Aucun critère sélectionné
                          </i>
                      </td>
                      <td class="text-end w-50px align-middle">
                          <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir sa candidature" data-bs-toggle="tooltip" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir_candidature_prescripteur" href="/apply/[PK of JobApplication]/prescriber/details?back_url=/apply/prescriptions/list%3Fdisplay%3Dtable">
                              <i aria-label="Gérer la candidature de J… D…" class="ri-arrow-drop-right-line fs-lg">
                              </i>
                          </a>
                      </td>
                  </tr>
                  <tr class="align-top">
                      <td>
                          <a class="btn-link" href="/apply/[PK of JobApplication]/prescriber/details?back_url=/apply/prescriptions/list%3Fdisplay%3Dtable">
                              J… D…
                          </a>
                          <span class="d-block">
                              35 -
                  Rennes
                          </span>
                          <span class="badge badge-xs rounded-pill bg-warning-lighter text-warning">
                              <i aria-hidden="true" class="ri-error-warning-line">
                              </i>
                              Éligibilité IAE à valider
                          </span>
                      </td>
                      <td>
                          27/11/2024
                      </td>
                      <td>
                          <span class="badge rounded-pill text-nowrap badge-xs bg-success" id="state_[PK of JobApplication]">
                              Candidature acceptée
                          </span>
                      </td>
                      <td>
                          Acme inc.
                      </td>
                      <td>
                          Candidature spontanée
                      </td>
                      <td>
                          Vous
                      </td>
                      <td>
                          <i class="text-disabled">
                              Aucun critère sélectionné
                          </i>
                      </td>
                      <td class="text-end w-50px align-middle">
                          <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir sa candidature" data-bs-toggle="tooltip" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir_candidature_prescripteur" href="/apply/[PK of JobApplication]/prescriber/details?back_url=/apply/prescriptions/list%3Fdisplay%3Dtable">
                              <i aria-label="Gérer la candidature de J… D…" class="ri-arrow-drop-right-line fs-lg">
                              </i>
                          </a>
                      </td>
                  </tr>
              </tbody>
          </table>
      </div>
  </section>
  
  '''
# ---
# name: test_list_snapshot[empty]
  '''
  <section aria-labelledby="apply-list-count" id="job-applications-section">
      <div class="text-center my-3 my-md-4">
          <img alt="" class="img-fluid" loading="lazy" src="/static/img/illustration-card-no-result.png"/>
          <p class="mb-1 mt-3">
              <strong>
                  Aucune candidature pour le moment
              </strong>
          </p>
          <p>
              <i>
                  Vous trouverez ici les candidatures émises par votre organisation
                  <br class="d-none d-lg-inline"/>
                  pour les candidats.
              </i>
          </p>
          <a class="btn btn-outline-primary btn-ico w-100 w-md-auto justify-content-center" href="/search/employers/results">
              <i aria-hidden="true" class="ri-user-follow-line ri-lg fw-normal">
              </i>
              <span>
                  Postuler pour un candidat
              </span>
          </a>
      </div>
  </section>
  
  '''
# ---
# name: test_queries[SQL queries in list mode]
  dict({
    'num_queries': 20,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "prescribers_prescribermembership"."id",
                 "prescribers_prescribermembership"."user_id",
                 "prescribers_prescribermembership"."joined_at",
                 "prescribers_prescribermembership"."is_admin",
                 "prescribers_prescribermembership"."is_active",
                 "prescribers_prescribermembership"."created_at",
                 "prescribers_prescribermembership"."updated_at",
                 "prescribers_prescribermembership"."organization_id",
                 "prescribers_prescribermembership"."updated_by_id",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized"
          FROM "prescribers_prescribermembership"
          INNER JOIN "prescribers_prescriberorganization" ON ("prescribers_prescribermembership"."organization_id" = "prescribers_prescriberorganization"."id")
          WHERE ("prescribers_prescribermembership"."user_id" = %s
                 AND "prescribers_prescribermembership"."is_active")
          ORDER BY "prescribers_prescribermembership"."created_at" ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."full_name_search_vector",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login",
                             "users_user"."upcoming_deletion_notified_at",
                             "users_user"."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "users_user" ON ("job_applications_jobapplication"."sender_id" = "users_user"."id")
          WHERE (("job_applications_jobapplication"."sender_id" = %s
                  AND "job_applications_jobapplication"."sender_prescriber_organization_id" IS NULL)
                 OR "job_applications_jobapplication"."sender_prescriber_organization_id" = %s)
          ORDER BY "job_applications_jobapplication"."sender_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."job_seeker_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             T4."id",
                             T4."password",
                             T4."last_login",
                             T4."is_superuser",
                             T4."username",
                             T4."first_name",
                             T4."last_name",
                             T4."is_staff",
                             T4."is_active",
                             T4."date_joined",
                             T4."address_line_1",
                             T4."address_line_2",
                             T4."post_code",
                             T4."city",
                             T4."department",
                             T4."coords",
                             T4."geocoding_score",
                             T4."geocoding_updated_at",
                             T4."ban_api_resolved_address",
                             T4."insee_city_id",
                             T4."title",
                             T4."full_name_search_vector",
                             T4."email",
                             T4."phone",
                             T4."kind",
                             T4."identity_provider",
                             T4."has_completed_welcoming_tour",
                             T4."created_by_id",
                             T4."external_data_source_history",
                             T4."last_checked_at",
                             T4."public_id",
                             T4."address_filled_at",
                             T4."first_login",
                             T4."upcoming_deletion_notified_at",
                             T4."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" T4 ON ("job_applications_jobapplication"."job_seeker_id" = T4."id")
          WHERE (("job_applications_jobapplication"."sender_id" = %s
                  AND "job_applications_jobapplication"."sender_prescriber_organization_id" IS NULL)
                 OR "job_applications_jobapplication"."sender_prescriber_organization_id" = %s)
          ORDER BY "job_applications_jobapplication"."job_seeker_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'PrescriberFilterJobApplicationsForm._get_choices_for_administrativecriteria[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_administrativecriteria"
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'PrescriberFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at"
          FROM "job_applications_jobapplication"
          WHERE (("job_applications_jobapplication"."sender_id" = %s
                  AND "job_applications_jobapplication"."sender_prescriber_organization_id" IS NULL)
                 OR "job_applications_jobapplication"."sender_prescriber_organization_id" = %s)
          ORDER BY "job_applications_jobapplication"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'PrescriberFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'PrescriberFilterJobApplicationsForm.get_to_companies_choices[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."to_company_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "companies_company"."id",
                             "companies_company"."address_line_1",
                             "companies_company"."address_line_2",
                             "companies_company"."post_code",
                             "companies_company"."city",
                             "companies_company"."department",
                             "companies_company"."coords",
                             "companies_company"."geocoding_score",
                             "companies_company"."geocoding_updated_at",
                             "companies_company"."ban_api_resolved_address",
                             "companies_company"."insee_city_id",
                             "companies_company"."name",
                             "companies_company"."created_at",
                             "companies_company"."updated_at",
                             "companies_company"."uid",
                             "companies_company"."active_members_email_reminder_last_sent_at",
                             "companies_company"."automatic_geocoding_update",
                             "companies_company"."siret",
                             "companies_company"."naf",
                             "companies_company"."kind",
                             "companies_company"."brand",
                             "companies_company"."phone",
                             "companies_company"."email",
                             "companies_company"."auth_email",
                             "companies_company"."website",
                             "companies_company"."description",
                             "companies_company"."provided_support",
                             "companies_company"."source",
                             "companies_company"."created_by_id",
                             "companies_company"."block_job_applications",
                             "companies_company"."job_applications_blocked_at",
                             "companies_company"."spontaneous_applications_open_since",
                             "companies_company"."convention_id",
                             "companies_company"."job_app_score",
                             "companies_company"."is_searchable",
                             "companies_company"."rdv_solidarites_id",
                             "companies_company"."fields_history"
          FROM "job_applications_jobapplication"
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          WHERE (("job_applications_jobapplication"."sender_id" = %s
                  AND "job_applications_jobapplication"."sender_prescriber_organization_id" IS NULL)
                 OR "job_applications_jobapplication"."sender_prescriber_organization_id" = %s)
          ORDER BY "job_applications_jobapplication"."to_company_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT COUNT(*)
          FROM
            (SELECT GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
               (SELECT U0."id" AS "id"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE (U0."expires_at" > %s
                       AND (U0."author_kind" = %s
                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                ORDER BY U0."created_at" DESC
                LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                    COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                               (SELECT U0."id" AS "id"
                                FROM "eligibility_eligibilitydiagnosis" U0
                                WHERE (U0."expires_at" > %s
                                       AND (U0."author_kind" = %s
                                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                ORDER BY U0."created_at" DESC
                                LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
                    (COALESCE(LOWER(T6."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER(T6."last_name"), %s)), %s)) AS "job_seeker_full_name",
          
               (SELECT U1."start_at" AS "appointment__start_at"
                FROM "rdv_insertion_participation" U0
                INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                       AND U1."start_at" > %s
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                       AND U0."status" = %s)
                ORDER BY 1 ASC
                LIMIT 1) AS "next_appointment_start_at",
          
               (SELECT COUNT(U0."id") AS "count"
                FROM "rdv_insertion_participation" U0
                INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                       AND U1."start_at" > %s
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                       AND U0."status" = %s)
                ORDER BY RANDOM() ASC) AS "upcoming_participations_count",
                    (
                       (SELECT COUNT(U0."id") AS "count"
                        FROM "rdv_insertion_participation" U0
                        INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                        WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                               AND U1."start_at" > %s
                               AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                               AND U0."status" = %s)
                        ORDER BY RANDOM() ASC) - %s) AS "other_participations_count"
             FROM "job_applications_jobapplication"
             LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
             INNER JOIN "users_user" T6 ON ("job_applications_jobapplication"."job_seeker_id" = T6."id")
             WHERE ((("job_applications_jobapplication"."sender_id" = %s
                      AND "job_applications_jobapplication"."sender_prescriber_organization_id" IS NULL)
                     OR "job_applications_jobapplication"."sender_prescriber_organization_id" = %s)
                    AND "job_applications_jobapplication"."archived_at" IS NULL)
             GROUP BY "job_applications_jobapplication"."id",
                      3,
                      4,
                      7) subquery
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
            (SELECT U0."id" AS "id"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE (U0."expires_at" > %s
                    AND (U0."author_kind" = %s
                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
             ORDER BY U0."created_at" DESC
             LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                 COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                            (SELECT U0."id" AS "id"
                             FROM "eligibility_eligibilitydiagnosis" U0
                             WHERE (U0."expires_at" > %s
                                    AND (U0."author_kind" = %s
                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                             ORDER BY U0."created_at" DESC
                             LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
                 (COALESCE(LOWER(T6."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER(T6."last_name"), %s)), %s)) AS "job_seeker_full_name",
          
            (SELECT U1."start_at" AS "appointment__start_at"
             FROM "rdv_insertion_participation" U0
             INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
             WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                    AND U1."start_at" > %s
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                    AND U0."status" = %s)
             ORDER BY 1 ASC
             LIMIT 1) AS "next_appointment_start_at",
          
            (SELECT COUNT(U0."id") AS "count"
             FROM "rdv_insertion_participation" U0
             INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
             WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                    AND U1."start_at" > %s
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                    AND U0."status" = %s)
             ORDER BY RANDOM() ASC) AS "upcoming_participations_count",
                 (
                    (SELECT COUNT(U0."id") AS "count"
                     FROM "rdv_insertion_participation" U0
                     INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                     WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                            AND U1."start_at" > %s
                            AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                            AND U0."status" = %s)
                     ORDER BY RANDOM() ASC) - %s) AS "other_participations_count",
                 T6."id",
                 T6."password",
                 T6."last_login",
                 T6."is_superuser",
                 T6."username",
                 T6."first_name",
                 T6."last_name",
                 T6."is_staff",
                 T6."is_active",
                 T6."date_joined",
                 T6."address_line_1",
                 T6."address_line_2",
                 T6."post_code",
                 T6."city",
                 T6."department",
                 T6."coords",
                 T6."geocoding_score",
                 T6."geocoding_updated_at",
                 T6."ban_api_resolved_address",
                 T6."insee_city_id",
                 T6."title",
                 T6."full_name_search_vector",
                 T6."email",
                 T6."phone",
                 T6."kind",
                 T6."identity_provider",
                 T6."has_completed_welcoming_tour",
                 T6."created_by_id",
                 T6."external_data_source_history",
                 T6."last_checked_at",
                 T6."public_id",
                 T6."address_filled_at",
                 T6."first_login",
                 T6."upcoming_deletion_notified_at",
                 T6."allow_next_sso_sub_update",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."ft_gps_id",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."are_allocation_since",
                 "users_jobseekerprofile"."activity_bonus_since",
                 "users_jobseekerprofile"."cape_freelance",
                 "users_jobseekerprofile"."cesa_freelance",
                 "users_jobseekerprofile"."actor_met_for_business_creation",
                 "users_jobseekerprofile"."mean_monthly_income_before_process",
                 "users_jobseekerprofile"."eiti_contributions",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "users_jobseekerprofile"."created_by_prescriber_organization_id",
                 "users_jobseekerprofile"."is_stalled",
                 "users_jobseekerprofile"."is_not_stalled_anymore",
                 "users_jobseekerprofile"."fields_history",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update",
                 T9."id",
                 T9."address_line_1",
                 T9."address_line_2",
                 T9."post_code",
                 T9."city",
                 T9."department",
                 T9."coords",
                 T9."geocoding_score",
                 T9."geocoding_updated_at",
                 T9."ban_api_resolved_address",
                 T9."insee_city_id",
                 T9."name",
                 T9."created_at",
                 T9."updated_at",
                 T9."uid",
                 T9."active_members_email_reminder_last_sent_at",
                 T9."automatic_geocoding_update",
                 T9."siret",
                 T9."naf",
                 T9."kind",
                 T9."brand",
                 T9."phone",
                 T9."email",
                 T9."auth_email",
                 T9."website",
                 T9."description",
                 T9."provided_support",
                 T9."source",
                 T9."created_by_id",
                 T9."block_job_applications",
                 T9."job_applications_blocked_at",
                 T9."spontaneous_applications_open_since",
                 T9."convention_id",
                 T9."job_app_score",
                 T9."is_searchable",
                 T9."rdv_solidarites_id",
                 T9."fields_history",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "users_user" ON ("job_applications_jobapplication"."sender_id" = "users_user"."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          INNER JOIN "users_user" T6 ON ("job_applications_jobapplication"."job_seeker_id" = T6."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON (T6."id" = "users_jobseekerprofile"."user_id")
          LEFT OUTER JOIN "companies_company" T9 ON ("job_applications_jobapplication"."sender_company_id" = T9."id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          LEFT OUTER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          WHERE ((("job_applications_jobapplication"."sender_id" = %s
                   AND "job_applications_jobapplication"."sender_prescriber_organization_id" IS NULL)
                  OR "job_applications_jobapplication"."sender_prescriber_organization_id" = %s)
                 AND "job_applications_jobapplication"."archived_at" IS NULL)
          GROUP BY "job_applications_jobapplication"."id",
                   48,
                   49,
                   52,
                   T6."id",
                   "users_jobseekerprofile"."user_id",
                   "users_user"."id",
                   T9."id",
                   "prescribers_prescriberorganization"."id",
                   "companies_company"."id",
                   "companies_siaeconvention"."id",
                   "approvals_approval"."id"
          ORDER BY "job_applications_jobapplication"."created_at" DESC,
                   "job_applications_jobapplication"."id" DESC
          LIMIT 2
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "approvals_approval"
          WHERE "approvals_approval"."user_id" IN (%s,
                                                   %s)
          ORDER BY "approvals_approval"."start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          '_add_administrative_criteria[www/apply/views/list_views.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "eligibility_selectedadministrativecriteria"."id",
                 "eligibility_selectedadministrativecriteria"."certified",
                 "eligibility_selectedadministrativecriteria"."certified_at",
                 "eligibility_selectedadministrativecriteria"."certification_period",
                 "eligibility_selectedadministrativecriteria"."data_returned_by_api",
                 "eligibility_selectedadministrativecriteria"."created_at",
                 "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id",
                 "eligibility_selectedadministrativecriteria"."administrative_criteria_id",
                 "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_selectedadministrativecriteria"
          INNER JOIN "eligibility_administrativecriteria" ON ("eligibility_selectedadministrativecriteria"."administrative_criteria_id" = "eligibility_administrativecriteria"."id")
          WHERE "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id" IN (%s,
                                                                                            %s)
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."name" ASC
        ''',
      }),
      dict({
        'origin': list([
          'nav[utils/templatetags/nav.py]',
          'InclusionNode[layout/_header_authenticated.html]',
          'IncludeNode[layout/base.html]',
          'IfNode[layout/base.html]',
          'ExtendsNode[apply/list_prescriptions.html]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "prescribers_prescribermembership"
          WHERE "prescribers_prescribermembership"."organization_id" = %s
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Session.save[<site-packages>/django/db/models/base.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          UPDATE "django_session"
          SET "session_data" = %s,
              "expire_date" = %s
          WHERE "django_session"."session_key" = %s
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: test_queries[SQL queries in table mode]
  dict({
    'num_queries': 17,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "prescribers_prescribermembership"."id",
                 "prescribers_prescribermembership"."user_id",
                 "prescribers_prescribermembership"."joined_at",
                 "prescribers_prescribermembership"."is_admin",
                 "prescribers_prescribermembership"."is_active",
                 "prescribers_prescribermembership"."created_at",
                 "prescribers_prescribermembership"."updated_at",
                 "prescribers_prescribermembership"."organization_id",
                 "prescribers_prescribermembership"."updated_by_id",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized"
          FROM "prescribers_prescribermembership"
          INNER JOIN "prescribers_prescriberorganization" ON ("prescribers_prescribermembership"."organization_id" = "prescribers_prescriberorganization"."id")
          WHERE ("prescribers_prescribermembership"."user_id" = %s
                 AND "prescribers_prescribermembership"."is_active")
          ORDER BY "prescribers_prescribermembership"."created_at" ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."full_name_search_vector",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login",
                             "users_user"."upcoming_deletion_notified_at",
                             "users_user"."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "users_user" ON ("job_applications_jobapplication"."sender_id" = "users_user"."id")
          WHERE (("job_applications_jobapplication"."sender_id" = %s
                  AND "job_applications_jobapplication"."sender_prescriber_organization_id" IS NULL)
                 OR "job_applications_jobapplication"."sender_prescriber_organization_id" = %s)
          ORDER BY "job_applications_jobapplication"."sender_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."job_seeker_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             T4."id",
                             T4."password",
                             T4."last_login",
                             T4."is_superuser",
                             T4."username",
                             T4."first_name",
                             T4."last_name",
                             T4."is_staff",
                             T4."is_active",
                             T4."date_joined",
                             T4."address_line_1",
                             T4."address_line_2",
                             T4."post_code",
                             T4."city",
                             T4."department",
                             T4."coords",
                             T4."geocoding_score",
                             T4."geocoding_updated_at",
                             T4."ban_api_resolved_address",
                             T4."insee_city_id",
                             T4."title",
                             T4."full_name_search_vector",
                             T4."email",
                             T4."phone",
                             T4."kind",
                             T4."identity_provider",
                             T4."has_completed_welcoming_tour",
                             T4."created_by_id",
                             T4."external_data_source_history",
                             T4."last_checked_at",
                             T4."public_id",
                             T4."address_filled_at",
                             T4."first_login",
                             T4."upcoming_deletion_notified_at",
                             T4."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" T4 ON ("job_applications_jobapplication"."job_seeker_id" = T4."id")
          WHERE (("job_applications_jobapplication"."sender_id" = %s
                  AND "job_applications_jobapplication"."sender_prescriber_organization_id" IS NULL)
                 OR "job_applications_jobapplication"."sender_prescriber_organization_id" = %s)
          ORDER BY "job_applications_jobapplication"."job_seeker_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'PrescriberFilterJobApplicationsForm._get_choices_for_administrativecriteria[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_administrativecriteria"
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'PrescriberFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at"
          FROM "job_applications_jobapplication"
          WHERE (("job_applications_jobapplication"."sender_id" = %s
                  AND "job_applications_jobapplication"."sender_prescriber_organization_id" IS NULL)
                 OR "job_applications_jobapplication"."sender_prescriber_organization_id" = %s)
          ORDER BY "job_applications_jobapplication"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'PrescriberFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'PrescriberFilterJobApplicationsForm.get_to_companies_choices[www/apply/forms.py]',
          'PrescriberFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."to_company_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "companies_company"."id",
                             "companies_company"."address_line_1",
                             "companies_company"."address_line_2",
                             "companies_company"."post_code",
                             "companies_company"."city",
                             "companies_company"."department",
                             "companies_company"."coords",
                             "companies_company"."geocoding_score",
                             "companies_company"."geocoding_updated_at",
                             "companies_company"."ban_api_resolved_address",
                             "companies_company"."insee_city_id",
                             "companies_company"."name",
                             "companies_company"."created_at",
                             "companies_company"."updated_at",
                             "companies_company"."uid",
                             "companies_company"."active_members_email_reminder_last_sent_at",
                             "companies_company"."automatic_geocoding_update",
                             "companies_company"."siret",
                             "companies_company"."naf",
                             "companies_company"."kind",
                             "companies_company"."brand",
                             "companies_company"."phone",
                             "companies_company"."email",
                             "companies_company"."auth_email",
                             "companies_company"."website",
                             "companies_company"."description",
                             "companies_company"."provided_support",
                             "companies_company"."source",
                             "companies_company"."created_by_id",
                             "companies_company"."block_job_applications",
                             "companies_company"."job_applications_blocked_at",
                             "companies_company"."spontaneous_applications_open_since",
                             "companies_company"."convention_id",
                             "companies_company"."job_app_score",
                             "companies_company"."is_searchable",
                             "companies_company"."rdv_solidarites_id",
                             "companies_company"."fields_history"
          FROM "job_applications_jobapplication"
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          WHERE (("job_applications_jobapplication"."sender_id" = %s
                  AND "job_applications_jobapplication"."sender_prescriber_organization_id" IS NULL)
                 OR "job_applications_jobapplication"."sender_prescriber_organization_id" = %s)
          ORDER BY "job_applications_jobapplication"."to_company_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT COUNT(*)
          FROM
            (SELECT GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
               (SELECT U0."id" AS "id"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE (U0."expires_at" > %s
                       AND (U0."author_kind" = %s
                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                ORDER BY U0."created_at" DESC
                LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                    COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                               (SELECT U0."id" AS "id"
                                FROM "eligibility_eligibilitydiagnosis" U0
                                WHERE (U0."expires_at" > %s
                                       AND (U0."author_kind" = %s
                                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                ORDER BY U0."created_at" DESC
                                LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
                    (COALESCE(LOWER(T6."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER(T6."last_name"), %s)), %s)) AS "job_seeker_full_name"
             FROM "job_applications_jobapplication"
             LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
             INNER JOIN "users_user" T6 ON ("job_applications_jobapplication"."job_seeker_id" = T6."id")
             WHERE ((("job_applications_jobapplication"."sender_id" = %s
                      AND "job_applications_jobapplication"."sender_prescriber_organization_id" IS NULL)
                     OR "job_applications_jobapplication"."sender_prescriber_organization_id" = %s)
                    AND "job_applications_jobapplication"."archived_at" IS NULL)
             GROUP BY "job_applications_jobapplication"."id",
                      3,
                      4) subquery
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
            (SELECT U0."id" AS "id"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE (U0."expires_at" > %s
                    AND (U0."author_kind" = %s
                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
             ORDER BY U0."created_at" DESC
             LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                 COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                            (SELECT U0."id" AS "id"
                             FROM "eligibility_eligibilitydiagnosis" U0
                             WHERE (U0."expires_at" > %s
                                    AND (U0."author_kind" = %s
                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                             ORDER BY U0."created_at" DESC
                             LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
                 (COALESCE(LOWER(T6."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER(T6."last_name"), %s)), %s)) AS "job_seeker_full_name",
                 T6."id",
                 T6."password",
                 T6."last_login",
                 T6."is_superuser",
                 T6."username",
                 T6."first_name",
                 T6."last_name",
                 T6."is_staff",
                 T6."is_active",
                 T6."date_joined",
                 T6."address_line_1",
                 T6."address_line_2",
                 T6."post_code",
                 T6."city",
                 T6."department",
                 T6."coords",
                 T6."geocoding_score",
                 T6."geocoding_updated_at",
                 T6."ban_api_resolved_address",
                 T6."insee_city_id",
                 T6."title",
                 T6."full_name_search_vector",
                 T6."email",
                 T6."phone",
                 T6."kind",
                 T6."identity_provider",
                 T6."has_completed_welcoming_tour",
                 T6."created_by_id",
                 T6."external_data_source_history",
                 T6."last_checked_at",
                 T6."public_id",
                 T6."address_filled_at",
                 T6."first_login",
                 T6."upcoming_deletion_notified_at",
                 T6."allow_next_sso_sub_update",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."ft_gps_id",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."are_allocation_since",
                 "users_jobseekerprofile"."activity_bonus_since",
                 "users_jobseekerprofile"."cape_freelance",
                 "users_jobseekerprofile"."cesa_freelance",
                 "users_jobseekerprofile"."actor_met_for_business_creation",
                 "users_jobseekerprofile"."mean_monthly_income_before_process",
                 "users_jobseekerprofile"."eiti_contributions",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "users_jobseekerprofile"."created_by_prescriber_organization_id",
                 "users_jobseekerprofile"."is_stalled",
                 "users_jobseekerprofile"."is_not_stalled_anymore",
                 "users_jobseekerprofile"."fields_history",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update",
                 T9."id",
                 T9."address_line_1",
                 T9."address_line_2",
                 T9."post_code",
                 T9."city",
                 T9."department",
                 T9."coords",
                 T9."geocoding_score",
                 T9."geocoding_updated_at",
                 T9."ban_api_resolved_address",
                 T9."insee_city_id",
                 T9."name",
                 T9."created_at",
                 T9."updated_at",
                 T9."uid",
                 T9."active_members_email_reminder_last_sent_at",
                 T9."automatic_geocoding_update",
                 T9."siret",
                 T9."naf",
                 T9."kind",
                 T9."brand",
                 T9."phone",
                 T9."email",
                 T9."auth_email",
                 T9."website",
                 T9."description",
                 T9."provided_support",
                 T9."source",
                 T9."created_by_id",
                 T9."block_job_applications",
                 T9."job_applications_blocked_at",
                 T9."spontaneous_applications_open_since",
                 T9."convention_id",
                 T9."job_app_score",
                 T9."is_searchable",
                 T9."rdv_solidarites_id",
                 T9."fields_history",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "users_user" ON ("job_applications_jobapplication"."sender_id" = "users_user"."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          INNER JOIN "users_user" T6 ON ("job_applications_jobapplication"."job_seeker_id" = T6."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON (T6."id" = "users_jobseekerprofile"."user_id")
          LEFT OUTER JOIN "companies_company" T9 ON ("job_applications_jobapplication"."sender_company_id" = T9."id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          LEFT OUTER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          WHERE ((("job_applications_jobapplication"."sender_id" = %s
                   AND "job_applications_jobapplication"."sender_prescriber_organization_id" IS NULL)
                  OR "job_applications_jobapplication"."sender_prescriber_organization_id" = %s)
                 AND "job_applications_jobapplication"."archived_at" IS NULL)
          GROUP BY "job_applications_jobapplication"."id",
                   48,
                   49,
                   T6."id",
                   "users_jobseekerprofile"."user_id",
                   "users_user"."id",
                   T9."id",
                   "prescribers_prescriberorganization"."id",
                   "companies_company"."id",
                   "companies_siaeconvention"."id",
                   "approvals_approval"."id"
          ORDER BY "job_applications_jobapplication"."created_at" DESC,
                   "job_applications_jobapplication"."id" DESC
          LIMIT 2
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "approvals_approval"
          WHERE "approvals_approval"."user_id" IN (%s,
                                                   %s)
          ORDER BY "approvals_approval"."start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          '_add_administrative_criteria[www/apply/views/list_views.py]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "eligibility_selectedadministrativecriteria"."id",
                 "eligibility_selectedadministrativecriteria"."certified",
                 "eligibility_selectedadministrativecriteria"."certified_at",
                 "eligibility_selectedadministrativecriteria"."certification_period",
                 "eligibility_selectedadministrativecriteria"."data_returned_by_api",
                 "eligibility_selectedadministrativecriteria"."created_at",
                 "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id",
                 "eligibility_selectedadministrativecriteria"."administrative_criteria_id",
                 "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_selectedadministrativecriteria"
          INNER JOIN "eligibility_administrativecriteria" ON ("eligibility_selectedadministrativecriteria"."administrative_criteria_id" = "eligibility_administrativecriteria"."id")
          WHERE "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id" IN (%s,
                                                                                            %s)
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."name" ASC
        ''',
      }),
      dict({
        'origin': list([
          'nav[utils/templatetags/nav.py]',
          'InclusionNode[layout/_header_authenticated.html]',
          'IncludeNode[layout/base.html]',
          'IfNode[layout/base.html]',
          'ExtendsNode[apply/list_prescriptions.html]',
          'list_prescriptions[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "prescribers_prescribermembership"
          WHERE "prescribers_prescribermembership"."organization_id" = %s
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: test_reset_filter_button_snapshot[off-canvas buttons in list view]
  '''
  <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
      <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">
          Voir
      </button>
      <a aria-label="Réinitialiser le filtre actif" class="btn btn-ico btn-block btn-outline-primary" href="/apply/prescriptions/list?display=list&order=-created_at">
          <i aria-hidden="true" class="ri-eraser-line fw-medium">
          </i>
          <span>
              Effacer tout
          </span>
      </a>
  </div>
  
  '''
# ---
# name: test_reset_filter_button_snapshot[off-canvas buttons in table view & created_at ascending order]
  '''
  <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
      <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">
          Voir
      </button>
      <a aria-label="Réinitialiser le filtre actif" class="btn btn-ico btn-block btn-outline-primary" href="/apply/prescriptions/list?display=table&order=created_at">
          <i aria-hidden="true" class="ri-eraser-line fw-medium">
          </i>
          <span>
              Effacer tout
          </span>
      </a>
  </div>
  
  '''
# ---
# name: test_reset_filter_button_snapshot[reset-filter button in list view]
  '''
  <div class="ms-md-auto" id="apply-list-filter-counter">
      <a aria-label="Réinitialiser le filtre actif" class="btn btn-ico btn-dropdown-filter" href="/apply/prescriptions/list?display=list&order=-created_at">
          <i aria-hidden="true" class="ri-eraser-line fw-medium">
          </i>
          <span>
              Effacer tout
          </span>
      </a>
  </div>
  
  '''
# ---
# name: test_reset_filter_button_snapshot[reset-filter button in table view & created_at ascending order]
  '''
  <div class="ms-md-auto" id="apply-list-filter-counter">
      <a aria-label="Réinitialiser le filtre actif" class="btn btn-ico btn-dropdown-filter" href="/apply/prescriptions/list?display=table&order=created_at">
          <i aria-hidden="true" class="ri-eraser-line fw-medium">
          </i>
          <span>
              Effacer tout
          </span>
      </a>
  </div>
  
  '''
# ---
