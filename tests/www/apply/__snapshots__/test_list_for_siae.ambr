# serializer version: 1
# name: TestProcessListSiae.test_list_for_siae[SQL queries in list mode]
  dict({
    'num_queries': 28,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_companymembership"."id",
                 "companies_companymembership"."user_id",
                 "companies_companymembership"."joined_at",
                 "companies_companymembership"."is_admin",
                 "companies_companymembership"."is_active",
                 "companies_companymembership"."created_at",
                 "companies_companymembership"."updated_at",
                 "companies_companymembership"."company_id",
                 "companies_companymembership"."updated_by_id"
          FROM "companies_companymembership"
          WHERE ("companies_companymembership"."user_id" = %s
                 AND "companies_companymembership"."is_active")
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_siaeconvention" U0
             WHERE (U0."deactivated_at" >= %s
                    AND U0."id" = ("companies_company"."convention_id"))
             LIMIT 1) AS "has_convention_in_grace_period",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at"
          FROM "companies_company"
          INNER JOIN "companies_companymembership" ON ("companies_company"."id" = "companies_companymembership"."company_id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND "companies_companymembership"."user_id" = %s
                 AND "companies_company"."id" IN (%s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1)
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."deactivated_at" >= %s
                                AND U0."id" = ("companies_company"."convention_id"))
                         LIMIT 1)))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "job_applications_jobapplication"
          WHERE ("job_applications_jobapplication"."to_company_id" = %s
                 AND "job_applications_jobapplication"."state" IN (%s,
                                                                   %s,
                                                                   %s))
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."full_name_search_vector",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login",
                             "users_user"."upcoming_deletion_notified_at",
                             "users_user"."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "users_user" ON ("job_applications_jobapplication"."sender_id" = "users_user"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."job_seeker_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."full_name_search_vector",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login",
                             "users_user"."upcoming_deletion_notified_at",
                             "users_user"."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."job_seeker_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_administrativecriteria[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_administrativecriteria"
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at"
          FROM "job_applications_jobapplication"
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."source_tags",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text"
          FROM "jobs_appellation"
          WHERE ("jobs_appellation"."code") IN ((%s), (%s))
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.get_sender_prescriber_organization_choices[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_prescriber_organization_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "prescribers_prescriberorganization"."id",
                             "prescribers_prescriberorganization"."address_line_1",
                             "prescribers_prescriberorganization"."address_line_2",
                             "prescribers_prescriberorganization"."post_code",
                             "prescribers_prescriberorganization"."city",
                             "prescribers_prescriberorganization"."department",
                             "prescribers_prescriberorganization"."coords",
                             "prescribers_prescriberorganization"."geocoding_score",
                             "prescribers_prescriberorganization"."geocoding_updated_at",
                             "prescribers_prescriberorganization"."ban_api_resolved_address",
                             "prescribers_prescriberorganization"."insee_city_id",
                             "prescribers_prescriberorganization"."name",
                             "prescribers_prescriberorganization"."created_at",
                             "prescribers_prescriberorganization"."updated_at",
                             "prescribers_prescriberorganization"."uid",
                             "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                             "prescribers_prescriberorganization"."automatic_geocoding_update",
                             "prescribers_prescriberorganization"."siret",
                             "prescribers_prescriberorganization"."kind",
                             "prescribers_prescriberorganization"."is_brsa",
                             "prescribers_prescriberorganization"."phone",
                             "prescribers_prescriberorganization"."email",
                             "prescribers_prescriberorganization"."website",
                             "prescribers_prescriberorganization"."description",
                             "prescribers_prescriberorganization"."code_safir_pole_emploi",
                             "prescribers_prescriberorganization"."created_by_id",
                             "prescribers_prescriberorganization"."authorization_status",
                             "prescribers_prescriberorganization"."authorization_updated_at",
                             "prescribers_prescriberorganization"."authorization_updated_by_id",
                             "prescribers_prescriberorganization"."is_gps_authorized"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_prescriber_organization_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.get_sender_companies_choices[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_company_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             T3."id",
                             T3."address_line_1",
                             T3."address_line_2",
                             T3."post_code",
                             T3."city",
                             T3."department",
                             T3."coords",
                             T3."geocoding_score",
                             T3."geocoding_updated_at",
                             T3."ban_api_resolved_address",
                             T3."insee_city_id",
                             T3."name",
                             T3."created_at",
                             T3."updated_at",
                             T3."uid",
                             T3."active_members_email_reminder_last_sent_at",
                             T3."automatic_geocoding_update",
                             T3."siret",
                             T3."naf",
                             T3."kind",
                             T3."brand",
                             T3."phone",
                             T3."email",
                             T3."auth_email",
                             T3."website",
                             T3."description",
                             T3."provided_support",
                             T3."source",
                             T3."created_by_id",
                             T3."block_job_applications",
                             T3."job_applications_blocked_at",
                             T3."spontaneous_applications_open_since",
                             T3."convention_id",
                             T3."job_app_score",
                             T3."is_searchable",
                             T3."rdv_solidarites_id",
                             T3."fields_history"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "companies_company" T3 ON ("job_applications_jobapplication"."sender_company_id" = T3."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_company_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*)
          FROM
            (SELECT GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
               (SELECT U0."id" AS "id"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE (U0."expires_at" > %s
                       AND (U0."author_kind" = %s
                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                ORDER BY U0."created_at" DESC
                LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                    COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                               (SELECT U0."id" AS "id"
                                FROM "eligibility_eligibilitydiagnosis" U0
                                WHERE (U0."expires_at" > %s
                                       AND (U0."author_kind" = %s
                                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                ORDER BY U0."created_at" DESC
                                LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
          
               (SELECT U0."author_kind" AS "author_kind"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE U0."id" = (COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                                            (SELECT U0."id" AS "id"
                                             FROM "eligibility_eligibilitydiagnosis" U0
                                             WHERE (U0."expires_at" > %s
                                                    AND (U0."author_kind" = %s
                                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                             ORDER BY U0."created_at" DESC
                                             LIMIT 1)))
                ORDER BY U0."created_at" DESC) AS "jobseeker_eligibility_diagnosis_author_kind",
          
               (SELECT U1."start_at" AS "appointment__start_at"
                FROM "rdv_insertion_participation" U0
                INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                       AND U1."start_at" > %s
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                       AND U0."status" = %s)
                ORDER BY 1 ASC
                LIMIT 1) AS "next_appointment_start_at",
          
               (SELECT COUNT(U0."id") AS "count"
                FROM "rdv_insertion_participation" U0
                INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                       AND U1."start_at" > %s
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                       AND U0."status" = %s)
                ORDER BY RANDOM() ASC) AS "upcoming_participations_count",
                    EXISTS
               (SELECT %s AS "a"
                FROM "rdv_insertion_invitationrequest" U0
                WHERE (U0."company_id" = ("job_applications_jobapplication"."to_company_id")
                       AND U0."created_at" > %s
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                LIMIT 1) AS "has_pending_rdv_insertion_invitation_request",
                    (
                       (SELECT COUNT(U0."id") AS "count"
                        FROM "rdv_insertion_participation" U0
                        INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                        WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                               AND U1."start_at" > %s
                               AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                               AND U0."status" = %s)
                        ORDER BY RANDOM() ASC) - %s) AS "other_participations_count",
                    (COALESCE(LOWER("users_user"."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER("users_user"."last_name"), %s)), %s)) AS "job_seeker_full_name"
             FROM "job_applications_jobapplication"
             LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
             INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
             WHERE ("job_applications_jobapplication"."to_company_id" = %s
                    AND "job_applications_jobapplication"."archived_at" IS NULL)
             GROUP BY "job_applications_jobapplication"."id",
                      3,
                      8,
                      9) subquery
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
            (SELECT U0."id" AS "id"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE (U0."expires_at" > %s
                    AND (U0."author_kind" = %s
                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
             ORDER BY U0."created_at" DESC
             LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                 COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                            (SELECT U0."id" AS "id"
                             FROM "eligibility_eligibilitydiagnosis" U0
                             WHERE (U0."expires_at" > %s
                                    AND (U0."author_kind" = %s
                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                             ORDER BY U0."created_at" DESC
                             LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
          
            (SELECT U0."author_kind" AS "author_kind"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE U0."id" = (COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                                         (SELECT U0."id" AS "id"
                                          FROM "eligibility_eligibilitydiagnosis" U0
                                          WHERE (U0."expires_at" > %s
                                                 AND (U0."author_kind" = %s
                                                      OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                                 AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                          ORDER BY U0."created_at" DESC
                                          LIMIT 1)))
             ORDER BY U0."created_at" DESC) AS "jobseeker_eligibility_diagnosis_author_kind",
          
            (SELECT U1."start_at" AS "appointment__start_at"
             FROM "rdv_insertion_participation" U0
             INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
             WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                    AND U1."start_at" > %s
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                    AND U0."status" = %s)
             ORDER BY 1 ASC
             LIMIT 1) AS "next_appointment_start_at",
          
            (SELECT COUNT(U0."id") AS "count"
             FROM "rdv_insertion_participation" U0
             INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
             WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                    AND U1."start_at" > %s
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                    AND U0."status" = %s)
             ORDER BY RANDOM() ASC) AS "upcoming_participations_count",
                 EXISTS
            (SELECT %s AS "a"
             FROM "rdv_insertion_invitationrequest" U0
             WHERE (U0."company_id" = ("job_applications_jobapplication"."to_company_id")
                    AND U0."created_at" > %s
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
             LIMIT 1) AS "has_pending_rdv_insertion_invitation_request",
                 (
                    (SELECT COUNT(U0."id") AS "count"
                     FROM "rdv_insertion_participation" U0
                     INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                     WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                            AND U1."start_at" > %s
                            AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                            AND U0."status" = %s)
                     ORDER BY RANDOM() ASC) - %s) AS "other_participations_count",
                 (COALESCE(LOWER("users_user"."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER("users_user"."last_name"), %s)), %s)) AS "job_seeker_full_name",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."ft_gps_id",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."are_allocation_since",
                 "users_jobseekerprofile"."activity_bonus_since",
                 "users_jobseekerprofile"."cape_freelance",
                 "users_jobseekerprofile"."cesa_freelance",
                 "users_jobseekerprofile"."actor_met_for_business_creation",
                 "users_jobseekerprofile"."mean_monthly_income_before_process",
                 "users_jobseekerprofile"."eiti_contributions",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "users_jobseekerprofile"."created_by_prescriber_organization_id",
                 "users_jobseekerprofile"."is_stalled",
                 "users_jobseekerprofile"."is_not_stalled_anymore",
                 "users_jobseekerprofile"."fields_history",
                 T7."id",
                 T7."password",
                 T7."last_login",
                 T7."is_superuser",
                 T7."username",
                 T7."first_name",
                 T7."last_name",
                 T7."is_staff",
                 T7."is_active",
                 T7."date_joined",
                 T7."address_line_1",
                 T7."address_line_2",
                 T7."post_code",
                 T7."city",
                 T7."department",
                 T7."coords",
                 T7."geocoding_score",
                 T7."geocoding_updated_at",
                 T7."ban_api_resolved_address",
                 T7."insee_city_id",
                 T7."title",
                 T7."full_name_search_vector",
                 T7."email",
                 T7."phone",
                 T7."kind",
                 T7."identity_provider",
                 T7."has_completed_welcoming_tour",
                 T7."created_by_id",
                 T7."external_data_source_history",
                 T7."last_checked_at",
                 T7."public_id",
                 T7."address_filled_at",
                 T7."first_login",
                 T7."upcoming_deletion_notified_at",
                 T7."allow_next_sso_sub_update",
                 T8."id",
                 T8."address_line_1",
                 T8."address_line_2",
                 T8."post_code",
                 T8."city",
                 T8."department",
                 T8."coords",
                 T8."geocoding_score",
                 T8."geocoding_updated_at",
                 T8."ban_api_resolved_address",
                 T8."insee_city_id",
                 T8."name",
                 T8."created_at",
                 T8."updated_at",
                 T8."uid",
                 T8."active_members_email_reminder_last_sent_at",
                 T8."automatic_geocoding_update",
                 T8."siret",
                 T8."naf",
                 T8."kind",
                 T8."brand",
                 T8."phone",
                 T8."email",
                 T8."auth_email",
                 T8."website",
                 T8."description",
                 T8."provided_support",
                 T8."source",
                 T8."created_by_id",
                 T8."block_job_applications",
                 T8."job_applications_blocked_at",
                 T8."spontaneous_applications_open_since",
                 T8."convention_id",
                 T8."job_app_score",
                 T8."is_searchable",
                 T8."rdv_solidarites_id",
                 T8."fields_history",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "job_applications_jobapplication"
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON ("users_user"."id" = "users_jobseekerprofile"."user_id")
          LEFT OUTER JOIN "users_user" T7 ON ("job_applications_jobapplication"."sender_id" = T7."id")
          LEFT OUTER JOIN "companies_company" T8 ON ("job_applications_jobapplication"."sender_company_id" = T8."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          LEFT OUTER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          WHERE ("job_applications_jobapplication"."to_company_id" = %s
                 AND "job_applications_jobapplication"."archived_at" IS NULL)
          GROUP BY "job_applications_jobapplication"."id",
                   48,
                   53,
                   54,
                   "users_user"."id",
                   "users_jobseekerprofile"."user_id",
                   T7."id",
                   T8."id",
                   "prescribers_prescriberorganization"."id",
                   "companies_company"."id",
                   "companies_siaeconvention"."id",
                   "approvals_approval"."id"
          ORDER BY "job_applications_jobapplication"."created_at" DESC,
                   "job_applications_jobapplication"."id" DESC
          LIMIT 3
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."source_tags",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text"
          FROM "jobs_appellation"
          WHERE ("jobs_appellation"."code") IN ((%s), (%s))
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."normalized_name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE ("cities_city"."id") IN ((%s))
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history"
          FROM "companies_company"
          WHERE ("companies_company"."id") IN ((%s))
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id",
                 "eligibility_eligibilitydiagnosis"."id",
                 "eligibility_eligibilitydiagnosis"."author_id",
                 "eligibility_eligibilitydiagnosis"."author_kind",
                 "eligibility_eligibilitydiagnosis"."author_prescriber_organization_id",
                 "eligibility_eligibilitydiagnosis"."created_at",
                 "eligibility_eligibilitydiagnosis"."updated_at",
                 "eligibility_eligibilitydiagnosis"."expires_at",
                 "eligibility_eligibilitydiagnosis"."job_seeker_id",
                 "eligibility_eligibilitydiagnosis"."author_siae_id"
          FROM "approvals_approval"
          LEFT OUTER JOIN "eligibility_eligibilitydiagnosis" ON ("approvals_approval"."eligibility_diagnosis_id" = "eligibility_eligibilitydiagnosis"."id")
          WHERE "approvals_approval"."user_id" IN (%s,
                                                   %s,
                                                   %s)
          ORDER BY "approvals_approval"."start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          '_add_administrative_criteria[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "eligibility_selectedadministrativecriteria"."id",
                 "eligibility_selectedadministrativecriteria"."certified",
                 "eligibility_selectedadministrativecriteria"."certified_at",
                 "eligibility_selectedadministrativecriteria"."certification_period",
                 "eligibility_selectedadministrativecriteria"."data_returned_by_api",
                 "eligibility_selectedadministrativecriteria"."created_at",
                 "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id",
                 "eligibility_selectedadministrativecriteria"."administrative_criteria_id",
                 "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_selectedadministrativecriteria"
          INNER JOIN "eligibility_administrativecriteria" ON ("eligibility_selectedadministrativecriteria"."administrative_criteria_id" = "eligibility_administrativecriteria"."id")
          WHERE "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id" IN (%s,
                                                                                            %s)
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."name" ASC
        ''',
      }),
      dict({
        'origin': list([
          'Company.has_job_descriptions_not_updated_recently[companies/models.py]',
          'IfNode[layout/base.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "companies_jobdescription"
          WHERE ("companies_jobdescription"."company_id" = %s
                 AND "companies_jobdescription"."is_active"
                 AND "companies_jobdescription"."last_employer_update_at" < %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'Company.has_admin[common_apps/organizations/models.py]',
          'Company.convention_can_be_accessed_by[companies/models.py]',
          'nav[utils/templatetags/nav.py]',
          'InclusionNode[layout/_header_authenticated.html]',
          'IncludeNode[layout/base.html]',
          'IfNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "users_user"
          INNER JOIN "companies_companymembership" ON ("users_user"."id" = "companies_companymembership"."user_id")
          WHERE ("companies_companymembership"."id" IN
                   (SELECT U0."id"
                    FROM "companies_companymembership" U0
                    INNER JOIN "users_user" U2 ON (U0."user_id" = U2."id")
                    WHERE (U0."company_id" = %s
                           AND U2."is_active"
                           AND U0."is_active"
                           AND U0."is_admin"
                           AND U2."is_active"))
                 AND "users_user"."id" = %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Session.save[<site-packages>/django/db/models/base.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          UPDATE "django_session"
          SET "session_data" = %s,
              "expire_date" = %s
          WHERE "django_session"."session_key" = %s
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: TestProcessListSiae.test_list_for_siae[SQL queries in table mode]
  dict({
    'num_queries': 25,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_companymembership"."id",
                 "companies_companymembership"."user_id",
                 "companies_companymembership"."joined_at",
                 "companies_companymembership"."is_admin",
                 "companies_companymembership"."is_active",
                 "companies_companymembership"."created_at",
                 "companies_companymembership"."updated_at",
                 "companies_companymembership"."company_id",
                 "companies_companymembership"."updated_by_id"
          FROM "companies_companymembership"
          WHERE ("companies_companymembership"."user_id" = %s
                 AND "companies_companymembership"."is_active")
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_siaeconvention" U0
             WHERE (U0."deactivated_at" >= %s
                    AND U0."id" = ("companies_company"."convention_id"))
             LIMIT 1) AS "has_convention_in_grace_period",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at"
          FROM "companies_company"
          INNER JOIN "companies_companymembership" ON ("companies_company"."id" = "companies_companymembership"."company_id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND "companies_companymembership"."user_id" = %s
                 AND "companies_company"."id" IN (%s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1)
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."deactivated_at" >= %s
                                AND U0."id" = ("companies_company"."convention_id"))
                         LIMIT 1)))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "job_applications_jobapplication"
          WHERE ("job_applications_jobapplication"."to_company_id" = %s
                 AND "job_applications_jobapplication"."state" IN (%s,
                                                                   %s,
                                                                   %s))
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."full_name_search_vector",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login",
                             "users_user"."upcoming_deletion_notified_at",
                             "users_user"."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "users_user" ON ("job_applications_jobapplication"."sender_id" = "users_user"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."job_seeker_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."full_name_search_vector",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login",
                             "users_user"."upcoming_deletion_notified_at",
                             "users_user"."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."job_seeker_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_administrativecriteria[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_administrativecriteria"
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at"
          FROM "job_applications_jobapplication"
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."source_tags",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text"
          FROM "jobs_appellation"
          WHERE ("jobs_appellation"."code") IN ((%s), (%s))
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.get_sender_prescriber_organization_choices[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_prescriber_organization_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "prescribers_prescriberorganization"."id",
                             "prescribers_prescriberorganization"."address_line_1",
                             "prescribers_prescriberorganization"."address_line_2",
                             "prescribers_prescriberorganization"."post_code",
                             "prescribers_prescriberorganization"."city",
                             "prescribers_prescriberorganization"."department",
                             "prescribers_prescriberorganization"."coords",
                             "prescribers_prescriberorganization"."geocoding_score",
                             "prescribers_prescriberorganization"."geocoding_updated_at",
                             "prescribers_prescriberorganization"."ban_api_resolved_address",
                             "prescribers_prescriberorganization"."insee_city_id",
                             "prescribers_prescriberorganization"."name",
                             "prescribers_prescriberorganization"."created_at",
                             "prescribers_prescriberorganization"."updated_at",
                             "prescribers_prescriberorganization"."uid",
                             "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                             "prescribers_prescriberorganization"."automatic_geocoding_update",
                             "prescribers_prescriberorganization"."siret",
                             "prescribers_prescriberorganization"."kind",
                             "prescribers_prescriberorganization"."is_brsa",
                             "prescribers_prescriberorganization"."phone",
                             "prescribers_prescriberorganization"."email",
                             "prescribers_prescriberorganization"."website",
                             "prescribers_prescriberorganization"."description",
                             "prescribers_prescriberorganization"."code_safir_pole_emploi",
                             "prescribers_prescriberorganization"."created_by_id",
                             "prescribers_prescriberorganization"."authorization_status",
                             "prescribers_prescriberorganization"."authorization_updated_at",
                             "prescribers_prescriberorganization"."authorization_updated_by_id",
                             "prescribers_prescriberorganization"."is_gps_authorized"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_prescriber_organization_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.get_sender_companies_choices[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_company_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             T3."id",
                             T3."address_line_1",
                             T3."address_line_2",
                             T3."post_code",
                             T3."city",
                             T3."department",
                             T3."coords",
                             T3."geocoding_score",
                             T3."geocoding_updated_at",
                             T3."ban_api_resolved_address",
                             T3."insee_city_id",
                             T3."name",
                             T3."created_at",
                             T3."updated_at",
                             T3."uid",
                             T3."active_members_email_reminder_last_sent_at",
                             T3."automatic_geocoding_update",
                             T3."siret",
                             T3."naf",
                             T3."kind",
                             T3."brand",
                             T3."phone",
                             T3."email",
                             T3."auth_email",
                             T3."website",
                             T3."description",
                             T3."provided_support",
                             T3."source",
                             T3."created_by_id",
                             T3."block_job_applications",
                             T3."job_applications_blocked_at",
                             T3."spontaneous_applications_open_since",
                             T3."convention_id",
                             T3."job_app_score",
                             T3."is_searchable",
                             T3."rdv_solidarites_id",
                             T3."fields_history"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "companies_company" T3 ON ("job_applications_jobapplication"."sender_company_id" = T3."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_company_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*)
          FROM
            (SELECT GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
               (SELECT U0."id" AS "id"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE (U0."expires_at" > %s
                       AND (U0."author_kind" = %s
                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                ORDER BY U0."created_at" DESC
                LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                    COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                               (SELECT U0."id" AS "id"
                                FROM "eligibility_eligibilitydiagnosis" U0
                                WHERE (U0."expires_at" > %s
                                       AND (U0."author_kind" = %s
                                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                ORDER BY U0."created_at" DESC
                                LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
          
               (SELECT U0."author_kind" AS "author_kind"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE U0."id" = (COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                                            (SELECT U0."id" AS "id"
                                             FROM "eligibility_eligibilitydiagnosis" U0
                                             WHERE (U0."expires_at" > %s
                                                    AND (U0."author_kind" = %s
                                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                             ORDER BY U0."created_at" DESC
                                             LIMIT 1)))
                ORDER BY U0."created_at" DESC) AS "jobseeker_eligibility_diagnosis_author_kind",
                    (COALESCE(LOWER("users_user"."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER("users_user"."last_name"), %s)), %s)) AS "job_seeker_full_name"
             FROM "job_applications_jobapplication"
             LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
             INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
             WHERE ("job_applications_jobapplication"."to_company_id" = %s
                    AND "job_applications_jobapplication"."archived_at" IS NULL)
             GROUP BY "job_applications_jobapplication"."id",
                      3,
                      5) subquery
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
            (SELECT U0."id" AS "id"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE (U0."expires_at" > %s
                    AND (U0."author_kind" = %s
                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
             ORDER BY U0."created_at" DESC
             LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                 COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                            (SELECT U0."id" AS "id"
                             FROM "eligibility_eligibilitydiagnosis" U0
                             WHERE (U0."expires_at" > %s
                                    AND (U0."author_kind" = %s
                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                             ORDER BY U0."created_at" DESC
                             LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
          
            (SELECT U0."author_kind" AS "author_kind"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE U0."id" = (COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                                         (SELECT U0."id" AS "id"
                                          FROM "eligibility_eligibilitydiagnosis" U0
                                          WHERE (U0."expires_at" > %s
                                                 AND (U0."author_kind" = %s
                                                      OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                                 AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                          ORDER BY U0."created_at" DESC
                                          LIMIT 1)))
             ORDER BY U0."created_at" DESC) AS "jobseeker_eligibility_diagnosis_author_kind",
                 (COALESCE(LOWER("users_user"."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER("users_user"."last_name"), %s)), %s)) AS "job_seeker_full_name",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."ft_gps_id",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."are_allocation_since",
                 "users_jobseekerprofile"."activity_bonus_since",
                 "users_jobseekerprofile"."cape_freelance",
                 "users_jobseekerprofile"."cesa_freelance",
                 "users_jobseekerprofile"."actor_met_for_business_creation",
                 "users_jobseekerprofile"."mean_monthly_income_before_process",
                 "users_jobseekerprofile"."eiti_contributions",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "users_jobseekerprofile"."created_by_prescriber_organization_id",
                 "users_jobseekerprofile"."is_stalled",
                 "users_jobseekerprofile"."is_not_stalled_anymore",
                 "users_jobseekerprofile"."fields_history",
                 T7."id",
                 T7."password",
                 T7."last_login",
                 T7."is_superuser",
                 T7."username",
                 T7."first_name",
                 T7."last_name",
                 T7."is_staff",
                 T7."is_active",
                 T7."date_joined",
                 T7."address_line_1",
                 T7."address_line_2",
                 T7."post_code",
                 T7."city",
                 T7."department",
                 T7."coords",
                 T7."geocoding_score",
                 T7."geocoding_updated_at",
                 T7."ban_api_resolved_address",
                 T7."insee_city_id",
                 T7."title",
                 T7."full_name_search_vector",
                 T7."email",
                 T7."phone",
                 T7."kind",
                 T7."identity_provider",
                 T7."has_completed_welcoming_tour",
                 T7."created_by_id",
                 T7."external_data_source_history",
                 T7."last_checked_at",
                 T7."public_id",
                 T7."address_filled_at",
                 T7."first_login",
                 T7."upcoming_deletion_notified_at",
                 T7."allow_next_sso_sub_update",
                 T8."id",
                 T8."address_line_1",
                 T8."address_line_2",
                 T8."post_code",
                 T8."city",
                 T8."department",
                 T8."coords",
                 T8."geocoding_score",
                 T8."geocoding_updated_at",
                 T8."ban_api_resolved_address",
                 T8."insee_city_id",
                 T8."name",
                 T8."created_at",
                 T8."updated_at",
                 T8."uid",
                 T8."active_members_email_reminder_last_sent_at",
                 T8."automatic_geocoding_update",
                 T8."siret",
                 T8."naf",
                 T8."kind",
                 T8."brand",
                 T8."phone",
                 T8."email",
                 T8."auth_email",
                 T8."website",
                 T8."description",
                 T8."provided_support",
                 T8."source",
                 T8."created_by_id",
                 T8."block_job_applications",
                 T8."job_applications_blocked_at",
                 T8."spontaneous_applications_open_since",
                 T8."convention_id",
                 T8."job_app_score",
                 T8."is_searchable",
                 T8."rdv_solidarites_id",
                 T8."fields_history",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "job_applications_jobapplication"
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON ("users_user"."id" = "users_jobseekerprofile"."user_id")
          LEFT OUTER JOIN "users_user" T7 ON ("job_applications_jobapplication"."sender_id" = T7."id")
          LEFT OUTER JOIN "companies_company" T8 ON ("job_applications_jobapplication"."sender_company_id" = T8."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          LEFT OUTER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          WHERE ("job_applications_jobapplication"."to_company_id" = %s
                 AND "job_applications_jobapplication"."archived_at" IS NULL)
          GROUP BY "job_applications_jobapplication"."id",
                   48,
                   50,
                   "users_user"."id",
                   "users_jobseekerprofile"."user_id",
                   T7."id",
                   T8."id",
                   "prescribers_prescriberorganization"."id",
                   "companies_company"."id",
                   "companies_siaeconvention"."id",
                   "approvals_approval"."id"
          ORDER BY "job_applications_jobapplication"."created_at" DESC,
                   "job_applications_jobapplication"."id" DESC
          LIMIT 3
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."source_tags",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text"
          FROM "jobs_appellation"
          WHERE ("jobs_appellation"."code") IN ((%s), (%s))
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."normalized_name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE ("cities_city"."id") IN ((%s))
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history"
          FROM "companies_company"
          WHERE ("companies_company"."id") IN ((%s))
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id",
                 "eligibility_eligibilitydiagnosis"."id",
                 "eligibility_eligibilitydiagnosis"."author_id",
                 "eligibility_eligibilitydiagnosis"."author_kind",
                 "eligibility_eligibilitydiagnosis"."author_prescriber_organization_id",
                 "eligibility_eligibilitydiagnosis"."created_at",
                 "eligibility_eligibilitydiagnosis"."updated_at",
                 "eligibility_eligibilitydiagnosis"."expires_at",
                 "eligibility_eligibilitydiagnosis"."job_seeker_id",
                 "eligibility_eligibilitydiagnosis"."author_siae_id"
          FROM "approvals_approval"
          LEFT OUTER JOIN "eligibility_eligibilitydiagnosis" ON ("approvals_approval"."eligibility_diagnosis_id" = "eligibility_eligibilitydiagnosis"."id")
          WHERE "approvals_approval"."user_id" IN (%s,
                                                   %s,
                                                   %s)
          ORDER BY "approvals_approval"."start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          '_add_administrative_criteria[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "eligibility_selectedadministrativecriteria"."id",
                 "eligibility_selectedadministrativecriteria"."certified",
                 "eligibility_selectedadministrativecriteria"."certified_at",
                 "eligibility_selectedadministrativecriteria"."certification_period",
                 "eligibility_selectedadministrativecriteria"."data_returned_by_api",
                 "eligibility_selectedadministrativecriteria"."created_at",
                 "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id",
                 "eligibility_selectedadministrativecriteria"."administrative_criteria_id",
                 "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_selectedadministrativecriteria"
          INNER JOIN "eligibility_administrativecriteria" ON ("eligibility_selectedadministrativecriteria"."administrative_criteria_id" = "eligibility_administrativecriteria"."id")
          WHERE "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id" IN (%s,
                                                                                            %s)
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."name" ASC
        ''',
      }),
      dict({
        'origin': list([
          'Company.has_job_descriptions_not_updated_recently[companies/models.py]',
          'IfNode[layout/base.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "companies_jobdescription"
          WHERE ("companies_jobdescription"."company_id" = %s
                 AND "companies_jobdescription"."is_active"
                 AND "companies_jobdescription"."last_employer_update_at" < %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'Company.has_admin[common_apps/organizations/models.py]',
          'Company.convention_can_be_accessed_by[companies/models.py]',
          'nav[utils/templatetags/nav.py]',
          'InclusionNode[layout/_header_authenticated.html]',
          'IncludeNode[layout/base.html]',
          'IfNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "users_user"
          INNER JOIN "companies_companymembership" ON ("users_user"."id" = "companies_companymembership"."user_id")
          WHERE ("companies_companymembership"."id" IN
                   (SELECT U0."id"
                    FROM "companies_companymembership" U0
                    INNER JOIN "users_user" U2 ON (U0."user_id" = U2."id")
                    WHERE (U0."company_id" = %s
                           AND U2."is_active"
                           AND U0."is_active"
                           AND U0."is_admin"
                           AND U2."is_active"))
                 AND "users_user"."id" = %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: TestProcessListSiae.test_list_for_siae_filters_query[SQL queries with all filters but job_seeker]
  dict({
    'num_queries': 25,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_companymembership"."id",
                 "companies_companymembership"."user_id",
                 "companies_companymembership"."joined_at",
                 "companies_companymembership"."is_admin",
                 "companies_companymembership"."is_active",
                 "companies_companymembership"."created_at",
                 "companies_companymembership"."updated_at",
                 "companies_companymembership"."company_id",
                 "companies_companymembership"."updated_by_id"
          FROM "companies_companymembership"
          WHERE ("companies_companymembership"."user_id" = %s
                 AND "companies_companymembership"."is_active")
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_siaeconvention" U0
             WHERE (U0."deactivated_at" >= %s
                    AND U0."id" = ("companies_company"."convention_id"))
             LIMIT 1) AS "has_convention_in_grace_period",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at"
          FROM "companies_company"
          INNER JOIN "companies_companymembership" ON ("companies_company"."id" = "companies_companymembership"."company_id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND "companies_companymembership"."user_id" = %s
                 AND "companies_company"."id" IN (%s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1)
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."deactivated_at" >= %s
                                AND U0."id" = ("companies_company"."convention_id"))
                         LIMIT 1)))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "job_applications_jobapplication"
          WHERE ("job_applications_jobapplication"."to_company_id" = %s
                 AND "job_applications_jobapplication"."state" IN (%s,
                                                                   %s,
                                                                   %s))
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."full_name_search_vector",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login",
                             "users_user"."upcoming_deletion_notified_at",
                             "users_user"."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "users_user" ON ("job_applications_jobapplication"."sender_id" = "users_user"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."job_seeker_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."full_name_search_vector",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login",
                             "users_user"."upcoming_deletion_notified_at",
                             "users_user"."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."job_seeker_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_administrativecriteria[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_administrativecriteria"
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at"
          FROM "job_applications_jobapplication"
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."source_tags",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.get_sender_prescriber_organization_choices[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_prescriber_organization_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "prescribers_prescriberorganization"."id",
                             "prescribers_prescriberorganization"."address_line_1",
                             "prescribers_prescriberorganization"."address_line_2",
                             "prescribers_prescriberorganization"."post_code",
                             "prescribers_prescriberorganization"."city",
                             "prescribers_prescriberorganization"."department",
                             "prescribers_prescriberorganization"."coords",
                             "prescribers_prescriberorganization"."geocoding_score",
                             "prescribers_prescriberorganization"."geocoding_updated_at",
                             "prescribers_prescriberorganization"."ban_api_resolved_address",
                             "prescribers_prescriberorganization"."insee_city_id",
                             "prescribers_prescriberorganization"."name",
                             "prescribers_prescriberorganization"."created_at",
                             "prescribers_prescriberorganization"."updated_at",
                             "prescribers_prescriberorganization"."uid",
                             "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                             "prescribers_prescriberorganization"."automatic_geocoding_update",
                             "prescribers_prescriberorganization"."siret",
                             "prescribers_prescriberorganization"."kind",
                             "prescribers_prescriberorganization"."is_brsa",
                             "prescribers_prescriberorganization"."phone",
                             "prescribers_prescriberorganization"."email",
                             "prescribers_prescriberorganization"."website",
                             "prescribers_prescriberorganization"."description",
                             "prescribers_prescriberorganization"."code_safir_pole_emploi",
                             "prescribers_prescriberorganization"."created_by_id",
                             "prescribers_prescriberorganization"."authorization_status",
                             "prescribers_prescriberorganization"."authorization_updated_at",
                             "prescribers_prescriberorganization"."authorization_updated_by_id",
                             "prescribers_prescriberorganization"."is_gps_authorized"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_prescriber_organization_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.get_sender_companies_choices[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_company_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             T3."id",
                             T3."address_line_1",
                             T3."address_line_2",
                             T3."post_code",
                             T3."city",
                             T3."department",
                             T3."coords",
                             T3."geocoding_score",
                             T3."geocoding_updated_at",
                             T3."ban_api_resolved_address",
                             T3."insee_city_id",
                             T3."name",
                             T3."created_at",
                             T3."updated_at",
                             T3."uid",
                             T3."active_members_email_reminder_last_sent_at",
                             T3."automatic_geocoding_update",
                             T3."siret",
                             T3."naf",
                             T3."kind",
                             T3."brand",
                             T3."phone",
                             T3."email",
                             T3."auth_email",
                             T3."website",
                             T3."description",
                             T3."provided_support",
                             T3."source",
                             T3."created_by_id",
                             T3."block_job_applications",
                             T3."job_applications_blocked_at",
                             T3."spontaneous_applications_open_since",
                             T3."convention_id",
                             T3."job_app_score",
                             T3."is_searchable",
                             T3."rdv_solidarites_id",
                             T3."fields_history"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "companies_company" T3 ON ("job_applications_jobapplication"."sender_company_id" = T3."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_company_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*)
          FROM
            (SELECT GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
               (SELECT U0."id" AS "id"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE (U0."expires_at" > %s
                       AND (U0."author_kind" = %s
                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                ORDER BY U0."created_at" DESC
                LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                    COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                               (SELECT U0."id" AS "id"
                                FROM "eligibility_eligibilitydiagnosis" U0
                                WHERE (U0."expires_at" > %s
                                       AND (U0."author_kind" = %s
                                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                ORDER BY U0."created_at" DESC
                                LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
          
               (SELECT U0."author_kind" AS "author_kind"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE U0."id" = (COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                                            (SELECT U0."id" AS "id"
                                             FROM "eligibility_eligibilitydiagnosis" U0
                                             WHERE (U0."expires_at" > %s
                                                    AND (U0."author_kind" = %s
                                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                             ORDER BY U0."created_at" DESC
                                             LIMIT 1)))
                ORDER BY U0."created_at" DESC) AS "jobseeker_eligibility_diagnosis_author_kind",
                    EXISTS
               (SELECT %s AS "a"
                FROM "eligibility_selectedadministrativecriteria" U0
                WHERE (U0."administrative_criteria_id" = %s
                       AND U0."eligibility_diagnosis_id" = (COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                                                                       (SELECT U0."id" AS "id"
                                                                        FROM "eligibility_eligibilitydiagnosis" U0
                                                                        WHERE (U0."expires_at" > %s
                                                                               AND (U0."author_kind" = %s
                                                                                    OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                                                               AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                                                        ORDER BY U0."created_at" DESC
                                                                        LIMIT 1))))
                LIMIT 1) AS "eligibility_diagnosis_criterion_3",
                    EXISTS
               (SELECT %s AS "a"
                FROM "approvals_suspension" U0
                WHERE (U0."approval_id" = ("job_applications_jobapplication"."approval_id")
                       AND U0."end_at" >= %s
                       AND U0."start_at" <= %s)
                LIMIT 1) AS "has_suspended_approval",
                    (COALESCE(LOWER("users_user"."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER("users_user"."last_name"), %s)), %s)) AS "job_seeker_full_name"
             FROM "job_applications_jobapplication"
             LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
             INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
             INNER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
             WHERE ("job_applications_jobapplication"."to_company_id" = %s
                    AND "job_applications_jobapplication"."state" IN (%s)
                    AND "approvals_approval"."end_at" >= %s
                    AND NOT EXISTS
                      (SELECT %s AS "a"
                       FROM "approvals_suspension" U0
                       WHERE (U0."approval_id" = ("job_applications_jobapplication"."approval_id")
                              AND U0."end_at" >= %s
                              AND U0."start_at" <= %s)
                       LIMIT 1)
                    AND "job_applications_jobapplication"."created_at" >= %s
                    AND "job_applications_jobapplication"."created_at" <= %s
                    AND "users_user"."department" IN (%s)
                    AND EXISTS
                      (SELECT %s AS "a"
                       FROM "eligibility_selectedadministrativecriteria" U0
                       WHERE (U0."administrative_criteria_id" = %s
                              AND U0."eligibility_diagnosis_id" = (COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                                                                              (SELECT U0."id" AS "id"
                                                                               FROM "eligibility_eligibilitydiagnosis" U0
                                                                               WHERE (U0."expires_at" > %s
                                                                                      AND (U0."author_kind" = %s
                                                                                           OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                                                                      AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                                                               ORDER BY U0."created_at" DESC
                                                                               LIMIT 1))))
                       LIMIT 1)
                    AND EXISTS
                      (SELECT %s AS "a"
                       FROM "users_user" V0
                       WHERE ((EXISTS
                                 (SELECT %s AS "a"
                                  FROM "approvals_approval" U0
                                  WHERE (U0."user_id" = (V0."id")
                                         AND U0."end_at" >= %s)
                                  LIMIT 1)
                               OR EXISTS
                                 (SELECT %s AS "a"
                                  FROM "eligibility_eligibilitydiagnosis" U0
                                  WHERE ((U0."author_kind" = %s
                                          OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                         AND U0."job_seeker_id" = (V0."id")
                                         AND U0."expires_at" > %s)
                                  LIMIT 1))
                              AND V0."id" = ("job_applications_jobapplication"."job_seeker_id"))
                       LIMIT 1)
                    AND "job_applications_jobapplication"."sender_id" IN (%s)
                    AND "job_applications_jobapplication"."archived_at" IS NULL
                    AND "job_applications_jobapplication"."sender_prescriber_organization_id" IN (%s))
             GROUP BY "job_applications_jobapplication"."id",
                      3,
                      7) subquery
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
            (SELECT U0."id" AS "id"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE (U0."expires_at" > %s
                    AND (U0."author_kind" = %s
                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
             ORDER BY U0."created_at" DESC
             LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                 COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                            (SELECT U0."id" AS "id"
                             FROM "eligibility_eligibilitydiagnosis" U0
                             WHERE (U0."expires_at" > %s
                                    AND (U0."author_kind" = %s
                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                             ORDER BY U0."created_at" DESC
                             LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
          
            (SELECT U0."author_kind" AS "author_kind"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE U0."id" = (COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                                         (SELECT U0."id" AS "id"
                                          FROM "eligibility_eligibilitydiagnosis" U0
                                          WHERE (U0."expires_at" > %s
                                                 AND (U0."author_kind" = %s
                                                      OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                                 AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                          ORDER BY U0."created_at" DESC
                                          LIMIT 1)))
             ORDER BY U0."created_at" DESC) AS "jobseeker_eligibility_diagnosis_author_kind",
                 EXISTS
            (SELECT %s AS "a"
             FROM "eligibility_selectedadministrativecriteria" U0
             WHERE (U0."administrative_criteria_id" = %s
                    AND U0."eligibility_diagnosis_id" = (COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                                                                    (SELECT U0."id" AS "id"
                                                                     FROM "eligibility_eligibilitydiagnosis" U0
                                                                     WHERE (U0."expires_at" > %s
                                                                            AND (U0."author_kind" = %s
                                                                                 OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                                                            AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                                                     ORDER BY U0."created_at" DESC
                                                                     LIMIT 1))))
             LIMIT 1) AS "eligibility_diagnosis_criterion_3",
                 EXISTS
            (SELECT %s AS "a"
             FROM "approvals_suspension" U0
             WHERE (U0."approval_id" = ("job_applications_jobapplication"."approval_id")
                    AND U0."end_at" >= %s
                    AND U0."start_at" <= %s)
             LIMIT 1) AS "has_suspended_approval",
                 (COALESCE(LOWER("users_user"."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER("users_user"."last_name"), %s)), %s)) AS "job_seeker_full_name",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."ft_gps_id",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."are_allocation_since",
                 "users_jobseekerprofile"."activity_bonus_since",
                 "users_jobseekerprofile"."cape_freelance",
                 "users_jobseekerprofile"."cesa_freelance",
                 "users_jobseekerprofile"."actor_met_for_business_creation",
                 "users_jobseekerprofile"."mean_monthly_income_before_process",
                 "users_jobseekerprofile"."eiti_contributions",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "users_jobseekerprofile"."created_by_prescriber_organization_id",
                 "users_jobseekerprofile"."is_stalled",
                 "users_jobseekerprofile"."is_not_stalled_anymore",
                 "users_jobseekerprofile"."fields_history",
                 T7."id",
                 T7."password",
                 T7."last_login",
                 T7."is_superuser",
                 T7."username",
                 T7."first_name",
                 T7."last_name",
                 T7."is_staff",
                 T7."is_active",
                 T7."date_joined",
                 T7."address_line_1",
                 T7."address_line_2",
                 T7."post_code",
                 T7."city",
                 T7."department",
                 T7."coords",
                 T7."geocoding_score",
                 T7."geocoding_updated_at",
                 T7."ban_api_resolved_address",
                 T7."insee_city_id",
                 T7."title",
                 T7."full_name_search_vector",
                 T7."email",
                 T7."phone",
                 T7."kind",
                 T7."identity_provider",
                 T7."has_completed_welcoming_tour",
                 T7."created_by_id",
                 T7."external_data_source_history",
                 T7."last_checked_at",
                 T7."public_id",
                 T7."address_filled_at",
                 T7."first_login",
                 T7."upcoming_deletion_notified_at",
                 T7."allow_next_sso_sub_update",
                 T10."id",
                 T10."address_line_1",
                 T10."address_line_2",
                 T10."post_code",
                 T10."city",
                 T10."department",
                 T10."coords",
                 T10."geocoding_score",
                 T10."geocoding_updated_at",
                 T10."ban_api_resolved_address",
                 T10."insee_city_id",
                 T10."name",
                 T10."created_at",
                 T10."updated_at",
                 T10."uid",
                 T10."active_members_email_reminder_last_sent_at",
                 T10."automatic_geocoding_update",
                 T10."siret",
                 T10."naf",
                 T10."kind",
                 T10."brand",
                 T10."phone",
                 T10."email",
                 T10."auth_email",
                 T10."website",
                 T10."description",
                 T10."provided_support",
                 T10."source",
                 T10."created_by_id",
                 T10."block_job_applications",
                 T10."job_applications_blocked_at",
                 T10."spontaneous_applications_open_since",
                 T10."convention_id",
                 T10."job_app_score",
                 T10."is_searchable",
                 T10."rdv_solidarites_id",
                 T10."fields_history",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "job_applications_jobapplication"
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          INNER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          INNER JOIN "users_user" T7 ON ("job_applications_jobapplication"."sender_id" = T7."id")
          INNER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON ("users_user"."id" = "users_jobseekerprofile"."user_id")
          LEFT OUTER JOIN "companies_company" T10 ON ("job_applications_jobapplication"."sender_company_id" = T10."id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          WHERE ("job_applications_jobapplication"."to_company_id" = %s
                 AND "job_applications_jobapplication"."state" IN (%s)
                 AND "approvals_approval"."end_at" >= %s
                 AND NOT EXISTS
                   (SELECT %s AS "a"
                    FROM "approvals_suspension" U0
                    WHERE (U0."approval_id" = ("job_applications_jobapplication"."approval_id")
                           AND U0."end_at" >= %s
                           AND U0."start_at" <= %s)
                    LIMIT 1)
                 AND "job_applications_jobapplication"."created_at" >= %s
                 AND "job_applications_jobapplication"."created_at" <= %s
                 AND "users_user"."department" IN (%s)
                 AND EXISTS
                   (SELECT %s AS "a"
                    FROM "eligibility_selectedadministrativecriteria" U0
                    WHERE (U0."administrative_criteria_id" = %s
                           AND U0."eligibility_diagnosis_id" = (COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                                                                           (SELECT U0."id" AS "id"
                                                                            FROM "eligibility_eligibilitydiagnosis" U0
                                                                            WHERE (U0."expires_at" > %s
                                                                                   AND (U0."author_kind" = %s
                                                                                        OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                                                                   AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                                                            ORDER BY U0."created_at" DESC
                                                                            LIMIT 1))))
                    LIMIT 1)
                 AND EXISTS
                   (SELECT %s AS "a"
                    FROM "users_user" V0
                    WHERE ((EXISTS
                              (SELECT %s AS "a"
                               FROM "approvals_approval" U0
                               WHERE (U0."user_id" = (V0."id")
                                      AND U0."end_at" >= %s)
                               LIMIT 1)
                            OR EXISTS
                              (SELECT %s AS "a"
                               FROM "eligibility_eligibilitydiagnosis" U0
                               WHERE ((U0."author_kind" = %s
                                       OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                      AND U0."job_seeker_id" = (V0."id")
                                      AND U0."expires_at" > %s)
                               LIMIT 1))
                           AND V0."id" = ("job_applications_jobapplication"."job_seeker_id"))
                    LIMIT 1)
                 AND "job_applications_jobapplication"."sender_id" IN (%s)
                 AND "job_applications_jobapplication"."archived_at" IS NULL
                 AND "job_applications_jobapplication"."sender_prescriber_organization_id" IN (%s))
          GROUP BY "job_applications_jobapplication"."id",
                   48,
                   52,
                   "users_user"."id",
                   "users_jobseekerprofile"."user_id",
                   T7."id",
                   T10."id",
                   "prescribers_prescriberorganization"."id",
                   "companies_company"."id",
                   "companies_siaeconvention"."id",
                   "approvals_approval"."id"
          ORDER BY "job_applications_jobapplication"."created_at" DESC,
                   "job_applications_jobapplication"."id" DESC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."source_tags",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id",
                 "eligibility_eligibilitydiagnosis"."id",
                 "eligibility_eligibilitydiagnosis"."author_id",
                 "eligibility_eligibilitydiagnosis"."author_kind",
                 "eligibility_eligibilitydiagnosis"."author_prescriber_organization_id",
                 "eligibility_eligibilitydiagnosis"."created_at",
                 "eligibility_eligibilitydiagnosis"."updated_at",
                 "eligibility_eligibilitydiagnosis"."expires_at",
                 "eligibility_eligibilitydiagnosis"."job_seeker_id",
                 "eligibility_eligibilitydiagnosis"."author_siae_id"
          FROM "approvals_approval"
          LEFT OUTER JOIN "eligibility_eligibilitydiagnosis" ON ("approvals_approval"."eligibility_diagnosis_id" = "eligibility_eligibilitydiagnosis"."id")
          WHERE "approvals_approval"."user_id" IN (%s)
          ORDER BY "approvals_approval"."start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          '_add_administrative_criteria[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "eligibility_selectedadministrativecriteria"."id",
                 "eligibility_selectedadministrativecriteria"."certified",
                 "eligibility_selectedadministrativecriteria"."certified_at",
                 "eligibility_selectedadministrativecriteria"."certification_period",
                 "eligibility_selectedadministrativecriteria"."data_returned_by_api",
                 "eligibility_selectedadministrativecriteria"."created_at",
                 "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id",
                 "eligibility_selectedadministrativecriteria"."administrative_criteria_id",
                 "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_selectedadministrativecriteria"
          INNER JOIN "eligibility_administrativecriteria" ON ("eligibility_selectedadministrativecriteria"."administrative_criteria_id" = "eligibility_administrativecriteria"."id")
          WHERE "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id" IN (%s)
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."name" ASC
        ''',
      }),
      dict({
        'origin': list([
          'Company.has_job_descriptions_not_updated_recently[companies/models.py]',
          'IfNode[layout/base.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "companies_jobdescription"
          WHERE ("companies_jobdescription"."company_id" = %s
                 AND "companies_jobdescription"."is_active"
                 AND "companies_jobdescription"."last_employer_update_at" < %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'Company.has_admin[common_apps/organizations/models.py]',
          'Company.convention_can_be_accessed_by[companies/models.py]',
          'nav[utils/templatetags/nav.py]',
          'InclusionNode[layout/_header_authenticated.html]',
          'IncludeNode[layout/base.html]',
          'IfNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "users_user"
          INNER JOIN "companies_companymembership" ON ("users_user"."id" = "companies_companymembership"."user_id")
          WHERE ("companies_companymembership"."id" IN
                   (SELECT U0."id"
                    FROM "companies_companymembership" U0
                    INNER JOIN "users_user" U2 ON (U0."user_id" = U2."id")
                    WHERE (U0."company_id" = %s
                           AND U2."is_active"
                           AND U0."is_active"
                           AND U0."is_admin"
                           AND U2."is_active"))
                 AND "users_user"."id" = %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'Approval.is_suspended[approvals/models.py]',
          'Approval.state[approvals/models.py]',
          'approval_state_badge[utils/templatetags/badges.py]',
          'SimpleNode[apply/includes/eligibility_badge.html]',
          'IfNode[apply/includes/eligibility_badge.html]',
          'IfNode[apply/includes/eligibility_badge.html]',
          'WithNode[apply/includes/eligibility_badge.html]',
          'IncludeNode[apply/includes/list_tr.html]',
          'IfNode[apply/includes/list_tr.html]',
          'IfNode[apply/includes/list_tr.html]',
          'IncludeNode[apply/includes/list_table.html]',
          'ForNode[apply/includes/list_table.html]',
          'IncludeNode[apply/includes/list_job_applications.html]',
          'IfNode[apply/includes/list_job_applications.html]',
          'IfNode[apply/includes/list_job_applications.html]',
          'IfNode[apply/includes/list_job_applications.html]',
          'IncludeNode[apply/list_for_siae.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "approvals_suspension"
          WHERE ("approvals_suspension"."approval_id" = %s
                 AND "approvals_suspension"."end_at" >= %s
                 AND "approvals_suspension"."start_at" <= %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Session.save[<site-packages>/django/db/models/base.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          UPDATE "django_session"
          SET "session_data" = %s,
              "expire_date" = %s
          WHERE "django_session"."session_key" = %s
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: TestProcessListSiae.test_list_for_siae_filters_query[SQL queries with only job_seeker filter]
  dict({
    'num_queries': 22,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_companymembership"."id",
                 "companies_companymembership"."user_id",
                 "companies_companymembership"."joined_at",
                 "companies_companymembership"."is_admin",
                 "companies_companymembership"."is_active",
                 "companies_companymembership"."created_at",
                 "companies_companymembership"."updated_at",
                 "companies_companymembership"."company_id",
                 "companies_companymembership"."updated_by_id"
          FROM "companies_companymembership"
          WHERE ("companies_companymembership"."user_id" = %s
                 AND "companies_companymembership"."is_active")
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_siaeconvention" U0
             WHERE (U0."deactivated_at" >= %s
                    AND U0."id" = ("companies_company"."convention_id"))
             LIMIT 1) AS "has_convention_in_grace_period",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at"
          FROM "companies_company"
          INNER JOIN "companies_companymembership" ON ("companies_company"."id" = "companies_companymembership"."company_id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND "companies_companymembership"."user_id" = %s
                 AND "companies_company"."id" IN (%s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1)
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."deactivated_at" >= %s
                                AND U0."id" = ("companies_company"."convention_id"))
                         LIMIT 1)))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "job_applications_jobapplication"
          WHERE ("job_applications_jobapplication"."to_company_id" = %s
                 AND "job_applications_jobapplication"."state" IN (%s,
                                                                   %s,
                                                                   %s))
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."full_name_search_vector",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login",
                             "users_user"."upcoming_deletion_notified_at",
                             "users_user"."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "users_user" ON ("job_applications_jobapplication"."sender_id" = "users_user"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."job_seeker_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."full_name_search_vector",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login",
                             "users_user"."upcoming_deletion_notified_at",
                             "users_user"."allow_next_sso_sub_update"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."job_seeker_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_administrativecriteria[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_administrativecriteria"
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at"
          FROM "job_applications_jobapplication"
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."source_tags",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.get_sender_prescriber_organization_choices[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_prescriber_organization_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "prescribers_prescriberorganization"."id",
                             "prescribers_prescriberorganization"."address_line_1",
                             "prescribers_prescriberorganization"."address_line_2",
                             "prescribers_prescriberorganization"."post_code",
                             "prescribers_prescriberorganization"."city",
                             "prescribers_prescriberorganization"."department",
                             "prescribers_prescriberorganization"."coords",
                             "prescribers_prescriberorganization"."geocoding_score",
                             "prescribers_prescriberorganization"."geocoding_updated_at",
                             "prescribers_prescriberorganization"."ban_api_resolved_address",
                             "prescribers_prescriberorganization"."insee_city_id",
                             "prescribers_prescriberorganization"."name",
                             "prescribers_prescriberorganization"."created_at",
                             "prescribers_prescriberorganization"."updated_at",
                             "prescribers_prescriberorganization"."uid",
                             "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                             "prescribers_prescriberorganization"."automatic_geocoding_update",
                             "prescribers_prescriberorganization"."siret",
                             "prescribers_prescriberorganization"."kind",
                             "prescribers_prescriberorganization"."is_brsa",
                             "prescribers_prescriberorganization"."phone",
                             "prescribers_prescriberorganization"."email",
                             "prescribers_prescriberorganization"."website",
                             "prescribers_prescriberorganization"."description",
                             "prescribers_prescriberorganization"."code_safir_pole_emploi",
                             "prescribers_prescriberorganization"."created_by_id",
                             "prescribers_prescriberorganization"."authorization_status",
                             "prescribers_prescriberorganization"."authorization_updated_at",
                             "prescribers_prescriberorganization"."authorization_updated_by_id",
                             "prescribers_prescriberorganization"."is_gps_authorized"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_prescriber_organization_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.get_sender_companies_choices[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_company_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_id",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             T3."id",
                             T3."address_line_1",
                             T3."address_line_2",
                             T3."post_code",
                             T3."city",
                             T3."department",
                             T3."coords",
                             T3."geocoding_score",
                             T3."geocoding_updated_at",
                             T3."ban_api_resolved_address",
                             T3."insee_city_id",
                             T3."name",
                             T3."created_at",
                             T3."updated_at",
                             T3."uid",
                             T3."active_members_email_reminder_last_sent_at",
                             T3."automatic_geocoding_update",
                             T3."siret",
                             T3."naf",
                             T3."kind",
                             T3."brand",
                             T3."phone",
                             T3."email",
                             T3."auth_email",
                             T3."website",
                             T3."description",
                             T3."provided_support",
                             T3."source",
                             T3."created_by_id",
                             T3."block_job_applications",
                             T3."job_applications_blocked_at",
                             T3."spontaneous_applications_open_since",
                             T3."convention_id",
                             T3."job_app_score",
                             T3."is_searchable",
                             T3."rdv_solidarites_id",
                             T3."fields_history"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "companies_company" T3 ON ("job_applications_jobapplication"."sender_company_id" = T3."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_company_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*)
          FROM
            (SELECT GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
               (SELECT U0."id" AS "id"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE (U0."expires_at" > %s
                       AND (U0."author_kind" = %s
                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                ORDER BY U0."created_at" DESC
                LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                    COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                               (SELECT U0."id" AS "id"
                                FROM "eligibility_eligibilitydiagnosis" U0
                                WHERE (U0."expires_at" > %s
                                       AND (U0."author_kind" = %s
                                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                ORDER BY U0."created_at" DESC
                                LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
          
               (SELECT U0."author_kind" AS "author_kind"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE U0."id" = (COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                                            (SELECT U0."id" AS "id"
                                             FROM "eligibility_eligibilitydiagnosis" U0
                                             WHERE (U0."expires_at" > %s
                                                    AND (U0."author_kind" = %s
                                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                             ORDER BY U0."created_at" DESC
                                             LIMIT 1)))
                ORDER BY U0."created_at" DESC) AS "jobseeker_eligibility_diagnosis_author_kind",
                    (COALESCE(LOWER("users_user"."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER("users_user"."last_name"), %s)), %s)) AS "job_seeker_full_name"
             FROM "job_applications_jobapplication"
             LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
             INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
             WHERE ("job_applications_jobapplication"."to_company_id" = %s
                    AND "job_applications_jobapplication"."job_seeker_id" = %s)
             GROUP BY "job_applications_jobapplication"."id",
                      3,
                      5) subquery
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_id",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
            (SELECT U0."id" AS "id"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE (U0."expires_at" > %s
                    AND (U0."author_kind" = %s
                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
             ORDER BY U0."created_at" DESC
             LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                 COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                            (SELECT U0."id" AS "id"
                             FROM "eligibility_eligibilitydiagnosis" U0
                             WHERE (U0."expires_at" > %s
                                    AND (U0."author_kind" = %s
                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                             ORDER BY U0."created_at" DESC
                             LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
          
            (SELECT U0."author_kind" AS "author_kind"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE U0."id" = (COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                                         (SELECT U0."id" AS "id"
                                          FROM "eligibility_eligibilitydiagnosis" U0
                                          WHERE (U0."expires_at" > %s
                                                 AND (U0."author_kind" = %s
                                                      OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                                 AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                          ORDER BY U0."created_at" DESC
                                          LIMIT 1)))
             ORDER BY U0."created_at" DESC) AS "jobseeker_eligibility_diagnosis_author_kind",
                 (COALESCE(LOWER("users_user"."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER("users_user"."last_name"), %s)), %s)) AS "job_seeker_full_name",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_user"."upcoming_deletion_notified_at",
                 "users_user"."allow_next_sso_sub_update",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."ft_gps_id",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."are_allocation_since",
                 "users_jobseekerprofile"."activity_bonus_since",
                 "users_jobseekerprofile"."cape_freelance",
                 "users_jobseekerprofile"."cesa_freelance",
                 "users_jobseekerprofile"."actor_met_for_business_creation",
                 "users_jobseekerprofile"."mean_monthly_income_before_process",
                 "users_jobseekerprofile"."eiti_contributions",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "users_jobseekerprofile"."created_by_prescriber_organization_id",
                 "users_jobseekerprofile"."is_stalled",
                 "users_jobseekerprofile"."is_not_stalled_anymore",
                 "users_jobseekerprofile"."fields_history",
                 T7."id",
                 T7."password",
                 T7."last_login",
                 T7."is_superuser",
                 T7."username",
                 T7."first_name",
                 T7."last_name",
                 T7."is_staff",
                 T7."is_active",
                 T7."date_joined",
                 T7."address_line_1",
                 T7."address_line_2",
                 T7."post_code",
                 T7."city",
                 T7."department",
                 T7."coords",
                 T7."geocoding_score",
                 T7."geocoding_updated_at",
                 T7."ban_api_resolved_address",
                 T7."insee_city_id",
                 T7."title",
                 T7."full_name_search_vector",
                 T7."email",
                 T7."phone",
                 T7."kind",
                 T7."identity_provider",
                 T7."has_completed_welcoming_tour",
                 T7."created_by_id",
                 T7."external_data_source_history",
                 T7."last_checked_at",
                 T7."public_id",
                 T7."address_filled_at",
                 T7."first_login",
                 T7."upcoming_deletion_notified_at",
                 T7."allow_next_sso_sub_update",
                 T8."id",
                 T8."address_line_1",
                 T8."address_line_2",
                 T8."post_code",
                 T8."city",
                 T8."department",
                 T8."coords",
                 T8."geocoding_score",
                 T8."geocoding_updated_at",
                 T8."ban_api_resolved_address",
                 T8."insee_city_id",
                 T8."name",
                 T8."created_at",
                 T8."updated_at",
                 T8."uid",
                 T8."active_members_email_reminder_last_sent_at",
                 T8."automatic_geocoding_update",
                 T8."siret",
                 T8."naf",
                 T8."kind",
                 T8."brand",
                 T8."phone",
                 T8."email",
                 T8."auth_email",
                 T8."website",
                 T8."description",
                 T8."provided_support",
                 T8."source",
                 T8."created_by_id",
                 T8."block_job_applications",
                 T8."job_applications_blocked_at",
                 T8."spontaneous_applications_open_since",
                 T8."convention_id",
                 T8."job_app_score",
                 T8."is_searchable",
                 T8."rdv_solidarites_id",
                 T8."fields_history",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "prescribers_prescriberorganization"."is_gps_authorized",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."spontaneous_applications_open_since",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "job_applications_jobapplication"
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON ("users_user"."id" = "users_jobseekerprofile"."user_id")
          LEFT OUTER JOIN "users_user" T7 ON ("job_applications_jobapplication"."sender_id" = T7."id")
          LEFT OUTER JOIN "companies_company" T8 ON ("job_applications_jobapplication"."sender_company_id" = T8."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          LEFT OUTER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          WHERE ("job_applications_jobapplication"."to_company_id" = %s
                 AND "job_applications_jobapplication"."job_seeker_id" = %s)
          GROUP BY "job_applications_jobapplication"."id",
                   48,
                   50,
                   "users_user"."id",
                   "users_jobseekerprofile"."user_id",
                   T7."id",
                   T8."id",
                   "prescribers_prescriberorganization"."id",
                   "companies_company"."id",
                   "companies_siaeconvention"."id",
                   "approvals_approval"."id"
          ORDER BY "job_applications_jobapplication"."created_at" DESC,
                   "job_applications_jobapplication"."id" DESC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."last_employer_update_at",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."source_tags",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id",
                 "eligibility_eligibilitydiagnosis"."id",
                 "eligibility_eligibilitydiagnosis"."author_id",
                 "eligibility_eligibilitydiagnosis"."author_kind",
                 "eligibility_eligibilitydiagnosis"."author_prescriber_organization_id",
                 "eligibility_eligibilitydiagnosis"."created_at",
                 "eligibility_eligibilitydiagnosis"."updated_at",
                 "eligibility_eligibilitydiagnosis"."expires_at",
                 "eligibility_eligibilitydiagnosis"."job_seeker_id",
                 "eligibility_eligibilitydiagnosis"."author_siae_id"
          FROM "approvals_approval"
          LEFT OUTER JOIN "eligibility_eligibilitydiagnosis" ON ("approvals_approval"."eligibility_diagnosis_id" = "eligibility_eligibilitydiagnosis"."id")
          WHERE "approvals_approval"."user_id" IN (%s)
          ORDER BY "approvals_approval"."start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          '_add_administrative_criteria[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "eligibility_selectedadministrativecriteria"."id",
                 "eligibility_selectedadministrativecriteria"."certified",
                 "eligibility_selectedadministrativecriteria"."certified_at",
                 "eligibility_selectedadministrativecriteria"."certification_period",
                 "eligibility_selectedadministrativecriteria"."data_returned_by_api",
                 "eligibility_selectedadministrativecriteria"."created_at",
                 "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id",
                 "eligibility_selectedadministrativecriteria"."administrative_criteria_id",
                 "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at"
          FROM "eligibility_selectedadministrativecriteria"
          INNER JOIN "eligibility_administrativecriteria" ON ("eligibility_selectedadministrativecriteria"."administrative_criteria_id" = "eligibility_administrativecriteria"."id")
          WHERE "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id" IN (%s)
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."name" ASC
        ''',
      }),
      dict({
        'origin': list([
          'Company.has_job_descriptions_not_updated_recently[companies/models.py]',
          'IfNode[layout/base.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "companies_jobdescription"
          WHERE ("companies_jobdescription"."company_id" = %s
                 AND "companies_jobdescription"."is_active"
                 AND "companies_jobdescription"."last_employer_update_at" < %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'Company.has_admin[common_apps/organizations/models.py]',
          'Company.convention_can_be_accessed_by[companies/models.py]',
          'nav[utils/templatetags/nav.py]',
          'InclusionNode[layout/_header_authenticated.html]',
          'IncludeNode[layout/base.html]',
          'IfNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "users_user"
          INNER JOIN "companies_companymembership" ON ("users_user"."id" = "companies_companymembership"."user_id")
          WHERE ("companies_companymembership"."id" IN
                   (SELECT U0."id"
                    FROM "companies_companymembership" U0
                    INNER JOIN "users_user" U2 ON (U0."user_id" = U2."id")
                    WHERE (U0."company_id" = %s
                           AND U2."is_active"
                           AND U0."is_active"
                           AND U0."is_admin"
                           AND U2."is_active"))
                 AND "users_user"."id" = %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'Approval.is_suspended[approvals/models.py]',
          'Approval.state[approvals/models.py]',
          'approval_state_badge[utils/templatetags/badges.py]',
          'SimpleNode[apply/includes/eligibility_badge.html]',
          'IfNode[apply/includes/eligibility_badge.html]',
          'IfNode[apply/includes/eligibility_badge.html]',
          'WithNode[apply/includes/eligibility_badge.html]',
          'IncludeNode[apply/includes/list_tr.html]',
          'IfNode[apply/includes/list_tr.html]',
          'IfNode[apply/includes/list_tr.html]',
          'IncludeNode[apply/includes/list_table.html]',
          'ForNode[apply/includes/list_table.html]',
          'IncludeNode[apply/includes/list_job_applications.html]',
          'IfNode[apply/includes/list_job_applications.html]',
          'IfNode[apply/includes/list_job_applications.html]',
          'IfNode[apply/includes/list_job_applications.html]',
          'IncludeNode[apply/list_for_siae.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "approvals_suspension"
          WHERE ("approvals_suspension"."approval_id" = %s
                 AND "approvals_suspension"."end_at" >= %s
                 AND "approvals_suspension"."start_at" <= %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: test_list_for_siae_badge[no_eligibility_diag]
  '''
  <span class="badge badge-xs rounded-pill bg-warning-lighter text-warning">
      <i aria-hidden="true" class="ri-error-warning-line">
      </i>
      Éligibilité IAE à valider
  </span>
  
  '''
# ---
# name: test_list_for_siae_badge[with_approval]
  '''
  <span class="badge badge-xs rounded-pill bg-success-lighter text-success">
      <i aria-hidden="true" class="ri-pass-valid-line">
      </i>
      PASS IAE valide
  </span>
  
  '''
# ---
# name: test_list_for_siae_badge[with_eligibility_diag]
  '''
  <span class="badge badge-xs rounded-pill bg-success-lighter text-success">
      <i aria-hidden="true" class="ri-check-line">
      </i>
      Éligible à l’IAE
  </span>
  
  '''
# ---
# name: test_list_for_siae_exports
  '''
  <div class="c-info mb-3 mb-md-4" id="besoin-dun-chiffre">
      <button aria-controls="collapseBesoinChiffre" aria-expanded="false" class="c-info__summary collapsed" data-bs-target="#collapseBesoinChiffre" data-bs-toggle="collapse" type="button">
          <span>
              Besoin d'un chiffre ?
          </span>
      </button>
      <div class="c-info__detail collapse" id="collapseBesoinChiffre">
          Accédez aux
          <a href="/stats/siae/hiring" rel="noopener" target="_blank">
              données de recrutement de votre structure
          </a>
          (non nominatives) compilées, calculées et mises à jour quotidiennement.
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_exports_download[for_snapshot]
  list([
    list([
      'Civilité candidat',
      'Nom candidat',
      'Prénom candidat',
      'Email candidat',
      'Téléphone candidat',
      'Date de naissance candidat',
      'Ville candidat',
      'Département candidat',
      'Nom structure employeur',
      'Type employeur',
      'Métiers',
      'Source de la candidature',
      'Nom organisation prescripteur',
      'Nom utilisateur prescripteur',
      'Date de la candidature',
      'Statut de la candidature',
      'Dates de début d’embauche',
      'Dates de fin d’embauche',
      'Motifs de refus',
      'Éligibilité IAE validée',
      'Eligible au contrôle',
      'Numéro PASS\xa0IAE',
      'Début PASS\xa0IAE',
      'Fin PASS\xa0IAE',
      'Statut PASS\xa0IAE',
    ]),
    list([
      'MME',
      'Doe',
      'Jane',
      'jane.doe@test.local',
      '0612345678',
      datetime.datetime(1990, 1, 1, 0, 0),
      'Rennes',
      '35000',
      'Acme inc.',
      'EI',
      'Candidature spontanée',
      'Orienteur',
      '',
      'Pierre DUPONT',
      datetime.datetime(2024, 8, 18, 0, 0),
      'Nouvelle candidature',
      datetime.datetime(2024, 8, 18, 0, 0),
      datetime.datetime(2026, 8, 18, 0, 0),
      '',
      'oui',
      'non',
      '',
      '',
      '',
      '',
    ]),
  ])
# ---
# name: test_list_for_siae_exports_download[no_eligibility_diag]
  list([
    list([
      'Civilité candidat',
      'Nom candidat',
      'Prénom candidat',
      'Email candidat',
      'Téléphone candidat',
      'Date de naissance candidat',
      'Ville candidat',
      'Département candidat',
      'Nom structure employeur',
      'Type employeur',
      'Métiers',
      'Source de la candidature',
      'Nom organisation prescripteur',
      'Nom utilisateur prescripteur',
      'Date de la candidature',
      'Statut de la candidature',
      'Dates de début d’embauche',
      'Dates de fin d’embauche',
      'Motifs de refus',
      'Éligibilité IAE validée',
      'Eligible au contrôle',
      'Numéro PASS\xa0IAE',
      'Début PASS\xa0IAE',
      'Fin PASS\xa0IAE',
      'Statut PASS\xa0IAE',
    ]),
    list([
      'MME',
      'Doe',
      'Jane',
      'jane.doe@test.local',
      '0612345678',
      datetime.datetime(1990, 1, 1, 0, 0),
      'Rennes',
      '35000',
      'Acme inc.',
      'EI',
      'Candidature spontanée',
      'Orienteur',
      '',
      'Pierre DUPONT',
      datetime.datetime(2024, 8, 18, 0, 0),
      'Nouvelle candidature',
      datetime.datetime(2024, 8, 18, 0, 0),
      datetime.datetime(2026, 8, 18, 0, 0),
      '',
      'non',
      'non',
      '',
      '',
      '',
      '',
    ]),
  ])
# ---
# name: test_list_for_siae_filter_for_different_kind[geiq]
  '''
  <div aria-labelledby="offcanvasApplyFiltersLabel" class="c-offcanvas-filters offcanvas offcanvas-end" id="offcanvasApplyFilters" tabindex="-1">
      <div class="offcanvas-header">
          <h4 class="mb-0 btn-ico" id="offcanvasApplyFiltersLabel">
              <i aria-hidden="true" class="ri-sound-module-fill fw-medium">
              </i>
              <span>
                  Filtrer
              </span>
          </h4>
          <button aria-label="Fermer" class="btn-close" data-bs-dismiss="offcanvas" type="button">
          </button>
      </div>
      <div class="offcanvas-body" id="offcanvasApplyFiltersContent">
          <fieldset>
              <legend>
                  <button aria-controls="collapseStates" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseStates" data-bs-toggle="collapse" type="button">
                      Statut
                  </button>
              </legend>
              <div class="my-3 collapse" id="collapseStates">
                  <ul>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_0" name="states" type="checkbox" value="new"/>
                              <label class="form-check-label" for="id_states_0">
                                  Nouvelle candidature
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_1" name="states" type="checkbox" value="processing"/>
                              <label class="form-check-label" for="id_states_1">
                                  Candidature à l'étude
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_2" name="states" type="checkbox" value="postponed"/>
                              <label class="form-check-label" for="id_states_2">
                                  Candidature en attente
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_3" name="states" type="checkbox" value="prior_to_hire"/>
                              <label class="form-check-label" for="id_states_3">
                                  Action préalable à l’embauche
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_4" name="states" type="checkbox" value="accepted"/>
                              <label class="form-check-label" for="id_states_4">
                                  Candidature acceptée
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_5" name="states" type="checkbox" value="refused"/>
                              <label class="form-check-label" for="id_states_5">
                                  Candidature déclinée
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_6" name="states" type="checkbox" value="cancelled"/>
                              <label class="form-check-label" for="id_states_6">
                                  Embauche annulée
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_7" name="states" type="checkbox" value="obsolete"/>
                              <label class="form-check-label" for="id_states_7">
                                  Embauché ailleurs
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_8" name="states" type="checkbox" value="pool"/>
                              <label class="form-check-label" for="id_states_8">
                                  Vivier de candidatures
                              </label>
                          </div>
                      </li>
                  </ul>
              </div>
          </fieldset>
          <input id="display-kind" name="display" type="hidden" value="list"/>
          <input id="id_order" name="order" type="hidden" value="-created_at"/>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapseSenders" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseSenders" data-bs-toggle="collapse" type="button">
                      Émetteur
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapseSenders">
                  <div class="form-group">
                      <label class="form-label" for="id_senders">
                          Nom de la personne
                      </label>
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_senders" lang="fr" multiple="" name="senders">
                      </select>
                  </div>
                  <div class="form-group">
                      <label class="form-label" for="id_sender_prescriber_organizations">
                          Nom de l'organisme prescripteur
                      </label>
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_sender_prescriber_organizations" lang="fr" multiple="" name="sender_prescriber_organizations">
                      </select>
                  </div>
                  <div class="form-group">
                      <label class="form-label" for="id_sender_companies">
                          Nom de l’employeur orienteur
                      </label>
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_sender_companies" lang="fr" multiple="" name="sender_companies">
                      </select>
                  </div>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapse-criteria" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-criteria" data-bs-toggle="collapse" type="button">
                      Critères administratifs déclarés
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapse-criteria">
                  <div class="form-group">
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_criteria" lang="fr" multiple="" name="criteria">
                          <option value="1">
                              Bénéficiaire du RSA
                          </option>
                          <option value="2">
                              Allocataire ASS
                          </option>
                          <option value="3">
                              Allocataire AAH
                          </option>
                          <option value="4">
                              DETLD (+ 24 mois)
                          </option>
                          <option value="5">
                              Niveau d'étude 3 (CAP, BEP) ou infra
                          </option>
                          <option value="6">
                              Senior (+50 ans)
                          </option>
                          <option value="7">
                              Jeune (-26 ans)
                          </option>
                          <option value="8">
                              Sortant de l'ASE
                          </option>
                          <option value="9">
                              DELD (12-24 mois)
                          </option>
                          <option value="10">
                              Travailleur handicapé
                          </option>
                          <option value="11">
                              Parent isolé
                          </option>
                          <option value="12">
                              Personne sans hébergement ou hébergée ou ayant un parcours de rue
                          </option>
                          <option value="13">
                              Réfugié statutaire, bénéficiaire d'une protection temporaire, protégé subsidiaire ou demandeur d'asile
                          </option>
                          <option value="14">
                              Résident ZRR
                          </option>
                          <option value="15">
                              Résident QPV
                          </option>
                          <option value="16">
                              Sortant de détention ou personne placée sous main de justice
                          </option>
                          <option value="17">
                              Maîtrise de la langue française inférieure au niveau A1
                          </option>
                          <option value="18">
                              Problème de mobilité
                          </option>
                      </select>
                  </div>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapse-archived" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-archived" data-bs-toggle="collapse" type="button">
                      Candidatures archivées
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapse-archived">
                  <div class="form-group">
                      <div class="is-valid" id="id_archived">
                          <div class="form-check">
                              <input checked="checked" class="form-check-input is-valid" id="id_archived_0" name="archived" type="radio" value=""/>
                              <label class="form-check-label" for="id_archived_0">
                                  Candidatures actives (affichage par défaut)
                              </label>
                          </div>
                          <div class="form-check">
                              <input class="form-check-input is-valid" id="id_archived_1" name="archived" type="radio" value="archived"/>
                              <label class="form-check-label" for="id_archived_1">
                                  Candidatures archivées
                              </label>
                          </div>
                          <div class="form-check">
                              <input class="form-check-input is-valid" id="id_archived_2" name="archived" type="radio" value="all"/>
                              <label class="form-check-label" for="id_archived_2">
                                  Toutes les candidatures
                              </label>
                          </div>
                      </div>
                  </div>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapseDate" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseDate" data-bs-toggle="collapse" type="button">
                      Date d'envoi de la candidature
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapseDate">
                  <div class="form-group">
                      <label class="form-label" for="id_start_date">
                          À partir du
                      </label>
                      <duet-date-picker class="is-valid" identifier="id_start_date" name="start_date">
                      </duet-date-picker>
                  </div>
                  <div class="form-group">
                      <label class="form-label" for="id_end_date">
                          Jusqu'au
                      </label>
                      <duet-date-picker class="is-valid" identifier="id_end_date" name="end_date">
                      </duet-date-picker>
                  </div>
              </div>
          </fieldset>
      </div>
      <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
          <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">
              Voir
          </button>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_filter_for_different_kind[iae]
  '''
  <div aria-labelledby="offcanvasApplyFiltersLabel" class="c-offcanvas-filters offcanvas offcanvas-end" id="offcanvasApplyFilters" tabindex="-1">
      <div class="offcanvas-header">
          <h4 class="mb-0 btn-ico" id="offcanvasApplyFiltersLabel">
              <i aria-hidden="true" class="ri-sound-module-fill fw-medium">
              </i>
              <span>
                  Filtrer
              </span>
          </h4>
          <button aria-label="Fermer" class="btn-close" data-bs-dismiss="offcanvas" type="button">
          </button>
      </div>
      <div class="offcanvas-body" id="offcanvasApplyFiltersContent">
          <fieldset>
              <legend>
                  <button aria-controls="collapseStates" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseStates" data-bs-toggle="collapse" type="button">
                      Statut
                  </button>
              </legend>
              <div class="my-3 collapse" id="collapseStates">
                  <ul>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_0" name="states" type="checkbox" value="new"/>
                              <label class="form-check-label" for="id_states_0">
                                  Nouvelle candidature
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_1" name="states" type="checkbox" value="processing"/>
                              <label class="form-check-label" for="id_states_1">
                                  Candidature à l'étude
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_2" name="states" type="checkbox" value="postponed"/>
                              <label class="form-check-label" for="id_states_2">
                                  Candidature en attente
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_3" name="states" type="checkbox" value="accepted"/>
                              <label class="form-check-label" for="id_states_3">
                                  Candidature acceptée
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_4" name="states" type="checkbox" value="refused"/>
                              <label class="form-check-label" for="id_states_4">
                                  Candidature déclinée
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_5" name="states" type="checkbox" value="cancelled"/>
                              <label class="form-check-label" for="id_states_5">
                                  Embauche annulée
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_6" name="states" type="checkbox" value="obsolete"/>
                              <label class="form-check-label" for="id_states_6">
                                  Embauché ailleurs
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_7" name="states" type="checkbox" value="pool"/>
                              <label class="form-check-label" for="id_states_7">
                                  Vivier de candidatures
                              </label>
                          </div>
                      </li>
                  </ul>
              </div>
          </fieldset>
          <input id="display-kind" name="display" type="hidden" value="list"/>
          <input id="id_order" name="order" type="hidden" value="-created_at"/>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapseSenders" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseSenders" data-bs-toggle="collapse" type="button">
                      Émetteur
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapseSenders">
                  <div class="form-group">
                      <label class="form-label" for="id_senders">
                          Nom de la personne
                      </label>
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_senders" lang="fr" multiple="" name="senders">
                      </select>
                  </div>
                  <div class="form-group">
                      <label class="form-label" for="id_sender_prescriber_organizations">
                          Nom de l'organisme prescripteur
                      </label>
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_sender_prescriber_organizations" lang="fr" multiple="" name="sender_prescriber_organizations">
                      </select>
                  </div>
                  <div class="form-group">
                      <label class="form-label" for="id_sender_companies">
                          Nom de l’employeur orienteur
                      </label>
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_sender_companies" lang="fr" multiple="" name="sender_companies">
                      </select>
                  </div>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapse-criteria" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-criteria" data-bs-toggle="collapse" type="button">
                      Critères administratifs déclarés
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapse-criteria">
                  <div class="form-group">
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_criteria" lang="fr" multiple="" name="criteria">
                          <option value="1">
                              Bénéficiaire du RSA
                          </option>
                          <option value="2">
                              Allocataire ASS
                          </option>
                          <option value="3">
                              Allocataire AAH
                          </option>
                          <option value="4">
                              DETLD (+ 24 mois)
                          </option>
                          <option value="5">
                              Niveau d'étude 3 (CAP, BEP) ou infra
                          </option>
                          <option value="6">
                              Senior (+50 ans)
                          </option>
                          <option value="7">
                              Jeune (-26 ans)
                          </option>
                          <option value="8">
                              Sortant de l'ASE
                          </option>
                          <option value="9">
                              DELD (12-24 mois)
                          </option>
                          <option value="10">
                              Travailleur handicapé
                          </option>
                          <option value="11">
                              Parent isolé
                          </option>
                          <option value="12">
                              Personne sans hébergement ou hébergée ou ayant un parcours de rue
                          </option>
                          <option value="13">
                              Réfugié statutaire, bénéficiaire d'une protection temporaire, protégé subsidiaire ou demandeur d'asile
                          </option>
                          <option value="14">
                              Résident ZRR
                          </option>
                          <option value="15">
                              Résident QPV
                          </option>
                          <option value="16">
                              Sortant de détention ou personne placée sous main de justice
                          </option>
                          <option value="17">
                              Maîtrise de la langue française inférieure au niveau A1
                          </option>
                          <option value="18">
                              Problème de mobilité
                          </option>
                      </select>
                  </div>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapseEligibility" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseEligibility" data-bs-toggle="collapse" type="button">
                      Éligibilité IAE
                  </button>
              </legend>
              <div class="my-3 collapse" id="collapseEligibility">
                  <ul>
                      <li>
                          <div class="">
                              <div class="form-check">
                                  <input class="form-check-input is-valid" id="id_eligibility_validated" name="eligibility_validated" type="checkbox"/>
                                  <label class="form-check-label" for="id_eligibility_validated">
                                      Valide
                                  </label>
                              </div>
                          </div>
                      </li>
                      <li>
                          <div class="">
                              <div class="form-check">
                                  <input class="form-check-input is-valid" id="id_eligibility_pending" name="eligibility_pending" type="checkbox"/>
                                  <label class="form-check-label" for="id_eligibility_pending">
                                      À valider
                                  </label>
                              </div>
                          </div>
                      </li>
                  </ul>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapsePassIAE" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapsePassIAE" data-bs-toggle="collapse" type="button">
                      Statut du PASS IAE
                  </button>
              </legend>
              <div class="my-3 collapse" id="collapsePassIAE">
                  <ul>
                      <li>
                          <div class="">
                              <div class="form-check">
                                  <input class="form-check-input is-valid" id="id_pass_iae_active" name="pass_iae_active" type="checkbox"/>
                                  <label class="form-check-label" for="id_pass_iae_active">
                                      Actif
                                  </label>
                              </div>
                          </div>
                      </li>
                      <li>
                          <div class="">
                              <div class="form-check">
                                  <input class="form-check-input is-valid" id="id_pass_iae_suspended" name="pass_iae_suspended" type="checkbox"/>
                                  <label class="form-check-label" for="id_pass_iae_suspended">
                                      Suspendu
                                  </label>
                              </div>
                          </div>
                      </li>
                      <li>
                          <div class="">
                              <div class="form-check">
                                  <input class="form-check-input is-valid" id="id_pass_iae_expired" name="pass_iae_expired" type="checkbox"/>
                                  <label class="form-check-label" for="id_pass_iae_expired">
                                      Expiré
                                  </label>
                              </div>
                          </div>
                      </li>
                  </ul>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapse-archived" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-archived" data-bs-toggle="collapse" type="button">
                      Candidatures archivées
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapse-archived">
                  <div class="form-group">
                      <div class="is-valid" id="id_archived">
                          <div class="form-check">
                              <input checked="checked" class="form-check-input is-valid" id="id_archived_0" name="archived" type="radio" value=""/>
                              <label class="form-check-label" for="id_archived_0">
                                  Candidatures actives (affichage par défaut)
                              </label>
                          </div>
                          <div class="form-check">
                              <input class="form-check-input is-valid" id="id_archived_1" name="archived" type="radio" value="archived"/>
                              <label class="form-check-label" for="id_archived_1">
                                  Candidatures archivées
                              </label>
                          </div>
                          <div class="form-check">
                              <input class="form-check-input is-valid" id="id_archived_2" name="archived" type="radio" value="all"/>
                              <label class="form-check-label" for="id_archived_2">
                                  Toutes les candidatures
                              </label>
                          </div>
                      </div>
                  </div>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapseDate" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseDate" data-bs-toggle="collapse" type="button">
                      Date d'envoi de la candidature
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapseDate">
                  <div class="form-group">
                      <label class="form-label" for="id_start_date">
                          À partir du
                      </label>
                      <duet-date-picker class="is-valid" identifier="id_start_date" name="start_date">
                      </duet-date-picker>
                  </div>
                  <div class="form-group">
                      <label class="form-label" for="id_end_date">
                          Jusqu'au
                      </label>
                      <duet-date-picker class="is-valid" identifier="id_end_date" name="end_date">
                      </duet-date-picker>
                  </div>
              </div>
          </fieldset>
      </div>
      <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
          <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">
              Voir
          </button>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_filter_for_different_kind[non_iae]
  '''
  <div aria-labelledby="offcanvasApplyFiltersLabel" class="c-offcanvas-filters offcanvas offcanvas-end" id="offcanvasApplyFilters" tabindex="-1">
      <div class="offcanvas-header">
          <h4 class="mb-0 btn-ico" id="offcanvasApplyFiltersLabel">
              <i aria-hidden="true" class="ri-sound-module-fill fw-medium">
              </i>
              <span>
                  Filtrer
              </span>
          </h4>
          <button aria-label="Fermer" class="btn-close" data-bs-dismiss="offcanvas" type="button">
          </button>
      </div>
      <div class="offcanvas-body" id="offcanvasApplyFiltersContent">
          <fieldset>
              <legend>
                  <button aria-controls="collapseStates" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseStates" data-bs-toggle="collapse" type="button">
                      Statut
                  </button>
              </legend>
              <div class="my-3 collapse" id="collapseStates">
                  <ul>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_0" name="states" type="checkbox" value="new"/>
                              <label class="form-check-label" for="id_states_0">
                                  Nouvelle candidature
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_1" name="states" type="checkbox" value="processing"/>
                              <label class="form-check-label" for="id_states_1">
                                  Candidature à l'étude
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_2" name="states" type="checkbox" value="postponed"/>
                              <label class="form-check-label" for="id_states_2">
                                  Candidature en attente
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_3" name="states" type="checkbox" value="accepted"/>
                              <label class="form-check-label" for="id_states_3">
                                  Candidature acceptée
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_4" name="states" type="checkbox" value="refused"/>
                              <label class="form-check-label" for="id_states_4">
                                  Candidature déclinée
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_5" name="states" type="checkbox" value="cancelled"/>
                              <label class="form-check-label" for="id_states_5">
                                  Embauche annulée
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_6" name="states" type="checkbox" value="obsolete"/>
                              <label class="form-check-label" for="id_states_6">
                                  Embauché ailleurs
                              </label>
                          </div>
                      </li>
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_7" name="states" type="checkbox" value="pool"/>
                              <label class="form-check-label" for="id_states_7">
                                  Vivier de candidatures
                              </label>
                          </div>
                      </li>
                  </ul>
              </div>
          </fieldset>
          <input id="display-kind" name="display" type="hidden" value="list"/>
          <input id="id_order" name="order" type="hidden" value="-created_at"/>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapseSenders" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseSenders" data-bs-toggle="collapse" type="button">
                      Émetteur
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapseSenders">
                  <div class="form-group">
                      <label class="form-label" for="id_senders">
                          Nom de la personne
                      </label>
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_senders" lang="fr" multiple="" name="senders">
                      </select>
                  </div>
                  <div class="form-group">
                      <label class="form-label" for="id_sender_prescriber_organizations">
                          Nom de l'organisme prescripteur
                      </label>
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_sender_prescriber_organizations" lang="fr" multiple="" name="sender_prescriber_organizations">
                      </select>
                  </div>
                  <div class="form-group">
                      <label class="form-label" for="id_sender_companies">
                          Nom de l’employeur orienteur
                      </label>
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_sender_companies" lang="fr" multiple="" name="sender_companies">
                      </select>
                  </div>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapse-criteria" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-criteria" data-bs-toggle="collapse" type="button">
                      Critères administratifs déclarés
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapse-criteria">
                  <div class="form-group">
                      <select class="form-select is-valid django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_criteria" lang="fr" multiple="" name="criteria">
                          <option value="1">
                              Bénéficiaire du RSA
                          </option>
                          <option value="2">
                              Allocataire ASS
                          </option>
                          <option value="3">
                              Allocataire AAH
                          </option>
                          <option value="4">
                              DETLD (+ 24 mois)
                          </option>
                          <option value="5">
                              Niveau d'étude 3 (CAP, BEP) ou infra
                          </option>
                          <option value="6">
                              Senior (+50 ans)
                          </option>
                          <option value="7">
                              Jeune (-26 ans)
                          </option>
                          <option value="8">
                              Sortant de l'ASE
                          </option>
                          <option value="9">
                              DELD (12-24 mois)
                          </option>
                          <option value="10">
                              Travailleur handicapé
                          </option>
                          <option value="11">
                              Parent isolé
                          </option>
                          <option value="12">
                              Personne sans hébergement ou hébergée ou ayant un parcours de rue
                          </option>
                          <option value="13">
                              Réfugié statutaire, bénéficiaire d'une protection temporaire, protégé subsidiaire ou demandeur d'asile
                          </option>
                          <option value="14">
                              Résident ZRR
                          </option>
                          <option value="15">
                              Résident QPV
                          </option>
                          <option value="16">
                              Sortant de détention ou personne placée sous main de justice
                          </option>
                          <option value="17">
                              Maîtrise de la langue française inférieure au niveau A1
                          </option>
                          <option value="18">
                              Problème de mobilité
                          </option>
                      </select>
                  </div>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapse-archived" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-archived" data-bs-toggle="collapse" type="button">
                      Candidatures archivées
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapse-archived">
                  <div class="form-group">
                      <div class="is-valid" id="id_archived">
                          <div class="form-check">
                              <input checked="checked" class="form-check-input is-valid" id="id_archived_0" name="archived" type="radio" value=""/>
                              <label class="form-check-label" for="id_archived_0">
                                  Candidatures actives (affichage par défaut)
                              </label>
                          </div>
                          <div class="form-check">
                              <input class="form-check-input is-valid" id="id_archived_1" name="archived" type="radio" value="archived"/>
                              <label class="form-check-label" for="id_archived_1">
                                  Candidatures archivées
                              </label>
                          </div>
                          <div class="form-check">
                              <input class="form-check-input is-valid" id="id_archived_2" name="archived" type="radio" value="all"/>
                              <label class="form-check-label" for="id_archived_2">
                                  Toutes les candidatures
                              </label>
                          </div>
                      </div>
                  </div>
              </div>
          </fieldset>
          <hr/>
          <fieldset>
              <legend>
                  <button aria-controls="collapseDate" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseDate" data-bs-toggle="collapse" type="button">
                      Date d'envoi de la candidature
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapseDate">
                  <div class="form-group">
                      <label class="form-label" for="id_start_date">
                          À partir du
                      </label>
                      <duet-date-picker class="is-valid" identifier="id_start_date" name="start_date">
                      </duet-date-picker>
                  </div>
                  <div class="form-group">
                      <label class="form-label" for="id_end_date">
                          Jusqu'au
                      </label>
                      <duet-date-picker class="is-valid" identifier="id_end_date" name="end_date">
                      </duet-date-picker>
                  </div>
              </div>
          </fieldset>
      </div>
      <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
          <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">
              Voir
          </button>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_accept[active accept button]
  '''
  <a class="btn btn-lg btn-link-white btn-block btn-ico justify-content-center" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="accept_application" href="/apply/[PK of JobApplication]/siae/accept?next_url=%2Fapply%2Fsiae%2Flist%3Fdisplay%3Dtable%26start_date%3D2015-01-01">
      <i aria-hidden="true" class="ri-check-line fw-medium">
      </i>
      <span>
          Accepter
      </span>
  </a>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_accept[inactive accept button already accepted]
  '''
  <button class="btn btn-lg btn-link-white btn-block btn-ico justify-content-center" data-bs-custom-class="c-box--action-tooltip" data-bs-placement="top" data-bs-title="Cette candidature est déjà acceptée." data-bs-toggle="tooltip" disabled="" type="button">
      <i aria-hidden="true" class="ri-close-line">
      </i>
      <span>
          Accepter
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_accept[inactive accept button multiple job applications]
  '''
  <button class="btn btn-lg btn-link-white btn-block btn-ico justify-content-center" data-bs-custom-class="c-box--action-tooltip" data-bs-placement="top" data-bs-title="Une seule candidature doit être séléctionnée pour être acceptée." data-bs-toggle="tooltip" disabled="" type="button">
      <i aria-hidden="true" class="ri-close-line">
      </i>
      <span>
          Accepter
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_add_to_pool[active add to pool button]
  '''
  <button class="btn justify-content-start dropdown-item" data-bs-target="#add_to_pool_confirmation_modal" data-bs-toggle="modal" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-add-to-pool-applications-open-modal" type="button">
      <i aria-hidden="true" class="ri-folder-user-line fw-medium me-2">
      </i>
      <span>
          Ajouter au vivier
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_add_to_pool[inactive add to pool button]
  '''
  <button class="btn justify-content-start dropdown-item" data-bs-custom-class="c-box--action-tooltip" data-bs-placement="top" data-bs-title="Seules les candidatures au statut « Nouvelle candidature », « À l’étude », « En attente », « Embauché ailleurs » et « Embauche annulée » peuvent être ajoutées au vivier." data-bs-toggle="tooltip" disabled="" type="button">
      <i aria-hidden="true" class="ri-folder-user-line fw-medium me-2">
      </i>
      <span>
          Ajouter au vivier
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_add_to_pool[modal with 1 addable application]
  '''
  <div aria-hidden="true" aria-labelledby="add_to_pool_modal_title" class="modal" id="add_to_pool_confirmation_modal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
              <div class="modal-header">
                  <h2 class="modal-title" id="add_to_pool_modal_title">
                      Ajouter 1 candidature au vivier
                  </h2>
                  <button aria-label="Fermer" class="btn-close" data-bs-dismiss="modal" type="button">
                  </button>
              </div>
              <form action="/apply/company/batch/add-to-pool?next_url=/apply/siae/list%3Fdisplay%3Dtable%26start_date%3D2015-01-01" method="post">
                  <div class="modal-body">
                      <p>
                          En ajoutant cette candidature au vivier, elle ne sera pas automatiquement refusée après deux mois.
                                          Toutefois, nous vous invitons à la traiter dans un délai raisonnable afin d’informer le candidat de l’avancement de sa candidature.
                      </p>
                      <div class="form-group">
                          <label class="form-label" for="id_answer">
                              Commentaire envoyé au candidat
                          </label>
                          <textarea aria-describedby="id_answer_helptext" class="form-control" cols="40" id="id_answer" name="answer" rows="10">Votre candidature a retenu toute notre attention. Malheureusement, nous n’avons plus de poste disponible pour le moment. Toutefois, nous l’avons conservée dans notre base de candidatures. Ainsi, si une opportunité se présente, elle pourra être réexaminée et, le cas échéant, retenue.
  Nous vous souhaitons une bonne continuation et espérons que vous trouverez rapidement une opportunité qui vous correspond.</textarea>
                          <div class="form-text" id="id_answer_helptext">
                              Une copie sera envoyée au prescripteur/orienteur.
                          </div>
                      </div>
                  </div>
                  <div class="modal-footer">
                      <button class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal" type="button">
                          Retour
                      </button>
                      <input name="csrfmiddlewaretoken" type="hidden" value="NORMALIZED_CSRF_TOKEN"/>
                      <input name="application_ids" type="hidden" value="11111111-1111-1111-1111-111111111111"/>
                      <button class="btn btn-sm btn-primary" data-matomo-action="submit" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-add_to_pool-applications-submit">
                          Confirmer
                      </button>
                  </div>
              </form>
          </div>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_add_to_pool[modal with 2 addable applications]
  '''
  <div aria-hidden="true" aria-labelledby="add_to_pool_modal_title" class="modal" id="add_to_pool_confirmation_modal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
              <div class="modal-header">
                  <h2 class="modal-title" id="add_to_pool_modal_title">
                      Ajouter 2 candidatures au vivier
                  </h2>
                  <button aria-label="Fermer" class="btn-close" data-bs-dismiss="modal" type="button">
                  </button>
              </div>
              <form action="/apply/company/batch/add-to-pool?next_url=/apply/siae/list%3Fdisplay%3Dtable%26start_date%3D2015-01-01" method="post">
                  <div class="modal-body">
                      <p>
                          En ajoutant ces candidatures au vivier, elles ne seront pas automatiquement refusées après deux mois.
                                          Toutefois, nous vous invitons à les traiter dans un délai raisonnable afin d’informer les candidats de l’avancement de leurs candidatures.
                      </p>
                      <div class="form-group">
                          <label class="form-label" for="id_answer">
                              Commentaire envoyé aux 2 candidats
                          </label>
                          <textarea aria-describedby="id_answer_helptext" class="form-control" cols="40" id="id_answer" name="answer" rows="10">Votre candidature a retenu toute notre attention. Malheureusement, nous n’avons plus de poste disponible pour le moment. Toutefois, nous l’avons conservée dans notre base de candidatures. Ainsi, si une opportunité se présente, elle pourra être réexaminée et, le cas échéant, retenue.
  Nous vous souhaitons une bonne continuation et espérons que vous trouverez rapidement une opportunité qui vous correspond.</textarea>
                          <div class="form-text" id="id_answer_helptext">
                              Une copie sera envoyée aux prescripteurs/orienteurs.
                          </div>
                      </div>
                  </div>
                  <div class="modal-footer">
                      <button class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal" type="button">
                          Retour
                      </button>
                      <input name="csrfmiddlewaretoken" type="hidden" value="NORMALIZED_CSRF_TOKEN"/>
                      <input name="application_ids" type="hidden" value="22222222-2222-2222-2222-222222222222"/>
                      <input name="application_ids" type="hidden" value="11111111-1111-1111-1111-111111111111"/>
                      <button class="btn btn-sm btn-primary" data-matomo-action="submit" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-add_to_pool-applications-submit">
                          Confirmer
                      </button>
                  </div>
              </form>
          </div>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_archive[active archive button]
  '''
  <button class="btn justify-content-start dropdown-item" data-bs-target="#archive_confirmation_modal" data-bs-toggle="modal" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-archive-applications-open-modal" type="button">
      <i aria-hidden="true" class="ri-archive-line fw-medium me-2">
      </i>
      <span>
          Archiver
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_archive[inactive archive button]
  '''
  <button class="btn justify-content-start dropdown-item" data-bs-custom-class="c-box--action-tooltip" data-bs-placement="top" data-bs-title="La sélection ne peut pas être archivée. Seules les candidatures au statut « Déclinée », « Embauché ailleurs » et « Embauche annulée » peuvent être archivées." data-bs-toggle="tooltip" disabled="" type="button">
      <i aria-hidden="true" class="ri-archive-line fw-medium me-2">
      </i>
      <span>
          Archiver
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_archive[modal with 1 archivable application]
  '''
  <div aria-hidden="true" aria-labelledby="archive_modal_title" class="modal" id="archive_confirmation_modal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
              <div class="modal-header">
                  <h2 class="modal-title" id="archive_modal_title">
                      Archiver 1 candidature
                  </h2>
                  <button aria-label="Fermer" class="btn-close" data-bs-dismiss="modal" type="button">
                  </button>
              </div>
              <div class="modal-body">
                  <p>
                      Êtes-vous sûr de vouloir archiver
                                  
                                      la candidature sélectionnée
                                  
                                  ?
                  </p>
              </div>
              <div class="modal-footer">
                  <button class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal" type="button">
                      Retour
                  </button>
                  <form action="/apply/company/batch/archive?next_url=/apply/siae/list%3Fdisplay%3Dtable%26start_date%3D2015-01-01" method="post">
                      <input name="csrfmiddlewaretoken" type="hidden" value="NORMALIZED_CSRF_TOKEN"/>
                      <input name="application_ids" type="hidden" value="11111111-1111-1111-1111-111111111111"/>
                      <button class="btn btn-sm btn-primary" data-matomo-action="submit" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-archive-applications-submit">
                          Confirmer
                      </button>
                  </form>
              </div>
          </div>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_archive[modal with 2 archivable applications]
  '''
  <div aria-hidden="true" aria-labelledby="archive_modal_title" class="modal" id="archive_confirmation_modal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
              <div class="modal-header">
                  <h2 class="modal-title" id="archive_modal_title">
                      Archiver 2 candidatures
                  </h2>
                  <button aria-label="Fermer" class="btn-close" data-bs-dismiss="modal" type="button">
                  </button>
              </div>
              <div class="modal-body">
                  <p>
                      Êtes-vous sûr de vouloir archiver
                                  
                                      les 2 candidatures sélectionnées
                                  
                                  ?
                  </p>
              </div>
              <div class="modal-footer">
                  <button class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal" type="button">
                      Retour
                  </button>
                  <form action="/apply/company/batch/archive?next_url=/apply/siae/list%3Fdisplay%3Dtable%26start_date%3D2015-01-01" method="post">
                      <input name="csrfmiddlewaretoken" type="hidden" value="NORMALIZED_CSRF_TOKEN"/>
                      <input name="application_ids" type="hidden" value="22222222-2222-2222-2222-222222222222"/>
                      <input name="application_ids" type="hidden" value="11111111-1111-1111-1111-111111111111"/>
                      <button class="btn btn-sm btn-primary" data-matomo-action="submit" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-archive-applications-submit">
                          Confirmer
                      </button>
                  </form>
              </div>
          </div>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_postpone[active postpone button]
  '''
  <button class="btn justify-content-start dropdown-item" data-bs-target="#postpone_confirmation_modal" data-bs-toggle="modal" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-postpone-applications-open-modal" type="button">
      <i aria-hidden="true" class="ri-history-line fw-medium me-2">
      </i>
      <span>
          Mettre en attente
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_postpone[inactive postpone button as GEIQ]
  '''
  <button class="btn justify-content-start dropdown-item" data-bs-custom-class="c-box--action-tooltip" data-bs-placement="top" data-bs-title="Seules les candidatures au statut « Nouvelle candidature » ou « À l’étude », « Action préalable à l’embauche » et « Vivier » peuvent être mises en liste d’attente." data-bs-toggle="tooltip" disabled="" type="button">
      <i aria-hidden="true" class="ri-history-line fw-medium me-2">
      </i>
      <span>
          Mettre en attente
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_postpone[inactive postpone button]
  '''
  <button class="btn justify-content-start dropdown-item" data-bs-custom-class="c-box--action-tooltip" data-bs-placement="top" data-bs-title="Seules les candidatures au statut « Nouvelle candidature » ou « À l’étude » et « Vivier » peuvent être mises en liste d’attente." data-bs-toggle="tooltip" disabled="" type="button">
      <i aria-hidden="true" class="ri-history-line fw-medium me-2">
      </i>
      <span>
          Mettre en attente
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_postpone[modal with 1 postponable application]
  '''
  <div aria-hidden="true" aria-labelledby="postpone_modal_title" class="modal" id="postpone_confirmation_modal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
              <div class="modal-header">
                  <h2 class="modal-title" id="postpone_modal_title">
                      Mettre en liste d’attente 1 candidature
                  </h2>
                  <button aria-label="Fermer" class="btn-close" data-bs-dismiss="modal" type="button">
                  </button>
              </div>
              <form action="/apply/company/batch/postpone?next_url=/apply/siae/list%3Fdisplay%3Dtable%26start_date%3D2015-01-01" method="post">
                  <div class="modal-body">
                      <div class="form-group">
                          <label class="form-label" for="id_answer">
                              Commentaire à envoyer au candidat
                          </label>
                          <textarea aria-describedby="id_answer_helptext" class="form-control" cols="40" id="id_answer" name="answer" placeholder="Votre réponse sera visible par les candidats et les prescripteurs/orienteurs" rows="10"></textarea>
                          <div class="form-text" id="id_answer_helptext">
                              Votre réponse sera visible par le candidat et le prescripteur
                          </div>
                      </div>
                  </div>
                  <div class="modal-footer">
                      <button class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal" type="button">
                          Retour
                      </button>
                      <input name="csrfmiddlewaretoken" type="hidden" value="NORMALIZED_CSRF_TOKEN"/>
                      <input name="application_ids" type="hidden" value="11111111-1111-1111-1111-111111111111"/>
                      <button class="btn btn-sm btn-primary" data-matomo-action="submit" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-postpone-applications-submit">
                          Confirmer
                      </button>
                  </div>
              </form>
          </div>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_postpone[modal with 2 postponable applications]
  '''
  <div aria-hidden="true" aria-labelledby="postpone_modal_title" class="modal" id="postpone_confirmation_modal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
              <div class="modal-header">
                  <h2 class="modal-title" id="postpone_modal_title">
                      Mettre en liste d’attente 2 candidatures
                  </h2>
                  <button aria-label="Fermer" class="btn-close" data-bs-dismiss="modal" type="button">
                  </button>
              </div>
              <form action="/apply/company/batch/postpone?next_url=/apply/siae/list%3Fdisplay%3Dtable%26start_date%3D2015-01-01" method="post">
                  <div class="modal-body">
                      <div class="form-group">
                          <label class="form-label" for="id_answer">
                              Commentaire à envoyer aux 2 candidats
                          </label>
                          <textarea aria-describedby="id_answer_helptext" class="form-control" cols="40" id="id_answer" name="answer" placeholder="Votre réponse sera visible par les candidats et les prescripteurs/orienteurs" rows="10"></textarea>
                          <div class="form-text" id="id_answer_helptext">
                              Votre réponse sera visible par le candidat et le prescripteur
                          </div>
                      </div>
                  </div>
                  <div class="modal-footer">
                      <button class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal" type="button">
                          Retour
                      </button>
                      <input name="csrfmiddlewaretoken" type="hidden" value="NORMALIZED_CSRF_TOKEN"/>
                      <input name="application_ids" type="hidden" value="22222222-2222-2222-2222-222222222222"/>
                      <input name="application_ids" type="hidden" value="11111111-1111-1111-1111-111111111111"/>
                      <button class="btn btn-sm btn-primary" data-matomo-action="submit" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-postpone-applications-submit">
                          Confirmer
                      </button>
                  </div>
              </form>
          </div>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_process[active process button]
  '''
  <button class="btn justify-content-start dropdown-item" data-bs-target="#process_confirmation_modal" data-bs-toggle="modal" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-process-applications-open-modal" type="button">
      <i aria-hidden="true" class="ri-history-line fw-medium me-2">
      </i>
      <span>
          Étudier
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_process[inactive process button]
  '''
  <button class="btn justify-content-start dropdown-item" data-bs-custom-class="c-box--action-tooltip" data-bs-placement="top" data-bs-title="Seules les candidatures au statut « Nouvelle candidature » et « Vivier » peuvent être mises à l’étude." data-bs-toggle="tooltip" disabled="" type="button">
      <i aria-hidden="true" class="ri-history-line fw-medium me-2">
      </i>
      <span>
          Étudier
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_process[modal with 1 processable application]
  '''
  <div aria-hidden="true" aria-labelledby="process_modal_title" class="modal" id="process_confirmation_modal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
              <div class="modal-header">
                  <h2 class="modal-title" id="postpone_modal_title">
                      Mettre à l’étude 1 candidature
                  </h2>
                  <button aria-label="Fermer" class="btn-close" data-bs-dismiss="modal" type="button">
                  </button>
              </div>
              <div class="modal-body">
                  <p>
                      Êtes-vous sûr de vouloir mettre à l’étude
                                  
                                      la candidature sélectionnée
                                  
                                  ?
                  </p>
              </div>
              <form action="/apply/company/batch/process?next_url=/apply/siae/list%3Fdisplay%3Dtable%26start_date%3D2015-01-01" method="post">
                  <div class="modal-footer">
                      <button class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal" type="button">
                          Retour
                      </button>
                      <input name="csrfmiddlewaretoken" type="hidden" value="NORMALIZED_CSRF_TOKEN"/>
                      <input name="application_ids" type="hidden" value="11111111-1111-1111-1111-111111111111"/>
                      <button class="btn btn-sm btn-primary" data-matomo-action="submit" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-process-applications-submit">
                          Confirmer
                      </button>
                  </div>
              </form>
          </div>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_process[modal with 2 processable applications]
  '''
  <div aria-hidden="true" aria-labelledby="process_modal_title" class="modal" id="process_confirmation_modal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
              <div class="modal-header">
                  <h2 class="modal-title" id="postpone_modal_title">
                      Mettre à l’étude 2 candidatures
                  </h2>
                  <button aria-label="Fermer" class="btn-close" data-bs-dismiss="modal" type="button">
                  </button>
              </div>
              <div class="modal-body">
                  <p>
                      Êtes-vous sûr de vouloir mettre à l’étude
                                  
                                      les 2 candidatures sélectionnées
                                  
                                  ?
                  </p>
              </div>
              <form action="/apply/company/batch/process?next_url=/apply/siae/list%3Fdisplay%3Dtable%26start_date%3D2015-01-01" method="post">
                  <div class="modal-footer">
                      <button class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal" type="button">
                          Retour
                      </button>
                      <input name="csrfmiddlewaretoken" type="hidden" value="NORMALIZED_CSRF_TOKEN"/>
                      <input name="application_ids" type="hidden" value="22222222-2222-2222-2222-222222222222"/>
                      <input name="application_ids" type="hidden" value="11111111-1111-1111-1111-111111111111"/>
                      <button class="btn btn-sm btn-primary" data-matomo-action="submit" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-process-applications-submit">
                          Confirmer
                      </button>
                  </div>
              </form>
          </div>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_refuse[active refuse button]
  '''
  <button class="btn btn-lg btn-link-white btn-block btn-ico justify-content-center" data-matomo-action="submit" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-refuse-applications-start-wizard" type="submit">
      <i aria-hidden="true" class="ri-close-line">
      </i>
      <span>
          Décliner
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_refuse[inactive refuse button as GEIQ]
  '''
  <button class="btn btn-lg btn-link-white btn-block btn-ico justify-content-center" data-bs-custom-class="c-box--action-tooltip" data-bs-placement="top" data-bs-title="Seules les candidatures au statut « Nouvelle », « À l’étude », « Action préalable à l’embauche », « En attente » et « Vivier » peuvent être déclinées." data-bs-toggle="tooltip" disabled="" type="button">
      <i aria-hidden="true" class="ri-close-line">
      </i>
      <span>
          Décliner
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_refuse[inactive refuse button]
  '''
  <button class="btn btn-lg btn-link-white btn-block btn-ico justify-content-center" data-bs-custom-class="c-box--action-tooltip" data-bs-placement="top" data-bs-title="Seules les candidatures au statut « Nouvelle », « À l’étude », « En attente » et « Vivier » peuvent être déclinées." data-bs-toggle="tooltip" disabled="" type="button">
      <i aria-hidden="true" class="ri-close-line">
      </i>
      <span>
          Décliner
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_transfer[active transfer button]
  '''
  <button aria-haspopup="true" class="btn justify-content-start dropdown-item" data-bs-target="#transfer_confirmation_modal" data-bs-toggle="modal" id="transfer_to_button" type="button">
      <i class="ri-arrow-left-right-line me-2">
      </i>
      <span>
          Transférer vers
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_transfer[inactive transfer button]
  '''
  <button class="btn justify-content-start dropdown-item" data-bs-custom-class="c-box--action-tooltip" data-bs-placement="top" data-bs-title="Les candidatures au statut « Acceptée » ne peuvent pas être transférées." data-bs-toggle="tooltip" disabled="" type="button">
      <i class="ri-arrow-left-right-line me-2">
      </i>
      <span>
          Transférer vers
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_transfer[modal with 1 transferable application]
  '''
  <div aria-hidden="true" aria-labelledby="transfer_modal_title" class="modal" id="transfer_confirmation_modal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
          <form action="/apply/company/batch/transfer?next_url=/apply/siae/list%3Fdisplay%3Dtable%26start_date%3D2015-01-01" method="post">
              <input name="csrfmiddlewaretoken" type="hidden" value="NORMALIZED_CSRF_TOKEN"/>
              <input name="application_ids" type="hidden" value="11111111-1111-1111-1111-111111111111"/>
              <div class="modal-content">
                  <div class="modal-header">
                      <h2 class="modal-title" id="transfer_modal_title">
                          Transfert de 1 candidature
                      </h2>
                      <button aria-label="Fermer" class="btn-close" data-bs-dismiss="modal" type="button">
                      </button>
                  </div>
                  <div class="modal-body">
                      <div class="form-group form-group-required">
                          <label class="form-label" for="id_target_company_id">
                              Sélectionnez la structure vers laquelle vous souhaitez transférer la candidature.
                          </label>
                          <select class="form-select" id="id_target_company_id" name="target_company_id" required="">
                              <option selected="" value="">
                                  Sélectionnez une structure
                              </option>
                              <option value="2222">
                                  EI - Acme inc.
                              </option>
                              <option value="3333">
                                  EITI - Superbe snapshot
                              </option>
                          </select>
                      </div>
                  </div>
                  <div class="modal-footer">
                      <button class="btn btn-sm btn-outline-primary" data-bs-dismiss="modal" type="button">
                          Retour
                      </button>
                      <button class="btn btn-sm btn-primary" data-matomo-action="submit" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-transfer-applications-submit">
                          Confirmer
                      </button>
                  </div>
              </div>
          </form>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_transfer[modal with 2 transferable application]
  '''
  <div aria-hidden="true" aria-labelledby="transfer_modal_title" class="modal" id="transfer_confirmation_modal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
          <form action="/apply/company/batch/transfer?next_url=/apply/siae/list%3Fdisplay%3Dtable%26start_date%3D2015-01-01" method="post">
              <input name="csrfmiddlewaretoken" type="hidden" value="NORMALIZED_CSRF_TOKEN"/>
              <input name="application_ids" type="hidden" value="22222222-2222-2222-2222-222222222222"/>
              <input name="application_ids" type="hidden" value="11111111-1111-1111-1111-111111111111"/>
              <div class="modal-content">
                  <div class="modal-header">
                      <h2 class="modal-title" id="transfer_modal_title">
                          Transfert de 2 candidatures
                      </h2>
                      <button aria-label="Fermer" class="btn-close" data-bs-dismiss="modal" type="button">
                      </button>
                  </div>
                  <div class="modal-body">
                      <div class="form-group form-group-required">
                          <label class="form-label" for="id_target_company_id">
                              Sélectionnez la structure vers laquelle vous souhaitez transférer les 2 candidatures.
                          </label>
                          <select class="form-select" id="id_target_company_id" name="target_company_id" required="">
                              <option selected="" value="">
                                  Sélectionnez une structure
                              </option>
                              <option value="2222">
                                  EI - Acme inc.
                              </option>
                              <option value="3333">
                                  EITI - Superbe snapshot
                              </option>
                          </select>
                      </div>
                  </div>
                  <div class="modal-footer">
                      <button class="btn btn-sm btn-outline-primary" data-bs-dismiss="modal" type="button">
                          Retour
                      </button>
                      <button class="btn btn-sm btn-primary" data-matomo-action="submit" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-transfer-applications-submit">
                          Confirmer
                      </button>
                  </div>
              </div>
          </form>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_unarchive[active unarchive button]
  '''
  <button class="btn justify-content-start dropdown-item" data-bs-target="#unarchive_confirmation_modal" data-bs-toggle="modal" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-unarchive-applications-open-modal" type="button">
      <i aria-hidden="true" class="ri-arrow-go-back-line fw-medium me-2">
      </i>
      <span>
          Désarchiver
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_unarchive[inactive unarchive button]
  '''
  <button class="btn justify-content-start dropdown-item" data-bs-custom-class="c-box--action-tooltip" data-bs-placement="top" data-bs-title="La sélection ne peut pas être désarchivée. Seules les candidatures archivées peuvent être désarchivées." data-bs-toggle="tooltip" disabled="" type="button">
      <i aria-hidden="true" class="ri-arrow-go-back-line fw-medium me-2">
      </i>
      <span>
          Désarchiver
      </span>
  </button>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_unarchive[modal with 1 archived application]
  '''
  <div aria-hidden="true" aria-labelledby="unarchive_modal_title" class="modal" id="unarchive_confirmation_modal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
              <div class="modal-header">
                  <h2 class="modal-title" id="unarchive_modal_title">
                      Désarchiver 1 candidature
                  </h2>
                  <button aria-label="Fermer" class="btn-close" data-bs-dismiss="modal" type="button">
                  </button>
              </div>
              <div class="modal-body">
                  <p>
                      Êtes-vous sûr de vouloir désarchiver
                                  
                                      la candidature sélectionnée
                                  
                                  ?
                  </p>
              </div>
              <div class="modal-footer">
                  <button class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal" type="button">
                      Retour
                  </button>
                  <form action="/apply/company/batch/unarchive?next_url=/apply/siae/list%3Fdisplay%3Dtable%26start_date%3D2015-01-01%26archived%3Darchived" method="post">
                      <input name="csrfmiddlewaretoken" type="hidden" value="NORMALIZED_CSRF_TOKEN"/>
                      <input name="application_ids" type="hidden" value="11111111-1111-1111-1111-111111111111"/>
                      <button class="btn btn-sm btn-primary" data-matomo-action="submit" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-unarchive-applications-submit">
                          Confirmer
                      </button>
                  </form>
              </div>
          </div>
      </div>
  </div>
  
  '''
# ---
# name: test_list_for_siae_select_applications_batch_unarchive[modal with 2 archived applications]
  '''
  <div aria-hidden="true" aria-labelledby="unarchive_modal_title" class="modal" id="unarchive_confirmation_modal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
              <div class="modal-header">
                  <h2 class="modal-title" id="unarchive_modal_title">
                      Désarchiver 2 candidatures
                  </h2>
                  <button aria-label="Fermer" class="btn-close" data-bs-dismiss="modal" type="button">
                  </button>
              </div>
              <div class="modal-body">
                  <p>
                      Êtes-vous sûr de vouloir désarchiver
                                  
                                      les 2 candidatures sélectionnées
                                  
                                  ?
                  </p>
              </div>
              <div class="modal-footer">
                  <button class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal" type="button">
                      Retour
                  </button>
                  <form action="/apply/company/batch/unarchive?next_url=/apply/siae/list%3Fdisplay%3Dtable%26start_date%3D2015-01-01%26archived%3Darchived" method="post">
                      <input name="csrfmiddlewaretoken" type="hidden" value="NORMALIZED_CSRF_TOKEN"/>
                      <input name="application_ids" type="hidden" value="22222222-2222-2222-2222-222222222222"/>
                      <input name="application_ids" type="hidden" value="11111111-1111-1111-1111-111111111111"/>
                      <button class="btn btn-sm btn-primary" data-matomo-action="submit" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="batch-unarchive-applications-submit">
                          Confirmer
                      </button>
                  </form>
              </div>
          </div>
      </div>
  </div>
  
  '''
# ---
# name: test_list_snapshot[applications list]
  '''
  <section aria-labelledby="apply-list-count" id="job-applications-section">
      <div class="c-box c-box--results has-links-inside my-3 my-md-4">
          <div class="c-box--results__header">
              <div class="d-flex flex-column flex-lg-row gap-1 gap-lg-3 mb-3">
                  <p class="fs-sm mb-0 flex-grow-1">
                      Émise le 27 novembre 2024 par
                      <strong>
                          Pres. Org.
                      </strong>
                      <i aria-hidden="true" class="ri-home-smile-2-line me-1">
                      </i>
                      Orienteur
                  </p>
                  <div>
                      <span class="badge rounded-pill text-nowrap badge-sm mb-1 bg-danger" id="state_[PK of JobApplication]">
                          Candidature déclinée
                      </span>
                  </div>
              </div>
              <div class="c-box--results__summary">
                  <i aria-hidden="true" class="ri-user-line">
                  </i>
                  <div>
                      <h3>
                          Jane DOE
                      </h3>
                      <div class="d-flex flex-column flex-md-row align-items-start align-items-md-end gap-1 gap-md-2">
                          <span>
                              <i aria-hidden="true" class="ri-map-pin-2-line fw-normal me-1">
                              </i>
                              35 -
                                  Rennes
                          </span>
                          <span class="badge badge-xs rounded-pill bg-success-lighter text-success">
                              <i aria-hidden="true" class="ri-check-line">
                              </i>
                              Éligible à l’IAE
                          </span>
                      </div>
                  </div>
              </div>
          </div>
          <hr class="m-0"/>
          <div class="c-box--results__body">
              <div class="c-box--results__list-data">
                  <div class="c-info c-info--secondary">
                      <span class="c-info__summary">
                          Candidature spontanée
                      </span>
                  </div>
              </div>
          </div>
          <div class="c-box--results__footer">
              <div class="d-flex flex-column flex-md-row justify-content-md-end align-items-md-center gap-3">
                  <a aria-label="Gérer la candidature de Jane DOE" class="btn btn-outline-primary btn-block w-100 w-md-auto" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dlist">
                      Voir sa candidature
                  </a>
              </div>
          </div>
      </div>
      <div class="c-box c-box--results has-links-inside my-3 my-md-4">
          <div class="c-box--results__header">
              <div class="d-flex flex-column flex-lg-row gap-1 gap-lg-3 mb-3">
                  <p class="fs-sm mb-0 flex-grow-1">
                      Émise le 27 novembre 2024 par
                      <strong>
                          Vous
                      </strong>
                  </p>
                  <div>
                      <span class="badge rounded-pill text-nowrap badge-sm mb-1 bg-info" id="state_[PK of JobApplication]">
                          Nouvelle candidature
                      </span>
                  </div>
              </div>
              <div class="c-box--results__summary">
                  <i aria-hidden="true" class="ri-user-line">
                  </i>
                  <div>
                      <h3>
                          Jane DOE
                      </h3>
                      <div class="d-flex flex-column flex-md-row align-items-start align-items-md-end gap-1 gap-md-2">
                          <span>
                              <i aria-hidden="true" class="ri-map-pin-2-line fw-normal me-1">
                              </i>
                              35 -
                                  Rennes
                          </span>
                          <span class="badge badge-xs rounded-pill bg-success-lighter text-success">
                              <i aria-hidden="true" class="ri-check-line">
                              </i>
                              Éligible à l’IAE
                          </span>
                      </div>
                  </div>
              </div>
          </div>
          <hr class="m-0"/>
          <div class="c-box--results__body">
              <div class="c-box--results__list-data">
                  <div class="c-info c-info--secondary">
                      <span class="c-info__summary">
                          Candidature spontanée
                      </span>
                  </div>
              </div>
          </div>
          <div class="c-box--results__footer">
              <div class="d-flex flex-column flex-md-row justify-content-md-end align-items-md-center gap-3">
                  <a aria-label="Gérer la candidature de Jane DOE" class="btn btn-outline-primary btn-block w-100 w-md-auto" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dlist">
                      Voir sa candidature
                  </a>
              </div>
          </div>
      </div>
      <div class="c-box c-box--results has-links-inside my-3 my-md-4">
          <div class="c-box--results__header">
              <div class="d-flex flex-column flex-lg-row gap-1 gap-lg-3 mb-3">
                  <p class="fs-sm mb-0 flex-grow-1">
                      Émise le 27 novembre 2024 par
                      <i aria-hidden="true" class="ri-user-line me-1">
                      </i>
                      <strong>
                          Le candidat lui-même
                      </strong>
                  </p>
                  <div>
                      <span class="badge rounded-pill text-nowrap badge-sm mb-1 bg-success" id="state_[PK of JobApplication]">
                          Candidature acceptée
                      </span>
                  </div>
              </div>
              <div class="c-box--results__summary">
                  <i aria-hidden="true" class="ri-user-line">
                  </i>
                  <div>
                      <h3>
                          Jane DOE
                      </h3>
                      <div class="d-flex flex-column flex-md-row align-items-start align-items-md-end gap-1 gap-md-2">
                          <span>
                              <i aria-hidden="true" class="ri-map-pin-2-line fw-normal me-1">
                              </i>
                              35 -
                                  Rennes
                          </span>
                          <span class="badge badge-xs rounded-pill bg-success-lighter text-success">
                              <i aria-hidden="true" class="ri-check-line">
                              </i>
                              Éligible à l’IAE
                          </span>
                      </div>
                  </div>
              </div>
          </div>
          <hr class="m-0"/>
          <div class="c-box--results__body">
              <div class="c-box--results__list-data">
                  <div class="c-info c-info--secondary">
                      <span class="c-info__summary">
                          Candidature spontanée
                      </span>
                  </div>
              </div>
          </div>
          <div class="c-box--results__footer">
              <div class="d-flex flex-column flex-md-row justify-content-md-end align-items-md-center gap-3">
                  <a aria-label="Gérer la candidature de Jane DOE" class="btn btn-outline-primary btn-block w-100 w-md-auto" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dlist">
                      Voir sa candidature
                  </a>
              </div>
          </div>
      </div>
  </section>
  
  '''
# ---
# name: test_list_snapshot[applications table]
  '''
  <section aria-labelledby="apply-list-count" id="job-applications-section">
      <div class="table-responsive mt-3 mt-md-4">
          <form data-emplois-elements-visibility-on-selection-controller="selected-application" hx-get="/apply/siae/list/actions?list_url=/apply/siae/list%3Fdisplay%3Dtable" hx-indicator=".selection-indicator" hx-swap="none" hx-trigger="change delay:.5">
              <table class="table table-hover table-sortable">
                  <caption class="visually-hidden">
                      Liste des candidatures (les colonnes disposant d’un bouton dans leur entête peuvent être triées en cliquant sur le bouton)
                  </caption>
                  <thead>
                      <tr>
                          <th class="text-start w-50px" scope="col">
                              <input class="form-check-input" data-emplois-select-all-target-input-name="selected-application" id="select-all-applications" type="checkbox"/>
                              <label class="visually-hidden" for="select-all-applications">
                                  Sélectionner toutes les candidatures
                              </label>
                          </th>
                          <th aria-sort="none" scope="col">
                              <button data-emplois-elements-visibility-on-selection="disabled" data-emplois-setter-target="#id_order" data-emplois-setter-value="job_seeker_full_name" type="button">
                                  Candidature de
                              </button>
                          </th>
                          <th aria-sort="descending" scope="col">
                              <button data-emplois-elements-visibility-on-selection="disabled" data-emplois-setter-target="#id_order" data-emplois-setter-value="created_at" type="button">
                                  Émise le
                              </button>
                          </th>
                          <th scope="col">
                              Poste
                          </th>
                          <th scope="col">
                              Émetteur
                          </th>
                          <th class="text-nowrap" scope="col">
                              Critères administratifs IAE
                          </th>
                          <th scope="col">
                              Statut IAE
                          </th>
                          <th class="text-end w-50px" scope="col">
                          </th>
                      </tr>
                  </thead>
                  <tbody>
                      <tr class="align-top">
                          <th class="text-start w-50px" scope="row">
                              <input class="form-check-input" id="select-[PK of JobApplication]" name="selected-application" type="checkbox" value="[PK of JobApplication]"/>
                              <label class="visually-hidden" for="select-[PK of JobApplication]">
                                  Sélectionner cette candidature
                              </label>
                          </th>
                          <td>
                              <a class="btn-link" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  Jane DOE
                              </a>
                              <span class="d-block">
                                  35 -
                  Rennes
                              </span>
                              <span class="badge rounded-pill text-nowrap badge-sm bg-danger" id="state_[PK of JobApplication]">
                                  Candidature déclinée
                              </span>
                          </td>
                          <td>
                              27/11/2024
                          </td>
                          <td>
                              Candidature spontanée
                          </td>
                          <td>
                              <i aria-hidden="true" class="ri-home-smile-2-line">
                              </i>
                              Pres. Org.
                          </td>
                          <td>
                              Le prescripteur habilité n'a pas renseigné de critères.
                          </td>
                          <td>
                              <span class="badge badge-sm rounded-pill bg-success-lighter text-success">
                                  <i aria-hidden="true" class="ri-check-line">
                                  </i>
                                  Éligible à l’IAE
                              </span>
                              <span class="d-block">
                                  Éligibilité validée par un prescripteur habilité
                              </span>
                          </td>
                          <td class="text-end w-50px align-middle">
                              <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir sa candidature" data-bs-toggle="tooltip" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  <i aria-label="Gérer la candidature de Jane DOE" class="ri-arrow-drop-right-line fs-lg">
                                  </i>
                              </a>
                          </td>
                      </tr>
                      <tr class="align-top">
                          <th class="text-start w-50px" scope="row">
                              <input class="form-check-input" id="select-[PK of JobApplication]" name="selected-application" type="checkbox" value="[PK of JobApplication]"/>
                              <label class="visually-hidden" for="select-[PK of JobApplication]">
                                  Sélectionner cette candidature
                              </label>
                          </th>
                          <td>
                              <a class="btn-link" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  Jane DOE
                              </a>
                              <span class="d-block">
                                  35 -
                  Rennes
                              </span>
                              <span class="badge rounded-pill text-nowrap badge-sm bg-info" id="state_[PK of JobApplication]">
                                  Nouvelle candidature
                              </span>
                          </td>
                          <td>
                              27/11/2024
                          </td>
                          <td>
                              Candidature spontanée
                          </td>
                          <td>
                              Vous
                          </td>
                          <td>
                              Le prescripteur habilité n'a pas renseigné de critères.
                          </td>
                          <td>
                              <span class="badge badge-sm rounded-pill bg-success-lighter text-success">
                                  <i aria-hidden="true" class="ri-check-line">
                                  </i>
                                  Éligible à l’IAE
                              </span>
                              <span class="d-block">
                                  Éligibilité validée par un prescripteur habilité
                              </span>
                          </td>
                          <td class="text-end w-50px align-middle">
                              <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir sa candidature" data-bs-toggle="tooltip" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  <i aria-label="Gérer la candidature de Jane DOE" class="ri-arrow-drop-right-line fs-lg">
                                  </i>
                              </a>
                          </td>
                      </tr>
                      <tr class="align-top">
                          <th class="text-start w-50px" scope="row">
                              <input class="form-check-input" id="select-[PK of JobApplication]" name="selected-application" type="checkbox" value="[PK of JobApplication]"/>
                              <label class="visually-hidden" for="select-[PK of JobApplication]">
                                  Sélectionner cette candidature
                              </label>
                          </th>
                          <td>
                              <a class="btn-link" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  Jane DOE
                              </a>
                              <span class="d-block">
                                  35 -
                  Rennes
                              </span>
                              <span class="badge rounded-pill text-nowrap badge-sm bg-success" id="state_[PK of JobApplication]">
                                  Candidature acceptée
                              </span>
                          </td>
                          <td>
                              27/11/2024
                          </td>
                          <td>
                              Candidature spontanée
                          </td>
                          <td>
                              <i aria-hidden="true" class="ri-user-line me-1">
                              </i>
                              Le candidat lui-même
                          </td>
                          <td>
                              Le prescripteur habilité n'a pas renseigné de critères.
                          </td>
                          <td>
                              <span class="badge badge-sm rounded-pill bg-success-lighter text-success">
                                  <i aria-hidden="true" class="ri-check-line">
                                  </i>
                                  Éligible à l’IAE
                              </span>
                              <span class="d-block">
                                  Éligibilité validée par un prescripteur habilité
                              </span>
                          </td>
                          <td class="text-end w-50px align-middle">
                              <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir sa candidature" data-bs-toggle="tooltip" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  <i aria-label="Gérer la candidature de Jane DOE" class="ri-arrow-drop-right-line fs-lg">
                                  </i>
                              </a>
                          </td>
                      </tr>
                  </tbody>
              </table>
          </form>
      </div>
  </section>
  
  '''
# ---
# name: test_list_snapshot[empty]
  '''
  <section aria-labelledby="apply-list-count" id="job-applications-section">
      <div class="text-center my-3 my-md-4">
          <img alt="" class="img-fluid" loading="lazy" src="/static/img/illustration-card-no-result.png"/>
          <p class="mb-1 mt-3">
              <strong>
                  Aucune candidature pour le moment
              </strong>
          </p>
          <p>
              <i>
                  Pour recevoir des candidatures, vérifiez que les postes ouverts
                  <br class="d-none d-lg-inline"/>
                  dans votre structure sont bien à jour.
              </i>
          </p>
          <a class="btn btn-outline-primary btn-ico w-100 w-md-auto justify-content-center" href="/company/job_description_list">
              <i aria-hidden="true" class="ri-briefcase-line ri-lg fw-normal">
              </i>
              <span>
                  Gérer les métiers et recrutements
              </span>
          </a>
      </div>
  </section>
  
  '''
# ---
# name: test_reset_filter_button_snapshot[off-canvas buttons in list view]
  '''
  <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
      <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">
          Voir
      </button>
      <a aria-label="Réinitialiser le filtre actif" class="btn btn-ico btn-block btn-outline-primary" href="/apply/siae/list?display=list&order=-created_at">
          <i aria-hidden="true" class="ri-eraser-line fw-medium">
          </i>
          <span>
              Effacer tout
          </span>
      </a>
  </div>
  
  '''
# ---
# name: test_reset_filter_button_snapshot[off-canvas buttons in table view & created_at ascending order]
  '''
  <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
      <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">
          Voir
      </button>
      <a aria-label="Réinitialiser le filtre actif" class="btn btn-ico btn-block btn-outline-primary" href="/apply/siae/list?display=table&order=created_at">
          <i aria-hidden="true" class="ri-eraser-line fw-medium">
          </i>
          <span>
              Effacer tout
          </span>
      </a>
  </div>
  
  '''
# ---
# name: test_reset_filter_button_snapshot[reset-filter button in list view]
  '''
  <div class="ms-md-auto" id="apply-list-filter-counter">
      <a aria-label="Réinitialiser le filtre actif" class="btn btn-ico btn-dropdown-filter" href="/apply/siae/list?display=list&order=-created_at">
          <i aria-hidden="true" class="ri-eraser-line fw-medium">
          </i>
          <span>
              Effacer tout
          </span>
      </a>
  </div>
  
  '''
# ---
# name: test_reset_filter_button_snapshot[reset-filter button in table view & created_at ascending order]
  '''
  <div class="ms-md-auto" id="apply-list-filter-counter">
      <a aria-label="Réinitialiser le filtre actif" class="btn btn-ico btn-dropdown-filter" href="/apply/siae/list?display=table&order=created_at">
          <i aria-hidden="true" class="ri-eraser-line fw-medium">
          </i>
          <span>
              Effacer tout
          </span>
      </a>
  </div>
  
  '''
# ---
# name: test_table_iae_state_and_criteria[applications table]
  '''
  <section aria-labelledby="apply-list-count" id="job-applications-section">
      <div class="table-responsive mt-3 mt-md-4">
          <form data-emplois-elements-visibility-on-selection-controller="selected-application" hx-get="/apply/siae/list/actions?list_url=/apply/siae/list%3Fdisplay%3Dtable" hx-indicator=".selection-indicator" hx-swap="none" hx-trigger="change delay:.5">
              <table class="table table-hover table-sortable">
                  <caption class="visually-hidden">
                      Liste des candidatures (les colonnes disposant d’un bouton dans leur entête peuvent être triées en cliquant sur le bouton)
                  </caption>
                  <thead>
                      <tr>
                          <th class="text-start w-50px" scope="col">
                              <input class="form-check-input" data-emplois-select-all-target-input-name="selected-application" id="select-all-applications" type="checkbox"/>
                              <label class="visually-hidden" for="select-all-applications">
                                  Sélectionner toutes les candidatures
                              </label>
                          </th>
                          <th aria-sort="none" scope="col">
                              <button data-emplois-elements-visibility-on-selection="disabled" data-emplois-setter-target="#id_order" data-emplois-setter-value="job_seeker_full_name" type="button">
                                  Candidature de
                              </button>
                          </th>
                          <th aria-sort="descending" scope="col">
                              <button data-emplois-elements-visibility-on-selection="disabled" data-emplois-setter-target="#id_order" data-emplois-setter-value="created_at" type="button">
                                  Émise le
                              </button>
                          </th>
                          <th scope="col">
                              Poste
                          </th>
                          <th scope="col">
                              Émetteur
                          </th>
                          <th class="text-nowrap" scope="col">
                              Critères administratifs IAE
                          </th>
                          <th scope="col">
                              Statut IAE
                          </th>
                          <th class="text-end w-50px" scope="col">
                          </th>
                      </tr>
                  </thead>
                  <tbody>
                      <tr class="align-top">
                          <th class="text-start w-50px" scope="row">
                              <input class="form-check-input" id="select-[PK of JobApplication]" name="selected-application" type="checkbox" value="[PK of JobApplication]"/>
                              <label class="visually-hidden" for="select-[PK of JobApplication]">
                                  Sélectionner cette candidature
                              </label>
                          </th>
                          <td>
                              <a class="btn-link" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  Béatrice VOITURE
                              </a>
                              <span class="d-block">
                              </span>
                              <span class="badge rounded-pill text-nowrap badge-sm bg-success" id="state_[PK of JobApplication]">
                                  Candidature acceptée
                              </span>
                          </td>
                          <td>
                              27/11/2024
                          </td>
                          <td>
                              Candidature spontanée
                          </td>
                          <td>
                              Vous
                          </td>
                          <td>
                              <ul class="mb-0">
                                  <li>
                                      Allocataire ASS
                                  </li>
                                  <li>
                                      Bénéficiaire du RSA
                                  </li>
                              </ul>
                          </td>
                          <td>
                              <span class="badge badge-sm rounded-pill bg-success-lighter text-success">
                                  <i aria-hidden="true" class="ri-pass-valid-line">
                                  </i>
                                  PASS IAE valide
                              </span>
                              <span class="d-block">
                                  Éligibilité validée par votre entreprise
                              </span>
                          </td>
                          <td class="text-end w-50px align-middle">
                              <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir sa candidature" data-bs-toggle="tooltip" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  <i aria-label="Gérer la candidature de Béatrice VOITURE" class="ri-arrow-drop-right-line fs-lg">
                                  </i>
                              </a>
                          </td>
                      </tr>
                      <tr class="align-top">
                          <th class="text-start w-50px" scope="row">
                              <input class="form-check-input" id="select-[PK of JobApplication]" name="selected-application" type="checkbox" value="[PK of JobApplication]"/>
                              <label class="visually-hidden" for="select-[PK of JobApplication]">
                                  Sélectionner cette candidature
                              </label>
                          </th>
                          <td>
                              <a class="btn-link" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  Martine MARTIN
                              </a>
                              <span class="d-block">
                              </span>
                              <span class="badge rounded-pill text-nowrap badge-sm bg-success" id="state_[PK of JobApplication]">
                                  Candidature acceptée
                              </span>
                          </td>
                          <td>
                              27/11/2024
                          </td>
                          <td>
                              Candidature spontanée
                          </td>
                          <td>
                              Vous
                          </td>
                          <td>
                              Le prescripteur habilité n'a pas renseigné de critères.
                          </td>
                          <td>
                              <span class="badge badge-sm rounded-pill bg-success-lighter text-success">
                                  <i aria-hidden="true" class="ri-pass-valid-line">
                                  </i>
                                  PASS IAE valide
                              </span>
                              <span class="d-block">
                                  Éligibilité validée par un prescripteur habilité
                              </span>
                          </td>
                          <td class="text-end w-50px align-middle">
                              <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir sa candidature" data-bs-toggle="tooltip" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  <i aria-label="Gérer la candidature de Martine MARTIN" class="ri-arrow-drop-right-line fs-lg">
                                  </i>
                              </a>
                          </td>
                      </tr>
                      <tr class="align-top">
                          <th class="text-start w-50px" scope="row">
                              <input class="form-check-input" id="select-[PK of JobApplication]" name="selected-application" type="checkbox" value="[PK of JobApplication]"/>
                              <label class="visually-hidden" for="select-[PK of JobApplication]">
                                  Sélectionner cette candidature
                              </label>
                          </th>
                          <td>
                              <a class="btn-link" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  Aline BATO
                              </a>
                              <span class="d-block">
                              </span>
                              <span class="badge rounded-pill text-nowrap badge-sm bg-success" id="state_[PK of JobApplication]">
                                  Candidature acceptée
                              </span>
                          </td>
                          <td>
                              27/11/2024
                          </td>
                          <td>
                              Candidature spontanée
                          </td>
                          <td>
                              Vous
                          </td>
                          <td>
                              <i class="text-disabled">
                                  Aucun critère sélectionné
                              </i>
                          </td>
                          <td>
                              <span class="badge badge-sm rounded-pill bg-success-lighter text-success">
                                  <i aria-hidden="true" class="ri-pass-valid-line">
                                  </i>
                                  PASS IAE valide
                              </span>
                              <span class="d-block">
                                  Éligibilité validée par un employeur
                              </span>
                          </td>
                          <td class="text-end w-50px align-middle">
                              <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir sa candidature" data-bs-toggle="tooltip" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  <i aria-label="Gérer la candidature de Aline BATO" class="ri-arrow-drop-right-line fs-lg">
                                  </i>
                              </a>
                          </td>
                      </tr>
                      <tr class="align-top">
                          <th class="text-start w-50px" scope="row">
                              <input class="form-check-input" id="select-[PK of JobApplication]" name="selected-application" type="checkbox" value="[PK of JobApplication]"/>
                              <label class="visually-hidden" for="select-[PK of JobApplication]">
                                  Sélectionner cette candidature
                              </label>
                          </th>
                          <td>
                              <a class="btn-link" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  Jane DOE
                              </a>
                              <span class="d-block">
                                  35 -
                  Rennes
                              </span>
                              <span class="badge rounded-pill text-nowrap badge-sm bg-accent-03 text-primary" id="state_[PK of JobApplication]">
                                  Candidature en attente
                              </span>
                          </td>
                          <td>
                              27/11/2024
                          </td>
                          <td>
                              Candidature spontanée
                          </td>
                          <td>
                              Vous
                          </td>
                          <td>
                              <ul class="mb-0">
                                  <li>
                                      Allocataire AAH
                                  </li>
                                  <li>
                                      Résident QPV
                                  </li>
                              </ul>
                          </td>
                          <td>
                              <span class="badge badge-sm rounded-pill bg-success-lighter text-success">
                                  <i aria-hidden="true" class="ri-check-line">
                                  </i>
                                  Éligible à l’IAE
                              </span>
                              <span class="d-block">
                                  Éligibilité validée par un prescripteur habilité
                              </span>
                          </td>
                          <td class="text-end w-50px align-middle">
                              <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir sa candidature" data-bs-toggle="tooltip" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  <i aria-label="Gérer la candidature de Jane DOE" class="ri-arrow-drop-right-line fs-lg">
                                  </i>
                              </a>
                          </td>
                      </tr>
                      <tr class="align-top">
                          <th class="text-start w-50px" scope="row">
                              <input class="form-check-input" id="select-[PK of JobApplication]" name="selected-application" type="checkbox" value="[PK of JobApplication]"/>
                              <label class="visually-hidden" for="select-[PK of JobApplication]">
                                  Sélectionner cette candidature
                              </label>
                          </th>
                          <td>
                              <a class="btn-link" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  Jane DOE
                              </a>
                              <span class="d-block">
                                  35 -
                  Rennes
                              </span>
                              <span class="badge rounded-pill text-nowrap badge-sm bg-danger" id="state_[PK of JobApplication]">
                                  Candidature déclinée
                              </span>
                          </td>
                          <td>
                              27/11/2024
                          </td>
                          <td>
                              Candidature spontanée
                          </td>
                          <td>
                              Vous
                          </td>
                          <td>
                              Le prescripteur habilité n'a pas renseigné de critères.
                          </td>
                          <td>
                              <span class="badge badge-sm rounded-pill bg-success-lighter text-success">
                                  <i aria-hidden="true" class="ri-check-line">
                                  </i>
                                  Éligible à l’IAE
                              </span>
                              <span class="d-block">
                                  Éligibilité validée par un prescripteur habilité
                              </span>
                          </td>
                          <td class="text-end w-50px align-middle">
                              <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir sa candidature" data-bs-toggle="tooltip" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  <i aria-label="Gérer la candidature de Jane DOE" class="ri-arrow-drop-right-line fs-lg">
                                  </i>
                              </a>
                          </td>
                      </tr>
                      <tr class="align-top">
                          <th class="text-start w-50px" scope="row">
                              <input class="form-check-input" id="select-[PK of JobApplication]" name="selected-application" type="checkbox" value="[PK of JobApplication]"/>
                              <label class="visually-hidden" for="select-[PK of JobApplication]">
                                  Sélectionner cette candidature
                              </label>
                          </th>
                          <td>
                              <a class="btn-link" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  Jane DOE
                              </a>
                              <span class="d-block">
                                  35 -
                  Rennes
                              </span>
                              <span class="badge rounded-pill text-nowrap badge-sm bg-accent-03 text-primary" id="state_[PK of JobApplication]">
                                  Candidature à l'étude
                              </span>
                          </td>
                          <td>
                              27/11/2024
                          </td>
                          <td>
                              Candidature spontanée
                          </td>
                          <td>
                              Vous
                          </td>
                          <td>
                              <ul class="mb-0">
                                  <li>
                                      Allocataire ASS
                                  </li>
                                  <li>
                                      Bénéficiaire du RSA
                                  </li>
                              </ul>
                          </td>
                          <td>
                              <span class="badge badge-sm rounded-pill bg-success-lighter text-success">
                                  <i aria-hidden="true" class="ri-check-line">
                                  </i>
                                  Éligible à l’IAE
                              </span>
                              <span class="d-block">
                                  Éligibilité validée par votre entreprise
                              </span>
                          </td>
                          <td class="text-end w-50px align-middle">
                              <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir sa candidature" data-bs-toggle="tooltip" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  <i aria-label="Gérer la candidature de Jane DOE" class="ri-arrow-drop-right-line fs-lg">
                                  </i>
                              </a>
                          </td>
                      </tr>
                      <tr class="align-top">
                          <th class="text-start w-50px" scope="row">
                              <input class="form-check-input" id="select-[PK of JobApplication]" name="selected-application" type="checkbox" value="[PK of JobApplication]"/>
                              <label class="visually-hidden" for="select-[PK of JobApplication]">
                                  Sélectionner cette candidature
                              </label>
                          </th>
                          <td>
                              <a class="btn-link" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  Pas De DIAGNOSTIQUE
                              </a>
                              <span class="d-block">
                              </span>
                              <span class="badge rounded-pill text-nowrap badge-sm bg-info" id="state_[PK of JobApplication]">
                                  Nouvelle candidature
                              </span>
                          </td>
                          <td>
                              27/11/2024
                          </td>
                          <td>
                              Candidature spontanée
                          </td>
                          <td>
                              Vous
                          </td>
                          <td>
                              <i class="text-disabled">
                                  Aucun critère sélectionné
                              </i>
                          </td>
                          <td>
                              <span class="badge badge-sm rounded-pill bg-warning-lighter text-warning">
                                  <i aria-hidden="true" class="ri-error-warning-line">
                                  </i>
                                  Éligibilité IAE à valider
                              </span>
                              <span class="d-block">
                                  Un diagnostic doit être réalisé
                              </span>
                          </td>
                          <td class="text-end w-50px align-middle">
                              <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir sa candidature" data-bs-toggle="tooltip" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list%3Fdisplay%3Dtable">
                                  <i aria-label="Gérer la candidature de Pas De DIAGNOSTIQUE" class="ri-arrow-drop-right-line fs-lg">
                                  </i>
                              </a>
                          </td>
                      </tr>
                  </tbody>
              </table>
          </form>
      </div>
  </section>
  
  '''
# ---
