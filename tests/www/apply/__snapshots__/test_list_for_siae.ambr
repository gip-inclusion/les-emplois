# serializer version: 1
# name: TestProcessListSiae.test_list_for_siae[view queries]
  dict({
    'num_queries': 30,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_companymembership"."id",
                 "companies_companymembership"."user_id",
                 "companies_companymembership"."joined_at",
                 "companies_companymembership"."is_admin",
                 "companies_companymembership"."is_active",
                 "companies_companymembership"."created_at",
                 "companies_companymembership"."updated_at",
                 "companies_companymembership"."company_id",
                 "companies_companymembership"."updated_by_id",
                 "companies_companymembership"."notifications"
          FROM "companies_companymembership"
          WHERE ("companies_companymembership"."user_id" = %s
                 AND "companies_companymembership"."is_active")
          ORDER BY "companies_companymembership"."created_at" ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 EXISTS
            (SELECT %s AS "a"
             FROM "companies_siaeconvention" U0
             WHERE (U0."deactivated_at" >= %s
                    AND U0."id" = ("companies_company"."convention_id"))
             LIMIT 1) AS "has_convention_in_grace_period",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at"
          FROM "companies_company"
          INNER JOIN "companies_companymembership" ON ("companies_company"."id" = "companies_companymembership"."company_id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          WHERE (NOT ("companies_company"."siret" = %s)
                 AND "companies_companymembership"."user_id" = %s
                 AND "companies_company"."id" IN (%s)
                 AND (NOT ("companies_company"."kind" IN (%s,
                                                          %s,
                                                          %s,
                                                          %s,
                                                          %s))
                      OR "companies_company"."source" = %s
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."id" = ("companies_company"."convention_id")
                                AND U0."is_active")
                         LIMIT 1)
                      OR EXISTS
                        (SELECT %s AS "a"
                         FROM "companies_siaeconvention" U0
                         WHERE (U0."deactivated_at" >= %s
                                AND U0."id" = ("companies_company"."convention_id"))
                         LIMIT 1)))
          ORDER BY RANDOM() ASC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*) AS "__count"
          FROM "job_applications_jobapplication"
          WHERE ("job_applications_jobapplication"."to_company_id" = %s
                 AND "job_applications_jobapplication"."state" IN (%s,
                                                                   %s,
                                                                   %s))
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_link",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."hiring_without_approval",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "users_user" ON ("job_applications_jobapplication"."sender_id" = "users_user"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."job_seeker_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_link",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."hiring_without_approval",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "users_user"."id",
                             "users_user"."password",
                             "users_user"."last_login",
                             "users_user"."is_superuser",
                             "users_user"."username",
                             "users_user"."first_name",
                             "users_user"."last_name",
                             "users_user"."is_staff",
                             "users_user"."is_active",
                             "users_user"."date_joined",
                             "users_user"."address_line_1",
                             "users_user"."address_line_2",
                             "users_user"."post_code",
                             "users_user"."city",
                             "users_user"."department",
                             "users_user"."coords",
                             "users_user"."geocoding_score",
                             "users_user"."geocoding_updated_at",
                             "users_user"."ban_api_resolved_address",
                             "users_user"."insee_city_id",
                             "users_user"."title",
                             "users_user"."email",
                             "users_user"."phone",
                             "users_user"."kind",
                             "users_user"."identity_provider",
                             "users_user"."has_completed_welcoming_tour",
                             "users_user"."created_by_id",
                             "users_user"."external_data_source_history",
                             "users_user"."last_checked_at",
                             "users_user"."public_id",
                             "users_user"."address_filled_at",
                             "users_user"."first_login"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."job_seeker_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_administrativecriteria[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at",
                 "eligibility_administrativecriteria"."created_by_id"
          FROM "eligibility_administrativecriteria"
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_link",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."hiring_without_approval",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at"
          FROM "job_applications_jobapplication"
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."created_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          'CompanyFilterJobApplicationsForm._get_choices_for_jobs[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text"
          FROM "jobs_appellation"
          WHERE "jobs_appellation"."code" IN (%s,
                                              %s)
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.get_sender_prescriber_organization_choices[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_prescriber_organization_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_link",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."hiring_without_approval",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             "prescribers_prescriberorganization"."id",
                             "prescribers_prescriberorganization"."address_line_1",
                             "prescribers_prescriberorganization"."address_line_2",
                             "prescribers_prescriberorganization"."post_code",
                             "prescribers_prescriberorganization"."city",
                             "prescribers_prescriberorganization"."department",
                             "prescribers_prescriberorganization"."coords",
                             "prescribers_prescriberorganization"."geocoding_score",
                             "prescribers_prescriberorganization"."geocoding_updated_at",
                             "prescribers_prescriberorganization"."ban_api_resolved_address",
                             "prescribers_prescriberorganization"."insee_city_id",
                             "prescribers_prescriberorganization"."name",
                             "prescribers_prescriberorganization"."created_at",
                             "prescribers_prescriberorganization"."updated_at",
                             "prescribers_prescriberorganization"."uid",
                             "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                             "prescribers_prescriberorganization"."automatic_geocoding_update",
                             "prescribers_prescriberorganization"."siret",
                             "prescribers_prescriberorganization"."is_head_office",
                             "prescribers_prescriberorganization"."kind",
                             "prescribers_prescriberorganization"."is_brsa",
                             "prescribers_prescriberorganization"."phone",
                             "prescribers_prescriberorganization"."email",
                             "prescribers_prescriberorganization"."website",
                             "prescribers_prescriberorganization"."description",
                             "prescribers_prescriberorganization"."is_authorized",
                             "prescribers_prescriberorganization"."code_safir_pole_emploi",
                             "prescribers_prescriberorganization"."created_by_id",
                             "prescribers_prescriberorganization"."authorization_status",
                             "prescribers_prescriberorganization"."authorization_updated_at",
                             "prescribers_prescriberorganization"."authorization_updated_by_id"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_prescriber_organization_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'JobApplicationQuerySet.get_unique_fk_objects[job_applications/models.py]',
          'CompanyFilterJobApplicationsForm.get_sender_companies_choices[www/apply/forms.py]',
          'CompanyFilterJobApplicationsForm.__init__[www/apply/forms.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT DISTINCT ON ("job_applications_jobapplication"."sender_company_id") "job_applications_jobapplication"."id",
                             "job_applications_jobapplication"."job_seeker_id",
                             "job_applications_jobapplication"."eligibility_diagnosis_id",
                             "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                             "job_applications_jobapplication"."create_employee_record",
                             "job_applications_jobapplication"."resume_link",
                             "job_applications_jobapplication"."sender_id",
                             "job_applications_jobapplication"."sender_kind",
                             "job_applications_jobapplication"."sender_company_id",
                             "job_applications_jobapplication"."sender_prescriber_organization_id",
                             "job_applications_jobapplication"."to_company_id",
                             "job_applications_jobapplication"."state",
                             "job_applications_jobapplication"."archived_at",
                             "job_applications_jobapplication"."archived_by_id",
                             "job_applications_jobapplication"."hired_job_id",
                             "job_applications_jobapplication"."message",
                             "job_applications_jobapplication"."answer",
                             "job_applications_jobapplication"."answer_to_prescriber",
                             "job_applications_jobapplication"."refusal_reason",
                             "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                             "job_applications_jobapplication"."hiring_start_at",
                             "job_applications_jobapplication"."hiring_end_at",
                             "job_applications_jobapplication"."hiring_without_approval",
                             "job_applications_jobapplication"."origin",
                             "job_applications_jobapplication"."approval_id",
                             "job_applications_jobapplication"."approval_delivery_mode",
                             "job_applications_jobapplication"."approval_number_sent_by_email",
                             "job_applications_jobapplication"."approval_number_sent_at",
                             "job_applications_jobapplication"."approval_manually_delivered_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_by_id",
                             "job_applications_jobapplication"."approval_manually_refused_at",
                             "job_applications_jobapplication"."transferred_at",
                             "job_applications_jobapplication"."transferred_by_id",
                             "job_applications_jobapplication"."transferred_from_id",
                             "job_applications_jobapplication"."created_at",
                             "job_applications_jobapplication"."updated_at",
                             "job_applications_jobapplication"."processed_at",
                             "job_applications_jobapplication"."prehiring_guidance_days",
                             "job_applications_jobapplication"."contract_type",
                             "job_applications_jobapplication"."nb_hours_per_week",
                             "job_applications_jobapplication"."contract_type_details",
                             "job_applications_jobapplication"."qualification_type",
                             "job_applications_jobapplication"."qualification_level",
                             "job_applications_jobapplication"."planned_training_hours",
                             "job_applications_jobapplication"."inverted_vae_contract",
                             "job_applications_jobapplication"."diagoriente_invite_sent_at",
                             T3."id",
                             T3."address_line_1",
                             T3."address_line_2",
                             T3."post_code",
                             T3."city",
                             T3."department",
                             T3."coords",
                             T3."geocoding_score",
                             T3."geocoding_updated_at",
                             T3."ban_api_resolved_address",
                             T3."insee_city_id",
                             T3."name",
                             T3."created_at",
                             T3."updated_at",
                             T3."uid",
                             T3."active_members_email_reminder_last_sent_at",
                             T3."automatic_geocoding_update",
                             T3."siret",
                             T3."naf",
                             T3."kind",
                             T3."brand",
                             T3."phone",
                             T3."email",
                             T3."auth_email",
                             T3."website",
                             T3."description",
                             T3."provided_support",
                             T3."source",
                             T3."created_by_id",
                             T3."block_job_applications",
                             T3."job_applications_blocked_at",
                             T3."convention_id",
                             T3."job_app_score",
                             T3."is_searchable",
                             T3."rdv_solidarites_id",
                             T3."fields_history"
          FROM "job_applications_jobapplication"
          LEFT OUTER JOIN "companies_company" T3 ON ("job_applications_jobapplication"."sender_company_id" = T3."id")
          WHERE "job_applications_jobapplication"."to_company_id" = %s
          ORDER BY "job_applications_jobapplication"."sender_company_id" ASC
        ''',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT COUNT(*)
          FROM
            (SELECT EXISTS
               (SELECT %s AS "a"
                FROM "rdv_insertion_invitationrequest" U0
                WHERE (U0."company_id" = ("job_applications_jobapplication"."to_company_id")
                       AND U0."created_at" > %s
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                LIMIT 1) AS "has_pending_rdv_insertion_invitation_request",
                    COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                               (SELECT U0."id"
                                FROM "eligibility_eligibilitydiagnosis" U0
                                WHERE (U0."expires_at" > %s
                                       AND (U0."author_kind" = %s
                                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                ORDER BY U0."created_at" DESC
                                LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
          
               (SELECT U0."id"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE (U0."expires_at" > %s
                       AND (U0."author_kind" = %s
                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                ORDER BY U0."created_at" DESC
                LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                    GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
               (SELECT U1."start_at"
                FROM "rdv_insertion_participation" U0
                INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                       AND U1."start_at" > %s
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                       AND U0."status" = %s)
                ORDER BY U1."start_at" ASC
                LIMIT 1) AS "next_appointment_start_at"
             FROM "job_applications_jobapplication"
             LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
             INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
             LEFT OUTER JOIN "rdv_insertion_participation" ON ("users_user"."id" = "rdv_insertion_participation"."job_seeker_id")
             LEFT OUTER JOIN "rdv_insertion_appointment" ON ("rdv_insertion_participation"."appointment_id" = "rdv_insertion_appointment"."id")
             WHERE ("job_applications_jobapplication"."to_company_id" = %s
                    AND "job_applications_jobapplication"."archived_at" IS NULL)
             GROUP BY "job_applications_jobapplication"."id",
                      2) subquery
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_link",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."hiring_without_approval",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
            (SELECT U0."id"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE (U0."expires_at" > %s
                    AND (U0."author_kind" = %s
                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
             ORDER BY U0."created_at" DESC
             LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                 COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                            (SELECT U0."id"
                             FROM "eligibility_eligibilitydiagnosis" U0
                             WHERE (U0."expires_at" > %s
                                    AND (U0."author_kind" = %s
                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                             ORDER BY U0."created_at" DESC
                             LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
                 EXISTS
            (SELECT %s AS "a"
             FROM "rdv_insertion_invitationrequest" U0
             WHERE (U0."company_id" = ("job_applications_jobapplication"."to_company_id")
                    AND U0."created_at" > %s
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
             LIMIT 1) AS "has_pending_rdv_insertion_invitation_request",
          
            (SELECT U1."start_at"
             FROM "rdv_insertion_participation" U0
             INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
             WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                    AND U1."start_at" > %s
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                    AND U0."status" = %s)
             ORDER BY U1."start_at" ASC
             LIMIT 1) AS "next_appointment_start_at",
                 (COUNT("rdv_insertion_participation"."id") FILTER (
                                                                    WHERE ("rdv_insertion_appointment"."company_id" = %s
                                                                           AND "rdv_insertion_appointment"."start_at" > %s
                                                                           AND "rdv_insertion_participation"."status" = %s)) - %s) AS "other_appointments_count",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."ata_allocation_since",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 T10."id",
                 T10."password",
                 T10."last_login",
                 T10."is_superuser",
                 T10."username",
                 T10."first_name",
                 T10."last_name",
                 T10."is_staff",
                 T10."is_active",
                 T10."date_joined",
                 T10."address_line_1",
                 T10."address_line_2",
                 T10."post_code",
                 T10."city",
                 T10."department",
                 T10."coords",
                 T10."geocoding_score",
                 T10."geocoding_updated_at",
                 T10."ban_api_resolved_address",
                 T10."insee_city_id",
                 T10."title",
                 T10."email",
                 T10."phone",
                 T10."kind",
                 T10."identity_provider",
                 T10."has_completed_welcoming_tour",
                 T10."created_by_id",
                 T10."external_data_source_history",
                 T10."last_checked_at",
                 T10."public_id",
                 T10."address_filled_at",
                 T10."first_login",
                 T11."id",
                 T11."address_line_1",
                 T11."address_line_2",
                 T11."post_code",
                 T11."city",
                 T11."department",
                 T11."coords",
                 T11."geocoding_score",
                 T11."geocoding_updated_at",
                 T11."ban_api_resolved_address",
                 T11."insee_city_id",
                 T11."name",
                 T11."created_at",
                 T11."updated_at",
                 T11."uid",
                 T11."active_members_email_reminder_last_sent_at",
                 T11."automatic_geocoding_update",
                 T11."siret",
                 T11."naf",
                 T11."kind",
                 T11."brand",
                 T11."phone",
                 T11."email",
                 T11."auth_email",
                 T11."website",
                 T11."description",
                 T11."provided_support",
                 T11."source",
                 T11."created_by_id",
                 T11."block_job_applications",
                 T11."job_applications_blocked_at",
                 T11."convention_id",
                 T11."job_app_score",
                 T11."is_searchable",
                 T11."rdv_solidarites_id",
                 T11."fields_history",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."is_head_office",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."is_authorized",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind"
          FROM "job_applications_jobapplication"
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          LEFT OUTER JOIN "rdv_insertion_participation" ON ("users_user"."id" = "rdv_insertion_participation"."job_seeker_id")
          LEFT OUTER JOIN "rdv_insertion_appointment" ON ("rdv_insertion_participation"."appointment_id" = "rdv_insertion_appointment"."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON ("users_user"."id" = "users_jobseekerprofile"."user_id")
          LEFT OUTER JOIN "users_user" T10 ON ("job_applications_jobapplication"."sender_id" = T10."id")
          LEFT OUTER JOIN "companies_company" T11 ON ("job_applications_jobapplication"."sender_company_id" = T11."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          LEFT OUTER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          WHERE ("job_applications_jobapplication"."to_company_id" = %s
                 AND "job_applications_jobapplication"."archived_at" IS NULL)
          GROUP BY "job_applications_jobapplication"."id",
                   49,
                   "users_user"."id",
                   "users_jobseekerprofile"."user_id",
                   T10."id",
                   T11."id",
                   "prescribers_prescriberorganization"."id",
                   "companies_company"."id",
                   "companies_siaeconvention"."id",
                   "approvals_approval"."id"
          ORDER BY "job_applications_jobapplication"."created_at" DESC,
                   "job_applications_jobapplication"."id" ASC
          LIMIT 3
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "jobs_appellation"."updated_at",
                 "jobs_appellation"."code",
                 "jobs_appellation"."name",
                 "jobs_appellation"."rome_id",
                 "jobs_appellation"."full_text"
          FROM "jobs_appellation"
          WHERE "jobs_appellation"."code" IN (%s,
                                              %s)
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "cities_city"."id",
                 "cities_city"."name",
                 "cities_city"."slug",
                 "cities_city"."department",
                 "cities_city"."post_codes",
                 "cities_city"."code_insee",
                 "cities_city"."coords",
                 "cities_city"."edition_mode"
          FROM "cities_city"
          WHERE "cities_city"."id" IN (%s)
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history"
          FROM "companies_company"
          WHERE "companies_company"."id" IN (%s)
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind"
          FROM "approvals_approval"
          WHERE "approvals_approval"."user_id" IN (%s,
                                                   %s,
                                                   %s)
          ORDER BY "approvals_approval"."start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          '_add_administrative_criteria[www/apply/views/list_views.py]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "eligibility_selectedadministrativecriteria"."id",
                 "eligibility_selectedadministrativecriteria"."certified",
                 "eligibility_selectedadministrativecriteria"."certified_at",
                 "eligibility_selectedadministrativecriteria"."certification_period",
                 "eligibility_selectedadministrativecriteria"."data_returned_by_api",
                 "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id",
                 "eligibility_selectedadministrativecriteria"."administrative_criteria_id",
                 "eligibility_selectedadministrativecriteria"."created_at",
                 "eligibility_administrativecriteria"."id",
                 "eligibility_administrativecriteria"."kind",
                 "eligibility_administrativecriteria"."level",
                 "eligibility_administrativecriteria"."name",
                 "eligibility_administrativecriteria"."desc",
                 "eligibility_administrativecriteria"."written_proof",
                 "eligibility_administrativecriteria"."written_proof_url",
                 "eligibility_administrativecriteria"."written_proof_validity",
                 "eligibility_administrativecriteria"."ui_rank",
                 "eligibility_administrativecriteria"."created_at",
                 "eligibility_administrativecriteria"."created_by_id"
          FROM "eligibility_selectedadministrativecriteria"
          INNER JOIN "eligibility_administrativecriteria" ON ("eligibility_selectedadministrativecriteria"."administrative_criteria_id" = "eligibility_administrativecriteria"."id")
          WHERE "eligibility_selectedadministrativecriteria"."eligibility_diagnosis_id" IN (%s,
                                                                                            %s)
          ORDER BY "eligibility_administrativecriteria"."level" ASC,
                   "eligibility_administrativecriteria"."name" ASC
        ''',
      }),
      dict({
        'origin': list([
          'Company.has_admin[common_apps/organizations/models.py]',
          'Company.convention_can_be_accessed_by[companies/models.py]',
          'nav[utils/templatetags/nav.py]',
          'InclusionNode[layout/_header_authenticated.html]',
          'IncludeNode[layout/base.html]',
          'IfNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT %s AS "a"
          FROM "users_user"
          INNER JOIN "companies_companymembership" ON ("users_user"."id" = "companies_companymembership"."user_id")
          WHERE ("companies_companymembership"."id" IN
                   (SELECT U0."id"
                    FROM "companies_companymembership" U0
                    INNER JOIN "users_user" U2 ON (U0."user_id" = U2."id")
                    WHERE (U0."company_id" = %s
                           AND U2."is_active"
                           AND U0."is_active"
                           AND U0."is_admin"
                           AND U2."is_active"))
                 AND "users_user"."id" = %s)
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'CommonApprovalQuerySet.first[<site-packages>/django/db/models/query.py]',
          'User.latest_pe_approval[users/models.py]',
          'User.latest_common_approval[users/models.py]',
          'WithNode[apply/includes/list_card_body.html]',
          'IfNode[apply/includes/list_card_body.html]',
          'IfNode[apply/includes/list_card_body.html]',
          'IncludeNode[apply/includes/list_job_applications.html]',
          'ForNode[apply/includes/list_job_applications.html]',
          'IfNode[apply/includes/list_job_applications.html]',
          'IncludeNode[apply/list_for_siae.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "approvals_poleemploiapproval"."id",
                 "approvals_poleemploiapproval"."start_at",
                 "approvals_poleemploiapproval"."end_at",
                 "approvals_poleemploiapproval"."created_at",
                 "approvals_poleemploiapproval"."pe_notification_status",
                 "approvals_poleemploiapproval"."pe_notification_time",
                 "approvals_poleemploiapproval"."pe_notification_endpoint",
                 "approvals_poleemploiapproval"."pe_notification_exit_code",
                 "approvals_poleemploiapproval"."pe_structure_code",
                 "approvals_poleemploiapproval"."number",
                 "approvals_poleemploiapproval"."pole_emploi_id",
                 "approvals_poleemploiapproval"."first_name",
                 "approvals_poleemploiapproval"."last_name",
                 "approvals_poleemploiapproval"."birth_name",
                 "approvals_poleemploiapproval"."birthdate",
                 "approvals_poleemploiapproval"."nir",
                 "approvals_poleemploiapproval"."ntt_nia",
                 "approvals_poleemploiapproval"."siae_siret",
                 "approvals_poleemploiapproval"."siae_kind"
          FROM "approvals_poleemploiapproval"
          WHERE ("approvals_poleemploiapproval"."nir" = %s
                 AND NOT ("approvals_poleemploiapproval"."number" IN
                            (SELECT U0."number"
                             FROM "approvals_approval" U0
                             WHERE U0."user_id" = %s)))
          ORDER BY "approvals_poleemploiapproval"."end_at" DESC,
                   "approvals_poleemploiapproval"."start_at" ASC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'CommonApprovalQuerySet.first[<site-packages>/django/db/models/query.py]',
          'User.latest_pe_approval[users/models.py]',
          'User.latest_common_approval[users/models.py]',
          'WithNode[apply/includes/list_card_body.html]',
          'IfNode[apply/includes/list_card_body.html]',
          'IfNode[apply/includes/list_card_body.html]',
          'IncludeNode[apply/includes/list_job_applications.html]',
          'ForNode[apply/includes/list_job_applications.html]',
          'IfNode[apply/includes/list_job_applications.html]',
          'IncludeNode[apply/list_for_siae.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "approvals_poleemploiapproval"."id",
                 "approvals_poleemploiapproval"."start_at",
                 "approvals_poleemploiapproval"."end_at",
                 "approvals_poleemploiapproval"."created_at",
                 "approvals_poleemploiapproval"."pe_notification_status",
                 "approvals_poleemploiapproval"."pe_notification_time",
                 "approvals_poleemploiapproval"."pe_notification_endpoint",
                 "approvals_poleemploiapproval"."pe_notification_exit_code",
                 "approvals_poleemploiapproval"."pe_structure_code",
                 "approvals_poleemploiapproval"."number",
                 "approvals_poleemploiapproval"."pole_emploi_id",
                 "approvals_poleemploiapproval"."first_name",
                 "approvals_poleemploiapproval"."last_name",
                 "approvals_poleemploiapproval"."birth_name",
                 "approvals_poleemploiapproval"."birthdate",
                 "approvals_poleemploiapproval"."nir",
                 "approvals_poleemploiapproval"."ntt_nia",
                 "approvals_poleemploiapproval"."siae_siret",
                 "approvals_poleemploiapproval"."siae_kind"
          FROM "approvals_poleemploiapproval"
          WHERE ("approvals_poleemploiapproval"."nir" = %s
                 AND NOT ("approvals_poleemploiapproval"."number" IN
                            (SELECT U0."number"
                             FROM "approvals_approval" U0
                             WHERE U0."user_id" = %s)))
          ORDER BY "approvals_poleemploiapproval"."end_at" DESC,
                   "approvals_poleemploiapproval"."start_at" ASC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'CommonApprovalQuerySet.first[<site-packages>/django/db/models/query.py]',
          'User.latest_pe_approval[users/models.py]',
          'User.latest_common_approval[users/models.py]',
          'WithNode[apply/includes/list_card_body.html]',
          'IfNode[apply/includes/list_card_body.html]',
          'IfNode[apply/includes/list_card_body.html]',
          'IncludeNode[apply/includes/list_job_applications.html]',
          'ForNode[apply/includes/list_job_applications.html]',
          'IfNode[apply/includes/list_job_applications.html]',
          'IncludeNode[apply/list_for_siae.html]',
          'BlockNode[layout/base.html]',
          'ExtendsNode[apply/list_for_siae.html]',
          'list_for_siae[www/apply/views/list_views.py]',
        ]),
        'sql': '''
          SELECT "approvals_poleemploiapproval"."id",
                 "approvals_poleemploiapproval"."start_at",
                 "approvals_poleemploiapproval"."end_at",
                 "approvals_poleemploiapproval"."created_at",
                 "approvals_poleemploiapproval"."pe_notification_status",
                 "approvals_poleemploiapproval"."pe_notification_time",
                 "approvals_poleemploiapproval"."pe_notification_endpoint",
                 "approvals_poleemploiapproval"."pe_notification_exit_code",
                 "approvals_poleemploiapproval"."pe_structure_code",
                 "approvals_poleemploiapproval"."number",
                 "approvals_poleemploiapproval"."pole_emploi_id",
                 "approvals_poleemploiapproval"."first_name",
                 "approvals_poleemploiapproval"."last_name",
                 "approvals_poleemploiapproval"."birth_name",
                 "approvals_poleemploiapproval"."birthdate",
                 "approvals_poleemploiapproval"."nir",
                 "approvals_poleemploiapproval"."ntt_nia",
                 "approvals_poleemploiapproval"."siae_siret",
                 "approvals_poleemploiapproval"."siae_kind"
          FROM "approvals_poleemploiapproval"
          WHERE ("approvals_poleemploiapproval"."nir" = %s
                 AND NOT ("approvals_poleemploiapproval"."number" IN
                            (SELECT U0."number"
                             FROM "approvals_approval" U0
                             WHERE U0."user_id" = %s)))
          ORDER BY "approvals_poleemploiapproval"."end_at" DESC,
                   "approvals_poleemploiapproval"."start_at" ASC
          LIMIT 1
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Session.save[<site-packages>/django/db/models/base.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          UPDATE "django_session"
          SET "session_data" = %s,
              "expire_date" = %s
          WHERE "django_session"."session_key" = %s
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: test_list_for_siae_badge[no_eligibility_diag]
  '''
  <span class="badge badge-xs rounded-pill bg-warning-lighter text-warning">
              <i aria-hidden="true" class="ri-error-warning-line"></i>
              Éligibilité IAE à valider
          </span>
  '''
# ---
# name: test_list_for_siae_badge[with_approval]
  '''
  <span class="badge badge-xs rounded-pill bg-success-lighter text-success">
                  <i aria-hidden="true" class="ri-pass-valid-line"></i>
                  PASS IAE valide
              </span>
  '''
# ---
# name: test_list_for_siae_badge[with_eligibility_diag]
  '''
  <span class="badge badge-xs rounded-pill bg-success-lighter text-success">
              <i aria-hidden="true" class="ri-check-line"></i>
              Éligible à l’IAE
          </span>
  '''
# ---
# name: test_list_for_siae_exports
  '''
  <div class="c-info mb-3 mb-md-4" id="besoin-dun-chiffre">
                              <button aria-controls="collapseBesoinChiffre" aria-expanded="false" class="c-info__summary collapsed" data-bs-target="#collapseBesoinChiffre" data-bs-toggle="collapse" type="button">
                                  <span>Besoin d'un chiffre ?</span>
                              </button>
                              
                                  <div class="c-info__detail collapse" id="collapseBesoinChiffre">
                                      Accédez aux <a href="/stats/siae/hiring" rel="noopener" target="_blank">données de recrutement de votre structure</a> (non nominatives) compilées, calculées et mises à jour quotidiennement.
                                  </div>
                              
                          </div>
  '''
# ---
# name: test_list_for_siae_exports_download[for_snapshot]
  list([
    list([
      'Civilité candidat',
      'Nom candidat',
      'Prénom candidat',
      'Email candidat',
      'Téléphone candidat',
      'Date de naissance candidat',
      'Ville candidat',
      'Département candidat',
      'Nom structure employeur',
      'Type employeur',
      'Métiers',
      'Source de la candidature',
      'Nom organisation prescripteur',
      'Nom utilisateur prescripteur',
      'Date de la candidature',
      'Statut de la candidature',
      'Dates de début d’embauche',
      'Dates de fin d’embauche',
      'Motifs de refus',
      'Éligibilité IAE validée',
      'Eligible au contrôle',
      'Numéro PASS\xa0IAE',
      'Début PASS\xa0IAE',
      'Fin PASS\xa0IAE',
      'Statut PASS\xa0IAE',
    ]),
    list([
      'MME',
      'Doe',
      'Jane',
      'jane.doe@test.local',
      '0612345678',
      '01/01/1990',
      'Rennes',
      '35000',
      'Acme inc.',
      'EI',
      'Candidature spontanée',
      'Orienteur',
      '',
      'Pierre DUPONT',
      '18/08/2024',
      'Nouvelle candidature',
      '18/08/2024',
      '18/08/2026',
      '',
      'oui',
      'non',
      '',
      '',
      '',
      '',
    ]),
  ])
# ---
# name: test_list_for_siae_exports_download[no_eligibility_diag]
  list([
    list([
      'Civilité candidat',
      'Nom candidat',
      'Prénom candidat',
      'Email candidat',
      'Téléphone candidat',
      'Date de naissance candidat',
      'Ville candidat',
      'Département candidat',
      'Nom structure employeur',
      'Type employeur',
      'Métiers',
      'Source de la candidature',
      'Nom organisation prescripteur',
      'Nom utilisateur prescripteur',
      'Date de la candidature',
      'Statut de la candidature',
      'Dates de début d’embauche',
      'Dates de fin d’embauche',
      'Motifs de refus',
      'Éligibilité IAE validée',
      'Eligible au contrôle',
      'Numéro PASS\xa0IAE',
      'Début PASS\xa0IAE',
      'Fin PASS\xa0IAE',
      'Statut PASS\xa0IAE',
    ]),
    list([
      'MME',
      'Doe',
      'Jane',
      'jane.doe@test.local',
      '0612345678',
      '01/01/1990',
      'Rennes',
      '35000',
      'Acme inc.',
      'EI',
      'Candidature spontanée',
      'Orienteur',
      '',
      'Pierre DUPONT',
      '18/08/2024',
      'Nouvelle candidature',
      '18/08/2024',
      '18/08/2026',
      '',
      'non',
      'non',
      '',
      '',
      '',
      '',
    ]),
  ])
# ---
# name: test_list_for_siae_filter_for_different_kind[geiq]
  '''
  <div aria-labelledby="offcanvasApplyFiltersLabel" class="c-offcanvas-filters offcanvas offcanvas-end" id="offcanvasApplyFilters" tabindex="-1">
          <div class="offcanvas-header">
              <h4 class="mb-0 btn-ico" id="offcanvasApplyFiltersLabel">
                  <i aria-hidden="true" class="ri-sound-module-fill fw-medium"></i>
                  <span>Filtrer</span>
              </h4>
              <button aria-label="Fermer" class="btn-close" data-bs-dismiss="offcanvas" type="button"></button>
          </div>
          
  
  <div class="offcanvas-body" id="offcanvasApplyFiltersContent">
      
      <fieldset>
          <legend>
              <button aria-controls="collapseStates" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseStates" data-bs-toggle="collapse" type="button">
                  Statut
              </button>
          </legend>
          <div class="my-3 collapse" id="collapseStates">
              <ul>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_0" name="states" type="checkbox" value="new"/>
                              <label class="form-check-label" for="id_states_0">Nouvelle candidature</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_1" name="states" type="checkbox" value="processing"/>
                              <label class="form-check-label" for="id_states_1">Candidature à l'étude</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_2" name="states" type="checkbox" value="postponed"/>
                              <label class="form-check-label" for="id_states_2">Candidature en attente</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_3" name="states" type="checkbox" value="prior_to_hire"/>
                              <label class="form-check-label" for="id_states_3">Action préalable à l’embauche</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_4" name="states" type="checkbox" value="accepted"/>
                              <label class="form-check-label" for="id_states_4">Candidature acceptée</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_5" name="states" type="checkbox" value="refused"/>
                              <label class="form-check-label" for="id_states_5">Candidature déclinée</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_6" name="states" type="checkbox" value="cancelled"/>
                              <label class="form-check-label" for="id_states_6">Embauche annulée</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_7" name="states" type="checkbox" value="obsolete"/>
                              <label class="form-check-label" for="id_states_7">Embauché ailleurs</label>
                          </div>
                      </li>
                  
              </ul>
          </div>
      </fieldset>
  
  
      
          
  
          
  
  
  
          
  
  
  
          
  
  
      <hr/>
      <fieldset>
          <legend>
              <button aria-controls="collapseSenders" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseSenders" data-bs-toggle="collapse" type="button">
                  Émetteur
              </button>
          </legend>
          <div class="mt-3 collapse" id="collapseSenders">
              
                  <div class="form-group"><label class="form-label" for="id_senders">Nom de la personne</label><select class="form-select django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_senders" lang="fr" multiple="" name="senders">
  </select></div>
              
  
              
                  <div class="form-group"><label class="form-label" for="id_sender_prescriber_organizations">Nom de l'organisme prescripteur</label><select class="form-select django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_sender_prescriber_organizations" lang="fr" multiple="" name="sender_prescriber_organizations">
  </select></div>
              
  
              
                  <div class="form-group"><label class="form-label" for="id_sender_companies">Nom de l’employeur orienteur</label><select class="form-select django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_sender_companies" lang="fr" multiple="" name="sender_companies">
  </select></div>
              
          </div>
      </fieldset>
  
  
          
              <hr/>
              
  
  <fieldset>
      <legend>
          <button aria-controls="collapse-criteria" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-criteria" data-bs-toggle="collapse" type="button">Critères administratifs déclarés</button>
      </legend>
      <div class="mt-3 collapse" id="collapse-criteria"><div class="form-group"><select class="form-select django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_criteria" lang="fr" multiple="" name="criteria">
    <option value="1">Bénéficiaire du RSA</option>
  
    <option value="2">Allocataire ASS</option>
  
    <option value="3">Allocataire AAH</option>
  
    <option value="4">DETLD (+ 24 mois)</option>
  
    <option value="5">Niveau d'étude 3 (CAP, BEP) ou infra</option>
  
    <option value="6">Senior (+50 ans)</option>
  
    <option value="7">Jeune (-26 ans)</option>
  
    <option value="8">Sortant de l'ASE</option>
  
    <option value="9">DELD (12-24 mois)</option>
  
    <option value="10">Travailleur handicapé</option>
  
    <option value="11">Parent isolé</option>
  
    <option value="12">Personne sans hébergement ou hébergée ou ayant un parcours de rue</option>
  
    <option value="13">Réfugié statutaire, bénéficiaire d'une protection temporaire, protégé subsidiaire ou demandeur d'asile</option>
  
    <option value="14">Résident ZRR</option>
  
    <option value="15">Résident QPV</option>
  
    <option value="16">Sortant de détention ou personne placée sous main de justice</option>
  
    <option value="17">Maîtrise de la langue française</option>
  
    <option value="18">Mobilité</option>
  
  </select></div></div>
  </fieldset>
  
          
          
          
  
  
  
          
          
          <hr/>
          
          <fieldset>
              <legend>
                  <button aria-controls="collapse-archived" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-archived" data-bs-toggle="collapse" type="button">
                      Type de candidature <span class="badge badge-sm rounded-pill bg-important">Nouveau</span>
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapse-archived">
                  <div class="mb-3">
                      <i>En savoir plus sur les types de candidatures <a aria-label="Documentation des types de candidatures" href="https://aide.emplois.inclusion.beta.gouv.fr/hc/fr/articles/27110481864593--Archiver-une-candidature" rel="noopener" target="_blank">dans la documentation</a>.</i>
                  </div>
                  <div class="form-group"><div class="" id="id_archived">
      
          
          
              <div class="form-check">
                  <input checked="checked" class="form-check-input" id="id_archived_0" name="archived" type="radio" value=""/>
                  <label class="form-check-label" for="id_archived_0">Candidatures actives (affichage par défaut)</label>
              </div>
          
      
          
          
              <div class="form-check">
                  <input class="form-check-input" id="id_archived_1" name="archived" type="radio" value="archived"/>
                  <label class="form-check-label" for="id_archived_1">Candidatures archivées</label>
              </div>
          
      
          
          
              <div class="form-check">
                  <input class="form-check-input" id="id_archived_2" name="archived" type="radio" value="all"/>
                  <label class="form-check-label" for="id_archived_2">Toutes les candidatures</label>
              </div>
          
      
  </div></div>
              </div>
          </fieldset>
      
      
  
  <hr/>
  <fieldset>
      <legend>
          <button aria-controls="collapseDate" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseDate" data-bs-toggle="collapse" type="button">
              Date d'envoi de la candidature
          </button>
      </legend>
      <div class="mt-3 collapse" id="collapseDate">
          <div class="form-group"><label class="form-label" for="id_start_date">À partir du</label><duet-date-picker class="" identifier="id_start_date" name="start_date" placeholder="À partir du"></duet-date-picker></div>
          <div class="form-group"><label class="form-label" for="id_end_date">Jusqu'au</label><duet-date-picker class="" identifier="id_end_date" name="end_date" placeholder="Jusqu'au"></duet-date-picker></div>
      </div>
  </fieldset>
  
  </div>
  
          <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
      <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">Voir</button>
      
  
  
      
  
  
      
  
  
  </div>
  
      </div>
  '''
# ---
# name: test_list_for_siae_filter_for_different_kind[iae]
  '''
  <div aria-labelledby="offcanvasApplyFiltersLabel" class="c-offcanvas-filters offcanvas offcanvas-end" id="offcanvasApplyFilters" tabindex="-1">
          <div class="offcanvas-header">
              <h4 class="mb-0 btn-ico" id="offcanvasApplyFiltersLabel">
                  <i aria-hidden="true" class="ri-sound-module-fill fw-medium"></i>
                  <span>Filtrer</span>
              </h4>
              <button aria-label="Fermer" class="btn-close" data-bs-dismiss="offcanvas" type="button"></button>
          </div>
          
  
  <div class="offcanvas-body" id="offcanvasApplyFiltersContent">
      
      <fieldset>
          <legend>
              <button aria-controls="collapseStates" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseStates" data-bs-toggle="collapse" type="button">
                  Statut
              </button>
          </legend>
          <div class="my-3 collapse" id="collapseStates">
              <ul>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_0" name="states" type="checkbox" value="new"/>
                              <label class="form-check-label" for="id_states_0">Nouvelle candidature</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_1" name="states" type="checkbox" value="processing"/>
                              <label class="form-check-label" for="id_states_1">Candidature à l'étude</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_2" name="states" type="checkbox" value="postponed"/>
                              <label class="form-check-label" for="id_states_2">Candidature en attente</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_3" name="states" type="checkbox" value="accepted"/>
                              <label class="form-check-label" for="id_states_3">Candidature acceptée</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_4" name="states" type="checkbox" value="refused"/>
                              <label class="form-check-label" for="id_states_4">Candidature déclinée</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_5" name="states" type="checkbox" value="cancelled"/>
                              <label class="form-check-label" for="id_states_5">Embauche annulée</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_6" name="states" type="checkbox" value="obsolete"/>
                              <label class="form-check-label" for="id_states_6">Embauché ailleurs</label>
                          </div>
                      </li>
                  
              </ul>
          </div>
      </fieldset>
  
  
      
          
  
          
  
  
  
          
  
  
  
          
  
  
      <hr/>
      <fieldset>
          <legend>
              <button aria-controls="collapseSenders" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseSenders" data-bs-toggle="collapse" type="button">
                  Émetteur
              </button>
          </legend>
          <div class="mt-3 collapse" id="collapseSenders">
              
                  <div class="form-group"><label class="form-label" for="id_senders">Nom de la personne</label><select class="form-select django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_senders" lang="fr" multiple="" name="senders">
  </select></div>
              
  
              
                  <div class="form-group"><label class="form-label" for="id_sender_prescriber_organizations">Nom de l'organisme prescripteur</label><select class="form-select django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_sender_prescriber_organizations" lang="fr" multiple="" name="sender_prescriber_organizations">
  </select></div>
              
  
              
                  <div class="form-group"><label class="form-label" for="id_sender_companies">Nom de l’employeur orienteur</label><select class="form-select django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_sender_companies" lang="fr" multiple="" name="sender_companies">
  </select></div>
              
          </div>
      </fieldset>
  
  
          
              <hr/>
              
  
  <fieldset>
      <legend>
          <button aria-controls="collapse-criteria" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-criteria" data-bs-toggle="collapse" type="button">Critères administratifs déclarés</button>
      </legend>
      <div class="mt-3 collapse" id="collapse-criteria"><div class="form-group"><select class="form-select django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_criteria" lang="fr" multiple="" name="criteria">
    <option value="1">Bénéficiaire du RSA</option>
  
    <option value="2">Allocataire ASS</option>
  
    <option value="3">Allocataire AAH</option>
  
    <option value="4">DETLD (+ 24 mois)</option>
  
    <option value="5">Niveau d'étude 3 (CAP, BEP) ou infra</option>
  
    <option value="6">Senior (+50 ans)</option>
  
    <option value="7">Jeune (-26 ans)</option>
  
    <option value="8">Sortant de l'ASE</option>
  
    <option value="9">DELD (12-24 mois)</option>
  
    <option value="10">Travailleur handicapé</option>
  
    <option value="11">Parent isolé</option>
  
    <option value="12">Personne sans hébergement ou hébergée ou ayant un parcours de rue</option>
  
    <option value="13">Réfugié statutaire, bénéficiaire d'une protection temporaire, protégé subsidiaire ou demandeur d'asile</option>
  
    <option value="14">Résident ZRR</option>
  
    <option value="15">Résident QPV</option>
  
    <option value="16">Sortant de détention ou personne placée sous main de justice</option>
  
    <option value="17">Maîtrise de la langue française</option>
  
    <option value="18">Mobilité</option>
  
  </select></div></div>
  </fieldset>
  
          
          
              <hr/>
              
  
  <fieldset>
      <legend>
          <button aria-controls="collapse-eligibility_validated" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-eligibility_validated" data-bs-toggle="collapse" type="button">Éligibilité IAE</button>
      </legend>
      <div class="mt-3 collapse" id="collapse-eligibility_validated"><div class="form-group"><div class="form-check"><input class="form-check-input" id="id_eligibility_validated" name="eligibility_validated" type="checkbox"/><label class="form-check-label" for="id_eligibility_validated">Éligibilité validée</label></div></div></div>
  </fieldset>
  
          
          
  
  
      <hr/>
      <fieldset>
          <legend>
              <button aria-controls="collapsePassIAE" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapsePassIAE" data-bs-toggle="collapse" type="button">
                  Statut du PASS IAE
              </button>
          </legend>
          <div class="my-3 collapse" id="collapsePassIAE">
              <ul>
                  <li><div class=""><div class="form-check"><input class="form-check-input" id="id_pass_iae_active" name="pass_iae_active" type="checkbox"/><label class="form-check-label" for="id_pass_iae_active">Actif</label></div></div></li>
                  <li><div class=""><div class="form-check"><input class="form-check-input" id="id_pass_iae_suspended" name="pass_iae_suspended" type="checkbox"/><label class="form-check-label" for="id_pass_iae_suspended">Suspendu</label></div></div></li>
              </ul>
          </div>
      </fieldset>
  
  
          
          
          <hr/>
          
          <fieldset>
              <legend>
                  <button aria-controls="collapse-archived" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-archived" data-bs-toggle="collapse" type="button">
                      Type de candidature <span class="badge badge-sm rounded-pill bg-important">Nouveau</span>
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapse-archived">
                  <div class="mb-3">
                      <i>En savoir plus sur les types de candidatures <a aria-label="Documentation des types de candidatures" href="https://aide.emplois.inclusion.beta.gouv.fr/hc/fr/articles/27110481864593--Archiver-une-candidature" rel="noopener" target="_blank">dans la documentation</a>.</i>
                  </div>
                  <div class="form-group"><div class="" id="id_archived">
      
          
          
              <div class="form-check">
                  <input checked="checked" class="form-check-input" id="id_archived_0" name="archived" type="radio" value=""/>
                  <label class="form-check-label" for="id_archived_0">Candidatures actives (affichage par défaut)</label>
              </div>
          
      
          
          
              <div class="form-check">
                  <input class="form-check-input" id="id_archived_1" name="archived" type="radio" value="archived"/>
                  <label class="form-check-label" for="id_archived_1">Candidatures archivées</label>
              </div>
          
      
          
          
              <div class="form-check">
                  <input class="form-check-input" id="id_archived_2" name="archived" type="radio" value="all"/>
                  <label class="form-check-label" for="id_archived_2">Toutes les candidatures</label>
              </div>
          
      
  </div></div>
              </div>
          </fieldset>
      
      
  
  <hr/>
  <fieldset>
      <legend>
          <button aria-controls="collapseDate" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseDate" data-bs-toggle="collapse" type="button">
              Date d'envoi de la candidature
          </button>
      </legend>
      <div class="mt-3 collapse" id="collapseDate">
          <div class="form-group"><label class="form-label" for="id_start_date">À partir du</label><duet-date-picker class="" identifier="id_start_date" name="start_date" placeholder="À partir du"></duet-date-picker></div>
          <div class="form-group"><label class="form-label" for="id_end_date">Jusqu'au</label><duet-date-picker class="" identifier="id_end_date" name="end_date" placeholder="Jusqu'au"></duet-date-picker></div>
      </div>
  </fieldset>
  
  </div>
  
          <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
      <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">Voir</button>
      
  
  
      
  
  
      
  
  
  </div>
  
      </div>
  '''
# ---
# name: test_list_for_siae_filter_for_different_kind[non_iae]
  '''
  <div aria-labelledby="offcanvasApplyFiltersLabel" class="c-offcanvas-filters offcanvas offcanvas-end" id="offcanvasApplyFilters" tabindex="-1">
          <div class="offcanvas-header">
              <h4 class="mb-0 btn-ico" id="offcanvasApplyFiltersLabel">
                  <i aria-hidden="true" class="ri-sound-module-fill fw-medium"></i>
                  <span>Filtrer</span>
              </h4>
              <button aria-label="Fermer" class="btn-close" data-bs-dismiss="offcanvas" type="button"></button>
          </div>
          
  
  <div class="offcanvas-body" id="offcanvasApplyFiltersContent">
      
      <fieldset>
          <legend>
              <button aria-controls="collapseStates" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseStates" data-bs-toggle="collapse" type="button">
                  Statut
              </button>
          </legend>
          <div class="my-3 collapse" id="collapseStates">
              <ul>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_0" name="states" type="checkbox" value="new"/>
                              <label class="form-check-label" for="id_states_0">Nouvelle candidature</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_1" name="states" type="checkbox" value="processing"/>
                              <label class="form-check-label" for="id_states_1">Candidature à l'étude</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_2" name="states" type="checkbox" value="postponed"/>
                              <label class="form-check-label" for="id_states_2">Candidature en attente</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_3" name="states" type="checkbox" value="accepted"/>
                              <label class="form-check-label" for="id_states_3">Candidature acceptée</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_4" name="states" type="checkbox" value="refused"/>
                              <label class="form-check-label" for="id_states_4">Candidature déclinée</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_5" name="states" type="checkbox" value="cancelled"/>
                              <label class="form-check-label" for="id_states_5">Embauche annulée</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_6" name="states" type="checkbox" value="obsolete"/>
                              <label class="form-check-label" for="id_states_6">Embauché ailleurs</label>
                          </div>
                      </li>
                  
              </ul>
          </div>
      </fieldset>
  
  
      
          
  
          
  
  
  
          
  
  
  
          
  
  
      <hr/>
      <fieldset>
          <legend>
              <button aria-controls="collapseSenders" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseSenders" data-bs-toggle="collapse" type="button">
                  Émetteur
              </button>
          </legend>
          <div class="mt-3 collapse" id="collapseSenders">
              
                  <div class="form-group"><label class="form-label" for="id_senders">Nom de la personne</label><select class="form-select django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_senders" lang="fr" multiple="" name="senders">
  </select></div>
              
  
              
                  <div class="form-group"><label class="form-label" for="id_sender_prescriber_organizations">Nom de l'organisme prescripteur</label><select class="form-select django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_sender_prescriber_organizations" lang="fr" multiple="" name="sender_prescriber_organizations">
  </select></div>
              
  
              
                  <div class="form-group"><label class="form-label" for="id_sender_companies">Nom de l’employeur orienteur</label><select class="form-select django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_sender_companies" lang="fr" multiple="" name="sender_companies">
  </select></div>
              
          </div>
      </fieldset>
  
  
          
              <hr/>
              
  
  <fieldset>
      <legend>
          <button aria-controls="collapse-criteria" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-criteria" data-bs-toggle="collapse" type="button">Critères administratifs déclarés</button>
      </legend>
      <div class="mt-3 collapse" id="collapse-criteria"><div class="form-group"><select class="form-select django-select2" data-allow-clear="true" data-minimum-input-length="0" data-placeholder="" data-theme="bootstrap-5" id="id_criteria" lang="fr" multiple="" name="criteria">
    <option value="1">Bénéficiaire du RSA</option>
  
    <option value="2">Allocataire ASS</option>
  
    <option value="3">Allocataire AAH</option>
  
    <option value="4">DETLD (+ 24 mois)</option>
  
    <option value="5">Niveau d'étude 3 (CAP, BEP) ou infra</option>
  
    <option value="6">Senior (+50 ans)</option>
  
    <option value="7">Jeune (-26 ans)</option>
  
    <option value="8">Sortant de l'ASE</option>
  
    <option value="9">DELD (12-24 mois)</option>
  
    <option value="10">Travailleur handicapé</option>
  
    <option value="11">Parent isolé</option>
  
    <option value="12">Personne sans hébergement ou hébergée ou ayant un parcours de rue</option>
  
    <option value="13">Réfugié statutaire, bénéficiaire d'une protection temporaire, protégé subsidiaire ou demandeur d'asile</option>
  
    <option value="14">Résident ZRR</option>
  
    <option value="15">Résident QPV</option>
  
    <option value="16">Sortant de détention ou personne placée sous main de justice</option>
  
    <option value="17">Maîtrise de la langue française</option>
  
    <option value="18">Mobilité</option>
  
  </select></div></div>
  </fieldset>
  
          
          
          
  
  
  
          
          
          <hr/>
          
          <fieldset>
              <legend>
                  <button aria-controls="collapse-archived" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapse-archived" data-bs-toggle="collapse" type="button">
                      Type de candidature <span class="badge badge-sm rounded-pill bg-important">Nouveau</span>
                  </button>
              </legend>
              <div class="mt-3 collapse" id="collapse-archived">
                  <div class="mb-3">
                      <i>En savoir plus sur les types de candidatures <a aria-label="Documentation des types de candidatures" href="https://aide.emplois.inclusion.beta.gouv.fr/hc/fr/articles/27110481864593--Archiver-une-candidature" rel="noopener" target="_blank">dans la documentation</a>.</i>
                  </div>
                  <div class="form-group"><div class="" id="id_archived">
      
          
          
              <div class="form-check">
                  <input checked="checked" class="form-check-input" id="id_archived_0" name="archived" type="radio" value=""/>
                  <label class="form-check-label" for="id_archived_0">Candidatures actives (affichage par défaut)</label>
              </div>
          
      
          
          
              <div class="form-check">
                  <input class="form-check-input" id="id_archived_1" name="archived" type="radio" value="archived"/>
                  <label class="form-check-label" for="id_archived_1">Candidatures archivées</label>
              </div>
          
      
          
          
              <div class="form-check">
                  <input class="form-check-input" id="id_archived_2" name="archived" type="radio" value="all"/>
                  <label class="form-check-label" for="id_archived_2">Toutes les candidatures</label>
              </div>
          
      
  </div></div>
              </div>
          </fieldset>
      
      
  
  <hr/>
  <fieldset>
      <legend>
          <button aria-controls="collapseDate" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseDate" data-bs-toggle="collapse" type="button">
              Date d'envoi de la candidature
          </button>
      </legend>
      <div class="mt-3 collapse" id="collapseDate">
          <div class="form-group"><label class="form-label" for="id_start_date">À partir du</label><duet-date-picker class="" identifier="id_start_date" name="start_date" placeholder="À partir du"></duet-date-picker></div>
          <div class="form-group"><label class="form-label" for="id_end_date">Jusqu'au</label><duet-date-picker class="" identifier="id_end_date" name="end_date" placeholder="Jusqu'au"></duet-date-picker></div>
      </div>
  </fieldset>
  
  </div>
  
          <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
      <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">Voir</button>
      
  
  
      
  
  
      
  
  
  </div>
  
      </div>
  '''
# ---
# name: test_list_snapshot[applications list]
  '''
  <section aria-labelledby="apply-list-count" id="job-applications-section">
      
          
              
  
  
  
  
  <div class="c-box c-box--results has-links-inside my-3 my-md-4">
      <div class="c-box--results__header">
          
  
  <div class="d-flex flex-column flex-lg-row gap-1 gap-lg-3 mb-3">
      <p class="fs-sm mb-0 flex-grow-1">
          Émise le 27 novembre 2024 par
          
              
                  <strong>Pres. Org.</strong>
              
              
                  <i aria-hidden="true" class="ri-home-smile-2-line me-1"></i>Orienteur
              
          
          
      </p>
      <div><span class="badge rounded-pill text-nowrap badge-sm mb-1 bg-danger" id="state_[PK of JobApplication]">Candidature déclinée</span></div>
  </div>
  
          <div class="c-box--results__summary">
              <i aria-hidden="true" class="ri-user-line"></i>
              <div>
                  
                      <h3>Jane DOE</h3>
                      <div class="d-flex flex-column flex-md-row align-items-start align-items-md-end gap-1 gap-md-2">
                          
                              <span>
                                  <i aria-hidden="true" class="ri-map-pin-2-line fw-normal me-1"></i>
                                  35 -
                                  Rennes
                              </span>
                          
                          
                              
                                  
                                              <span class="badge badge-xs rounded-pill bg-success-lighter text-success">
              <i aria-hidden="true" class="ri-check-line"></i>
              Éligible à l’IAE
          </span>
                                  
                              
                          
                          
  
  
                      </div>
                  
              </div>
          </div>
      </div>
      <hr class="m-0"/>
      <div class="c-box--results__body">
          <div class="c-box--results__list-data">
              
              
  
  
      
          <div class="c-info c-info--secondary">
              <span class="c-info__summary">Candidature spontanée</span>
          </div>
      
  
  
          </div>
      </div>
      <div class="c-box--results__footer">
          <div class="d-flex flex-column flex-md-row justify-content-md-end align-items-md-center gap-3">
              
              
                  
                  <a aria-label="Gérer la candidature de Jane DOE" class="btn btn-outline-primary btn-block w-100 w-md-auto" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list">Voir sa candidature</a>
              
          </div>
      </div>
  </div>
  
          
              
  
  
  
  
  <div class="c-box c-box--results has-links-inside my-3 my-md-4">
      <div class="c-box--results__header">
          
  
  <div class="d-flex flex-column flex-lg-row gap-1 gap-lg-3 mb-3">
      <p class="fs-sm mb-0 flex-grow-1">
          Émise le 27 novembre 2024 par
          
              <strong>Vous</strong>
          
          
      </p>
      <div><span class="badge rounded-pill text-nowrap badge-sm mb-1 bg-info" id="state_[PK of JobApplication]">Nouvelle candidature</span></div>
  </div>
  
          <div class="c-box--results__summary">
              <i aria-hidden="true" class="ri-user-line"></i>
              <div>
                  
                      <h3>Jane DOE</h3>
                      <div class="d-flex flex-column flex-md-row align-items-start align-items-md-end gap-1 gap-md-2">
                          
                              <span>
                                  <i aria-hidden="true" class="ri-map-pin-2-line fw-normal me-1"></i>
                                  35 -
                                  Rennes
                              </span>
                          
                          
                              
                                  
                                              <span class="badge badge-xs rounded-pill bg-success-lighter text-success">
              <i aria-hidden="true" class="ri-check-line"></i>
              Éligible à l’IAE
          </span>
                                  
                              
                          
                          
  
  
                      </div>
                  
              </div>
          </div>
      </div>
      <hr class="m-0"/>
      <div class="c-box--results__body">
          <div class="c-box--results__list-data">
              
              
  
  
      
          <div class="c-info c-info--secondary">
              <span class="c-info__summary">Candidature spontanée</span>
          </div>
      
  
  
          </div>
      </div>
      <div class="c-box--results__footer">
          <div class="d-flex flex-column flex-md-row justify-content-md-end align-items-md-center gap-3">
              
              
                  
                  <a aria-label="Gérer la candidature de Jane DOE" class="btn btn-outline-primary btn-block w-100 w-md-auto" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list">Voir sa candidature</a>
              
          </div>
      </div>
  </div>
  
          
              
  
  
  
  
  <div class="c-box c-box--results has-links-inside my-3 my-md-4">
      <div class="c-box--results__header">
          
  
  <div class="d-flex flex-column flex-lg-row gap-1 gap-lg-3 mb-3">
      <p class="fs-sm mb-0 flex-grow-1">
          Émise le 27 novembre 2024 par
          
              <i aria-hidden="true" class="ri-user-line me-1"></i><strong>Le candidat lui-même</strong>
          
          
      </p>
      <div><span class="badge rounded-pill text-nowrap badge-sm mb-1 bg-success" id="state_[PK of JobApplication]">Candidature acceptée</span></div>
  </div>
  
          <div class="c-box--results__summary">
              <i aria-hidden="true" class="ri-user-line"></i>
              <div>
                  
                      <h3>Jane DOE</h3>
                      <div class="d-flex flex-column flex-md-row align-items-start align-items-md-end gap-1 gap-md-2">
                          
                              <span>
                                  <i aria-hidden="true" class="ri-map-pin-2-line fw-normal me-1"></i>
                                  35 -
                                  Rennes
                              </span>
                          
                          
                              
                                  
                                              <span class="badge badge-xs rounded-pill bg-success-lighter text-success">
              <i aria-hidden="true" class="ri-check-line"></i>
              Éligible à l’IAE
          </span>
                                  
                              
                          
                          
  
  
                      </div>
                  
              </div>
          </div>
      </div>
      <hr class="m-0"/>
      <div class="c-box--results__body">
          <div class="c-box--results__list-data">
              
              
  
  
      
          <div class="c-info c-info--secondary">
              <span class="c-info__summary">Candidature spontanée</span>
          </div>
      
  
  
          </div>
      </div>
      <div class="c-box--results__footer">
          <div class="d-flex flex-column flex-md-row justify-content-md-end align-items-md-center gap-3">
              
              
                  
                  <a aria-label="Gérer la candidature de Jane DOE" class="btn btn-outline-primary btn-block w-100 w-md-auto" data-matomo-action="clic" data-matomo-category="candidature" data-matomo-event="true" data-matomo-option="voir-candidature-employeur" href="/apply/[PK of JobApplication]/siae/details?back_url=/apply/siae/list">Voir sa candidature</a>
              
          </div>
      </div>
  </div>
  
          
          
  
  
  
      
  </section>
  '''
# ---
# name: test_list_snapshot[empty list]
  '''
  <section aria-labelledby="apply-list-count" id="job-applications-section">
      
          <div class="text-center my-3 my-md-4">
              <img alt="" class="img-fluid" loading="lazy" src="/static/img/illustration-siae-card-no-result.svg"/>
              <p class="mb-1 mt-3">
                  <strong>
                      
                          
                              Aucune candidature pour le moment
                          
                      
                  </strong>
              </p>
              <p>
                  <i>
                      
                          Pour recevoir des candidatures, vérifiez que les postes ouverts
                          <br class="d-none d-lg-inline"/>
                          dans votre structure sont bien à jour.
                      
                  </i>
              </p>
              
                  <a class="btn btn-outline-primary btn-ico w-100 w-md-auto justify-content-center" href="/company/job_description_list">
                      <i class="ri-briefcase-line ri-lg fw-normal"></i>
                      <span>Gérer les métiers et recrutements</span>
                  </a>
              
          </div>
      
  </section>
  '''
# ---
