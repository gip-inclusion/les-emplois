# serializer version: 1
# name: test_filters
  '''
  <div aria-labelledby="offcanvasApplyFiltersLabel" class="c-offcanvas-filters offcanvas offcanvas-end" id="offcanvasApplyFilters" tabindex="-1">
          <div class="offcanvas-header">
              <h4 class="mb-0 btn-ico" id="offcanvasApplyFiltersLabel">
                  <i aria-hidden="true" class="ri-sound-module-fill fw-medium"></i>
                  <span>Filtrer</span>
              </h4>
              <button aria-label="Fermer" class="btn-close" data-bs-dismiss="offcanvas" type="button"></button>
          </div>
          
  
  <div class="offcanvas-body" id="offcanvasApplyFiltersContent">
      
      <fieldset>
          <legend>
              <button aria-controls="collapseStates" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseStates" data-bs-toggle="collapse" type="button">
                  Statut
              </button>
          </legend>
          <div class="my-3 collapse" id="collapseStates">
              <ul>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_0" name="states" type="checkbox" value="new"/>
                              <label class="form-check-label" for="id_states_0">Nouvelle candidature</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_1" name="states" type="checkbox" value="processing"/>
                              <label class="form-check-label" for="id_states_1">Candidature à l'étude</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_2" name="states" type="checkbox" value="postponed"/>
                              <label class="form-check-label" for="id_states_2">Candidature en attente</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_3" name="states" type="checkbox" value="prior_to_hire"/>
                              <label class="form-check-label" for="id_states_3">Action préalable à l’embauche</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_4" name="states" type="checkbox" value="accepted"/>
                              <label class="form-check-label" for="id_states_4">Candidature acceptée</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_5" name="states" type="checkbox" value="refused"/>
                              <label class="form-check-label" for="id_states_5">Candidature déclinée</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_6" name="states" type="checkbox" value="cancelled"/>
                              <label class="form-check-label" for="id_states_6">Embauche annulée</label>
                          </div>
                      </li>
                  
                      <li>
                          <div class="form-check">
                              <input class="form-check-input" id="id_states_7" name="states" type="checkbox" value="obsolete"/>
                              <label class="form-check-label" for="id_states_7">Embauché ailleurs</label>
                          </div>
                      </li>
                  
              </ul>
          </div>
      </fieldset>
  
  
      <input id="display-kind" name="display" type="hidden" value="list"/>
      <input id="id_order" name="order" type="hidden" value="-created_at"/>
      
      
  
  <hr/>
  <fieldset>
      <legend>
          <button aria-controls="collapseDate" aria-expanded="false" class="btn btn-outline-transparent has-collapse-caret collapsed" data-bs-target="#collapseDate" data-bs-toggle="collapse" type="button">
              Date d'envoi de la candidature
          </button>
      </legend>
      <div class="mt-3 collapse" id="collapseDate">
          <div class="form-group"><label class="form-label" for="id_start_date">À partir du</label><duet-date-picker class="" identifier="id_start_date" name="start_date"></duet-date-picker></div>
          <div class="form-group"><label class="form-label" for="id_end_date">Jusqu'au</label><duet-date-picker class="" identifier="id_end_date" name="end_date"></duet-date-picker></div>
      </div>
  </fieldset>
  
  </div>
  
          <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
      <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">Voir</button>
      
  
  
      
  
  
      
  
  
  </div>
  
      </div>
  '''
# ---
# name: test_list_for_job_seeker_queries[SQL queries in list mode]
  dict({
    'num_queries': 11,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'list_for_job_seeker[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT COUNT(*)
          FROM
            (SELECT (COALESCE(LOWER("users_user"."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER("users_user"."last_name"), %s)), %s)) AS "job_seeker_full_name",
                    COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                               (SELECT U0."id"
                                FROM "eligibility_eligibilitydiagnosis" U0
                                WHERE (U0."expires_at" > %s
                                       AND (U0."author_kind" = %s
                                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                ORDER BY U0."created_at" DESC
                                LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
          
               (SELECT U0."id"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE (U0."expires_at" > %s
                       AND (U0."author_kind" = %s
                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                ORDER BY U0."created_at" DESC
                LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                    GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
               (SELECT U1."start_at"
                FROM "rdv_insertion_participation" U0
                INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
                WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                       AND U1."start_at" > %s
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                       AND U0."status" = %s)
                ORDER BY U1."start_at" ASC
                LIMIT 1) AS "next_appointment_start_at"
             FROM "job_applications_jobapplication"
             INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
             LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
             LEFT OUTER JOIN "rdv_insertion_participation" ON ("users_user"."id" = "rdv_insertion_participation"."job_seeker_id")
             LEFT OUTER JOIN "rdv_insertion_appointment" ON ("rdv_insertion_participation"."appointment_id" = "rdv_insertion_appointment"."id")
             WHERE "job_applications_jobapplication"."job_seeker_id" = %s
             GROUP BY "job_applications_jobapplication"."id",
                      1,
                      2) subquery
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_job_seeker[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_link",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."hiring_without_approval",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
            (SELECT U0."id"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE (U0."expires_at" > %s
                    AND (U0."author_kind" = %s
                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
             ORDER BY U0."created_at" DESC
             LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                 COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                            (SELECT U0."id"
                             FROM "eligibility_eligibilitydiagnosis" U0
                             WHERE (U0."expires_at" > %s
                                    AND (U0."author_kind" = %s
                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                             ORDER BY U0."created_at" DESC
                             LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
          
            (SELECT U1."start_at"
             FROM "rdv_insertion_participation" U0
             INNER JOIN "rdv_insertion_appointment" U1 ON (U0."appointment_id" = U1."id")
             WHERE (U1."company_id" = ("job_applications_jobapplication"."to_company_id")
                    AND U1."start_at" > %s
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id")
                    AND U0."status" = %s)
             ORDER BY U1."start_at" ASC
             LIMIT 1) AS "next_appointment_start_at",
                 (COUNT("rdv_insertion_participation"."id") FILTER (
                                                                    WHERE ("rdv_insertion_appointment"."company_id" = ("job_applications_jobapplication"."to_company_id")
                                                                           AND "rdv_insertion_appointment"."start_at" > %s
                                                                           AND "rdv_insertion_participation"."status" = %s)) - %s) AS "other_appointments_count",
                 (COALESCE(LOWER("users_user"."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER("users_user"."last_name"), %s)), %s)) AS "job_seeker_full_name",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."are_allocation_since",
                 "users_jobseekerprofile"."activity_bonus_since",
                 "users_jobseekerprofile"."cape_freelance",
                 "users_jobseekerprofile"."cesa_freelance",
                 "users_jobseekerprofile"."actor_met_for_business_creation",
                 "users_jobseekerprofile"."mean_monthly_income_before_process",
                 "users_jobseekerprofile"."eiti_contributions",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "users_jobseekerprofile"."created_by_prescriber_organization_id",
                 T10."id",
                 T10."password",
                 T10."last_login",
                 T10."is_superuser",
                 T10."username",
                 T10."first_name",
                 T10."last_name",
                 T10."is_staff",
                 T10."is_active",
                 T10."date_joined",
                 T10."address_line_1",
                 T10."address_line_2",
                 T10."post_code",
                 T10."city",
                 T10."department",
                 T10."coords",
                 T10."geocoding_score",
                 T10."geocoding_updated_at",
                 T10."ban_api_resolved_address",
                 T10."insee_city_id",
                 T10."title",
                 T10."full_name_search_vector",
                 T10."email",
                 T10."phone",
                 T10."kind",
                 T10."identity_provider",
                 T10."has_completed_welcoming_tour",
                 T10."created_by_id",
                 T10."external_data_source_history",
                 T10."last_checked_at",
                 T10."public_id",
                 T10."address_filled_at",
                 T10."first_login",
                 T11."id",
                 T11."address_line_1",
                 T11."address_line_2",
                 T11."post_code",
                 T11."city",
                 T11."department",
                 T11."coords",
                 T11."geocoding_score",
                 T11."geocoding_updated_at",
                 T11."ban_api_resolved_address",
                 T11."insee_city_id",
                 T11."name",
                 T11."created_at",
                 T11."updated_at",
                 T11."uid",
                 T11."active_members_email_reminder_last_sent_at",
                 T11."automatic_geocoding_update",
                 T11."siret",
                 T11."naf",
                 T11."kind",
                 T11."brand",
                 T11."phone",
                 T11."email",
                 T11."auth_email",
                 T11."website",
                 T11."description",
                 T11."provided_support",
                 T11."source",
                 T11."created_by_id",
                 T11."block_job_applications",
                 T11."job_applications_blocked_at",
                 T11."convention_id",
                 T11."job_app_score",
                 T11."is_searchable",
                 T11."rdv_solidarites_id",
                 T11."fields_history",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."is_head_office",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."is_authorized",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          LEFT OUTER JOIN "rdv_insertion_participation" ON ("users_user"."id" = "rdv_insertion_participation"."job_seeker_id")
          LEFT OUTER JOIN "rdv_insertion_appointment" ON ("rdv_insertion_participation"."appointment_id" = "rdv_insertion_appointment"."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON ("users_user"."id" = "users_jobseekerprofile"."user_id")
          LEFT OUTER JOIN "users_user" T10 ON ("job_applications_jobapplication"."sender_id" = T10."id")
          LEFT OUTER JOIN "companies_company" T11 ON ("job_applications_jobapplication"."sender_company_id" = T11."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          LEFT OUTER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          WHERE "job_applications_jobapplication"."job_seeker_id" = %s
          GROUP BY "job_applications_jobapplication"."id",
                   49,
                   52,
                   "users_user"."id",
                   "users_jobseekerprofile"."user_id",
                   T10."id",
                   T11."id",
                   "prescribers_prescriberorganization"."id",
                   "companies_company"."id",
                   "companies_siaeconvention"."id",
                   "approvals_approval"."id"
          ORDER BY "job_applications_jobapplication"."created_at" DESC,
                   "job_applications_jobapplication"."id" DESC
          LIMIT 3
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_job_seeker[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_job_seeker[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "approvals_approval"
          WHERE "approvals_approval"."user_id" IN (%s)
          ORDER BY "approvals_approval"."start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'Session.save[<site-packages>/django/db/models/base.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          UPDATE "django_session"
          SET "session_data" = %s,
              "expire_date" = %s
          WHERE "django_session"."session_key" = %s
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
          'SessionStore.save[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: test_list_for_job_seeker_queries[SQL queries in table mode]
  dict({
    'num_queries': 8,
    'queries': list([
      dict({
        'origin': list([
          'SessionStore._get_session_from_db[<site-packages>/django/contrib/sessions/backends/db.py]',
        ]),
        'sql': '''
          SELECT "django_session"."session_key",
                 "django_session"."session_data",
                 "django_session"."expire_date"
          FROM "django_session"
          WHERE ("django_session"."expire_date" > %s
                 AND "django_session"."session_key" = %s)
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'ItouCurrentOrganizationMiddleware.__call__[utils/perms/middleware.py]',
        ]),
        'sql': '''
          SELECT "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login"
          FROM "users_user"
          WHERE "users_user"."id" = %s
          LIMIT 21
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__enter__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'SAVEPOINT "<snapshot>"',
      }),
      dict({
        'origin': list([
          'ItouPaginator.count[<site-packages>/django/core/paginator.py]',
          'pager[utils/pagination.py]',
          'list_for_job_seeker[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT COUNT(*)
          FROM
            (SELECT (COALESCE(LOWER("users_user"."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER("users_user"."last_name"), %s)), %s)) AS "job_seeker_full_name",
                    COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                               (SELECT U0."id"
                                FROM "eligibility_eligibilitydiagnosis" U0
                                WHERE (U0."expires_at" > %s
                                       AND (U0."author_kind" = %s
                                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                                ORDER BY U0."created_at" DESC
                                LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
          
               (SELECT U0."id"
                FROM "eligibility_eligibilitydiagnosis" U0
                WHERE (U0."expires_at" > %s
                       AND (U0."author_kind" = %s
                            OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                       AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                ORDER BY U0."created_at" DESC
                LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                    GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change"
             FROM "job_applications_jobapplication"
             INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
             LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
             WHERE "job_applications_jobapplication"."job_seeker_id" = %s
             GROUP BY "job_applications_jobapplication"."id",
                      1,
                      2) subquery
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_job_seeker[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "job_applications_jobapplication"."id",
                 "job_applications_jobapplication"."job_seeker_id",
                 "job_applications_jobapplication"."eligibility_diagnosis_id",
                 "job_applications_jobapplication"."geiq_eligibility_diagnosis_id",
                 "job_applications_jobapplication"."create_employee_record",
                 "job_applications_jobapplication"."resume_link",
                 "job_applications_jobapplication"."sender_id",
                 "job_applications_jobapplication"."sender_kind",
                 "job_applications_jobapplication"."sender_company_id",
                 "job_applications_jobapplication"."sender_prescriber_organization_id",
                 "job_applications_jobapplication"."to_company_id",
                 "job_applications_jobapplication"."state",
                 "job_applications_jobapplication"."archived_at",
                 "job_applications_jobapplication"."archived_by_id",
                 "job_applications_jobapplication"."hired_job_id",
                 "job_applications_jobapplication"."message",
                 "job_applications_jobapplication"."answer",
                 "job_applications_jobapplication"."answer_to_prescriber",
                 "job_applications_jobapplication"."refusal_reason",
                 "job_applications_jobapplication"."refusal_reason_shared_with_job_seeker",
                 "job_applications_jobapplication"."hiring_start_at",
                 "job_applications_jobapplication"."hiring_end_at",
                 "job_applications_jobapplication"."hiring_without_approval",
                 "job_applications_jobapplication"."origin",
                 "job_applications_jobapplication"."approval_id",
                 "job_applications_jobapplication"."approval_delivery_mode",
                 "job_applications_jobapplication"."approval_number_sent_by_email",
                 "job_applications_jobapplication"."approval_number_sent_at",
                 "job_applications_jobapplication"."approval_manually_delivered_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_by_id",
                 "job_applications_jobapplication"."approval_manually_refused_at",
                 "job_applications_jobapplication"."transferred_at",
                 "job_applications_jobapplication"."transferred_by_id",
                 "job_applications_jobapplication"."transferred_from_id",
                 "job_applications_jobapplication"."created_at",
                 "job_applications_jobapplication"."updated_at",
                 "job_applications_jobapplication"."processed_at",
                 "job_applications_jobapplication"."prehiring_guidance_days",
                 "job_applications_jobapplication"."contract_type",
                 "job_applications_jobapplication"."nb_hours_per_week",
                 "job_applications_jobapplication"."contract_type_details",
                 "job_applications_jobapplication"."qualification_type",
                 "job_applications_jobapplication"."qualification_level",
                 "job_applications_jobapplication"."planned_training_hours",
                 "job_applications_jobapplication"."inverted_vae_contract",
                 "job_applications_jobapplication"."diagoriente_invite_sent_at",
                 GREATEST("job_applications_jobapplication"."created_at", MAX("job_applications_jobapplicationtransitionlog"."timestamp")) AS "last_change",
          
            (SELECT U0."id"
             FROM "eligibility_eligibilitydiagnosis" U0
             WHERE (U0."expires_at" > %s
                    AND (U0."author_kind" = %s
                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
             ORDER BY U0."created_at" DESC
             LIMIT 1) AS "jobseeker_valid_eligibility_diagnosis",
                 COALESCE("job_applications_jobapplication"."eligibility_diagnosis_id",
                            (SELECT U0."id"
                             FROM "eligibility_eligibilitydiagnosis" U0
                             WHERE (U0."expires_at" > %s
                                    AND (U0."author_kind" = %s
                                         OR U0."author_siae_id" = ("job_applications_jobapplication"."to_company_id"))
                                    AND U0."job_seeker_id" = ("job_applications_jobapplication"."job_seeker_id"))
                             ORDER BY U0."created_at" DESC
                             LIMIT 1)) AS "jobseeker_eligibility_diagnosis",
                 (COALESCE(LOWER("users_user"."first_name"), %s) || COALESCE((COALESCE(%s, %s) || COALESCE(LOWER("users_user"."last_name"), %s)), %s)) AS "job_seeker_full_name",
                 "users_user"."id",
                 "users_user"."password",
                 "users_user"."last_login",
                 "users_user"."is_superuser",
                 "users_user"."username",
                 "users_user"."first_name",
                 "users_user"."last_name",
                 "users_user"."is_staff",
                 "users_user"."is_active",
                 "users_user"."date_joined",
                 "users_user"."address_line_1",
                 "users_user"."address_line_2",
                 "users_user"."post_code",
                 "users_user"."city",
                 "users_user"."department",
                 "users_user"."coords",
                 "users_user"."geocoding_score",
                 "users_user"."geocoding_updated_at",
                 "users_user"."ban_api_resolved_address",
                 "users_user"."insee_city_id",
                 "users_user"."title",
                 "users_user"."full_name_search_vector",
                 "users_user"."email",
                 "users_user"."phone",
                 "users_user"."kind",
                 "users_user"."identity_provider",
                 "users_user"."has_completed_welcoming_tour",
                 "users_user"."created_by_id",
                 "users_user"."external_data_source_history",
                 "users_user"."last_checked_at",
                 "users_user"."public_id",
                 "users_user"."address_filled_at",
                 "users_user"."first_login",
                 "users_jobseekerprofile"."user_id",
                 "users_jobseekerprofile"."birthdate",
                 "users_jobseekerprofile"."birth_place_id",
                 "users_jobseekerprofile"."birth_country_id",
                 "users_jobseekerprofile"."nir",
                 "users_jobseekerprofile"."lack_of_nir_reason",
                 "users_jobseekerprofile"."pole_emploi_id",
                 "users_jobseekerprofile"."lack_of_pole_emploi_id_reason",
                 "users_jobseekerprofile"."asp_uid",
                 "users_jobseekerprofile"."education_level",
                 "users_jobseekerprofile"."resourceless",
                 "users_jobseekerprofile"."rqth_employee",
                 "users_jobseekerprofile"."oeth_employee",
                 "users_jobseekerprofile"."pole_emploi_since",
                 "users_jobseekerprofile"."unemployed_since",
                 "users_jobseekerprofile"."has_rsa_allocation",
                 "users_jobseekerprofile"."rsa_allocation_since",
                 "users_jobseekerprofile"."ass_allocation_since",
                 "users_jobseekerprofile"."aah_allocation_since",
                 "users_jobseekerprofile"."are_allocation_since",
                 "users_jobseekerprofile"."activity_bonus_since",
                 "users_jobseekerprofile"."cape_freelance",
                 "users_jobseekerprofile"."cesa_freelance",
                 "users_jobseekerprofile"."actor_met_for_business_creation",
                 "users_jobseekerprofile"."mean_monthly_income_before_process",
                 "users_jobseekerprofile"."eiti_contributions",
                 "users_jobseekerprofile"."hexa_lane_number",
                 "users_jobseekerprofile"."hexa_std_extension",
                 "users_jobseekerprofile"."hexa_non_std_extension",
                 "users_jobseekerprofile"."hexa_lane_type",
                 "users_jobseekerprofile"."hexa_lane_name",
                 "users_jobseekerprofile"."hexa_additional_address",
                 "users_jobseekerprofile"."hexa_post_code",
                 "users_jobseekerprofile"."hexa_commune_id",
                 "users_jobseekerprofile"."pe_obfuscated_nir",
                 "users_jobseekerprofile"."pe_last_certification_attempt_at",
                 "users_jobseekerprofile"."created_by_prescriber_organization_id",
                 T7."id",
                 T7."password",
                 T7."last_login",
                 T7."is_superuser",
                 T7."username",
                 T7."first_name",
                 T7."last_name",
                 T7."is_staff",
                 T7."is_active",
                 T7."date_joined",
                 T7."address_line_1",
                 T7."address_line_2",
                 T7."post_code",
                 T7."city",
                 T7."department",
                 T7."coords",
                 T7."geocoding_score",
                 T7."geocoding_updated_at",
                 T7."ban_api_resolved_address",
                 T7."insee_city_id",
                 T7."title",
                 T7."full_name_search_vector",
                 T7."email",
                 T7."phone",
                 T7."kind",
                 T7."identity_provider",
                 T7."has_completed_welcoming_tour",
                 T7."created_by_id",
                 T7."external_data_source_history",
                 T7."last_checked_at",
                 T7."public_id",
                 T7."address_filled_at",
                 T7."first_login",
                 T8."id",
                 T8."address_line_1",
                 T8."address_line_2",
                 T8."post_code",
                 T8."city",
                 T8."department",
                 T8."coords",
                 T8."geocoding_score",
                 T8."geocoding_updated_at",
                 T8."ban_api_resolved_address",
                 T8."insee_city_id",
                 T8."name",
                 T8."created_at",
                 T8."updated_at",
                 T8."uid",
                 T8."active_members_email_reminder_last_sent_at",
                 T8."automatic_geocoding_update",
                 T8."siret",
                 T8."naf",
                 T8."kind",
                 T8."brand",
                 T8."phone",
                 T8."email",
                 T8."auth_email",
                 T8."website",
                 T8."description",
                 T8."provided_support",
                 T8."source",
                 T8."created_by_id",
                 T8."block_job_applications",
                 T8."job_applications_blocked_at",
                 T8."convention_id",
                 T8."job_app_score",
                 T8."is_searchable",
                 T8."rdv_solidarites_id",
                 T8."fields_history",
                 "prescribers_prescriberorganization"."id",
                 "prescribers_prescriberorganization"."address_line_1",
                 "prescribers_prescriberorganization"."address_line_2",
                 "prescribers_prescriberorganization"."post_code",
                 "prescribers_prescriberorganization"."city",
                 "prescribers_prescriberorganization"."department",
                 "prescribers_prescriberorganization"."coords",
                 "prescribers_prescriberorganization"."geocoding_score",
                 "prescribers_prescriberorganization"."geocoding_updated_at",
                 "prescribers_prescriberorganization"."ban_api_resolved_address",
                 "prescribers_prescriberorganization"."insee_city_id",
                 "prescribers_prescriberorganization"."name",
                 "prescribers_prescriberorganization"."created_at",
                 "prescribers_prescriberorganization"."updated_at",
                 "prescribers_prescriberorganization"."uid",
                 "prescribers_prescriberorganization"."active_members_email_reminder_last_sent_at",
                 "prescribers_prescriberorganization"."automatic_geocoding_update",
                 "prescribers_prescriberorganization"."siret",
                 "prescribers_prescriberorganization"."is_head_office",
                 "prescribers_prescriberorganization"."kind",
                 "prescribers_prescriberorganization"."is_brsa",
                 "prescribers_prescriberorganization"."phone",
                 "prescribers_prescriberorganization"."email",
                 "prescribers_prescriberorganization"."website",
                 "prescribers_prescriberorganization"."description",
                 "prescribers_prescriberorganization"."is_authorized",
                 "prescribers_prescriberorganization"."code_safir_pole_emploi",
                 "prescribers_prescriberorganization"."created_by_id",
                 "prescribers_prescriberorganization"."authorization_status",
                 "prescribers_prescriberorganization"."authorization_updated_at",
                 "prescribers_prescriberorganization"."authorization_updated_by_id",
                 "companies_company"."id",
                 "companies_company"."address_line_1",
                 "companies_company"."address_line_2",
                 "companies_company"."post_code",
                 "companies_company"."city",
                 "companies_company"."department",
                 "companies_company"."coords",
                 "companies_company"."geocoding_score",
                 "companies_company"."geocoding_updated_at",
                 "companies_company"."ban_api_resolved_address",
                 "companies_company"."insee_city_id",
                 "companies_company"."name",
                 "companies_company"."created_at",
                 "companies_company"."updated_at",
                 "companies_company"."uid",
                 "companies_company"."active_members_email_reminder_last_sent_at",
                 "companies_company"."automatic_geocoding_update",
                 "companies_company"."siret",
                 "companies_company"."naf",
                 "companies_company"."kind",
                 "companies_company"."brand",
                 "companies_company"."phone",
                 "companies_company"."email",
                 "companies_company"."auth_email",
                 "companies_company"."website",
                 "companies_company"."description",
                 "companies_company"."provided_support",
                 "companies_company"."source",
                 "companies_company"."created_by_id",
                 "companies_company"."block_job_applications",
                 "companies_company"."job_applications_blocked_at",
                 "companies_company"."convention_id",
                 "companies_company"."job_app_score",
                 "companies_company"."is_searchable",
                 "companies_company"."rdv_solidarites_id",
                 "companies_company"."fields_history",
                 "companies_siaeconvention"."id",
                 "companies_siaeconvention"."kind",
                 "companies_siaeconvention"."siret_signature",
                 "companies_siaeconvention"."is_active",
                 "companies_siaeconvention"."deactivated_at",
                 "companies_siaeconvention"."reactivated_by_id",
                 "companies_siaeconvention"."reactivated_at",
                 "companies_siaeconvention"."asp_id",
                 "companies_siaeconvention"."created_at",
                 "companies_siaeconvention"."updated_at",
                 "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "job_applications_jobapplication"
          INNER JOIN "users_user" ON ("job_applications_jobapplication"."job_seeker_id" = "users_user"."id")
          LEFT OUTER JOIN "job_applications_jobapplicationtransitionlog" ON ("job_applications_jobapplication"."id" = "job_applications_jobapplicationtransitionlog"."job_application_id")
          INNER JOIN "companies_company" ON ("job_applications_jobapplication"."to_company_id" = "companies_company"."id")
          LEFT OUTER JOIN "users_jobseekerprofile" ON ("users_user"."id" = "users_jobseekerprofile"."user_id")
          LEFT OUTER JOIN "users_user" T7 ON ("job_applications_jobapplication"."sender_id" = T7."id")
          LEFT OUTER JOIN "companies_company" T8 ON ("job_applications_jobapplication"."sender_company_id" = T8."id")
          LEFT OUTER JOIN "prescribers_prescriberorganization" ON ("job_applications_jobapplication"."sender_prescriber_organization_id" = "prescribers_prescriberorganization"."id")
          LEFT OUTER JOIN "companies_siaeconvention" ON ("companies_company"."convention_id" = "companies_siaeconvention"."id")
          LEFT OUTER JOIN "approvals_approval" ON ("job_applications_jobapplication"."approval_id" = "approvals_approval"."id")
          WHERE "job_applications_jobapplication"."job_seeker_id" = %s
          GROUP BY "job_applications_jobapplication"."id",
                   49,
                   50,
                   "users_user"."id",
                   "users_jobseekerprofile"."user_id",
                   T7."id",
                   T8."id",
                   "prescribers_prescriberorganization"."id",
                   "companies_company"."id",
                   "companies_siaeconvention"."id",
                   "approvals_approval"."id"
          ORDER BY "job_applications_jobapplication"."created_at" DESC,
                   "job_applications_jobapplication"."id" DESC
          LIMIT 3
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_job_seeker[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT ("job_applications_jobapplication_selected_jobs"."jobapplication_id") AS "_prefetch_related_val_jobapplication_id",
                 "companies_jobdescription"."id",
                 "companies_jobdescription"."appellation_id",
                 "companies_jobdescription"."company_id",
                 "companies_jobdescription"."created_at",
                 "companies_jobdescription"."updated_at",
                 "companies_jobdescription"."is_active",
                 "companies_jobdescription"."custom_name",
                 "companies_jobdescription"."description",
                 "companies_jobdescription"."ui_rank",
                 "companies_jobdescription"."contract_type",
                 "companies_jobdescription"."other_contract_type",
                 "companies_jobdescription"."contract_nature",
                 "companies_jobdescription"."location_id",
                 "companies_jobdescription"."hours_per_week",
                 "companies_jobdescription"."open_positions",
                 "companies_jobdescription"."profile_description",
                 "companies_jobdescription"."is_resume_mandatory",
                 "companies_jobdescription"."is_qpv_mandatory",
                 "companies_jobdescription"."market_context_description",
                 "companies_jobdescription"."source_id",
                 "companies_jobdescription"."source_kind",
                 "companies_jobdescription"."source_url",
                 "companies_jobdescription"."field_history",
                 "companies_jobdescription"."creation_source"
          FROM "companies_jobdescription"
          INNER JOIN "job_applications_jobapplication_selected_jobs" ON ("companies_jobdescription"."id" = "job_applications_jobapplication_selected_jobs"."jobdescription_id")
          INNER JOIN "jobs_appellation" ON ("companies_jobdescription"."appellation_id" = "jobs_appellation"."code")
          WHERE "job_applications_jobapplication_selected_jobs"."jobapplication_id" IN (%s,
                                                                                        %s,
                                                                                        %s)
          ORDER BY "jobs_appellation"."name" ASC,
                   "companies_jobdescription"."ui_rank" ASC
        ''',
      }),
      dict({
        'origin': list([
          '_add_pending_for_weeks[www/apply/views/list_views.py]',
          'list_for_job_seeker[www/apply/views/list_views.py]',
          '_check_user_view_wrapper[utils/auth.py]',
        ]),
        'sql': '''
          SELECT "approvals_approval"."id",
                 "approvals_approval"."start_at",
                 "approvals_approval"."end_at",
                 "approvals_approval"."created_at",
                 "approvals_approval"."number",
                 "approvals_approval"."pe_notification_status",
                 "approvals_approval"."pe_notification_time",
                 "approvals_approval"."pe_notification_endpoint",
                 "approvals_approval"."pe_notification_exit_code",
                 "approvals_approval"."user_id",
                 "approvals_approval"."created_by_id",
                 "approvals_approval"."origin",
                 "approvals_approval"."eligibility_diagnosis_id",
                 "approvals_approval"."updated_at",
                 "approvals_approval"."origin_siae_siret",
                 "approvals_approval"."origin_siae_kind",
                 "approvals_approval"."origin_sender_kind",
                 "approvals_approval"."origin_prescriber_organization_kind",
                 "approvals_approval"."public_id"
          FROM "approvals_approval"
          WHERE "approvals_approval"."user_id" IN (%s)
          ORDER BY "approvals_approval"."start_at" DESC
        ''',
      }),
      dict({
        'origin': list([
          'Atomic.__exit__[<site-packages>/django/db/transaction.py]',
        ]),
        'sql': 'RELEASE SAVEPOINT "<snapshot>"',
      }),
    ]),
  })
# ---
# name: test_list_snapshot[applications list]
  '''
  <section aria-labelledby="apply-list-count" id="job-applications-section">
      
          
              
                  
  
  
  
  <div class="c-box c-box--results has-links-inside my-3 my-md-4">
      <div class="c-box--results__header">
          
  
  <div class="d-flex flex-column flex-lg-row gap-1 gap-lg-3 mb-3">
      <p class="fs-sm mb-0 flex-grow-1">
          Émise le 27 novembre 2024 par
          
              
                  <strong>Pres. Org.</strong>
              
              
                  <i aria-hidden="true" class="ri-home-smile-2-line me-1"></i>Orienteur
              
          
          
      </p>
      <div><span class="badge rounded-pill text-nowrap badge-sm mb-1 bg-danger" id="state_[PK of JobApplication]">Candidature déclinée</span></div>
  </div>
  
          <div class="c-box--results__summary">
              <i aria-hidden="true" class="ri-user-line"></i>
              <div>
                  
                      <span>Entreprise d'insertion</span>
                      <h3>Acme inc.</h3>
                      
  
  
                  
              </div>
          </div>
      </div>
      <hr class="m-0"/>
      <div class="c-box--results__body">
          <div class="c-box--results__list-data">
              
              
  
  
      
          <div class="c-info c-info--secondary">
              <span class="c-info__summary">Candidature spontanée</span>
          </div>
      
  
  
          </div>
      </div>
      <div class="c-box--results__footer">
          <div class="d-flex flex-column flex-md-row justify-content-md-end align-items-md-center gap-3">
              
              
                  <a class="btn btn-outline-primary btn-block w-100 w-md-auto" href="/apply/[PK of JobApplication]/jobseeker/details?back_url=/apply/job_seeker/list%3Fdisplay%3Dlist">
                      Voir ma candidature
                  </a>
              
          </div>
      </div>
  </div>
  
              
                  
  
  
  
  <div class="c-box c-box--results has-links-inside my-3 my-md-4">
      <div class="c-box--results__header">
          
  
  <div class="d-flex flex-column flex-lg-row gap-1 gap-lg-3 mb-3">
      <p class="fs-sm mb-0 flex-grow-1">
          Émise le 27 novembre 2024 par
          
              <strong>Acme inc.</strong>
              
                  <i aria-hidden="true" class="ri-community-line me-1"></i>Employeur
              
          
          
      </p>
      <div><span class="badge rounded-pill text-nowrap badge-sm mb-1 bg-info" id="state_[PK of JobApplication]">Nouvelle candidature</span></div>
  </div>
  
          <div class="c-box--results__summary">
              <i aria-hidden="true" class="ri-user-line"></i>
              <div>
                  
                      <span>Entreprise d'insertion</span>
                      <h3>Acme inc.</h3>
                      
  
  
                  
              </div>
          </div>
      </div>
      <hr class="m-0"/>
      <div class="c-box--results__body">
          <div class="c-box--results__list-data">
              
              
  
  
      
          <div class="c-info c-info--secondary">
              <span class="c-info__summary">Candidature spontanée</span>
          </div>
      
  
  
          </div>
      </div>
      <div class="c-box--results__footer">
          <div class="d-flex flex-column flex-md-row justify-content-md-end align-items-md-center gap-3">
              
              
                  <a class="btn btn-outline-primary btn-block w-100 w-md-auto" href="/apply/[PK of JobApplication]/jobseeker/details?back_url=/apply/job_seeker/list%3Fdisplay%3Dlist">
                      Voir ma candidature
                  </a>
              
          </div>
      </div>
  </div>
  
              
                  
  
  
  
  <div class="c-box c-box--results has-links-inside my-3 my-md-4">
      <div class="c-box--results__header">
          
  
  <div class="d-flex flex-column flex-lg-row gap-1 gap-lg-3 mb-3">
      <p class="fs-sm mb-0 flex-grow-1">
          Émise le 27 novembre 2024 par
          
              <strong>Vous</strong>
          
          
      </p>
      <div><span class="badge rounded-pill text-nowrap badge-sm mb-1 bg-success" id="state_[PK of JobApplication]">Candidature acceptée</span></div>
  </div>
  
          <div class="c-box--results__summary">
              <i aria-hidden="true" class="ri-user-line"></i>
              <div>
                  
                      <span>Entreprise d'insertion</span>
                      <h3>Acme inc.</h3>
                      
  
  
                  
              </div>
          </div>
      </div>
      <hr class="m-0"/>
      <div class="c-box--results__body">
          <div class="c-box--results__list-data">
              
              
  
  
      
          <div class="c-info c-info--secondary">
              <span class="c-info__summary">Candidature spontanée</span>
          </div>
      
  
  
          </div>
      </div>
      <div class="c-box--results__footer">
          <div class="d-flex flex-column flex-md-row justify-content-md-end align-items-md-center gap-3">
              
              
                  <a class="btn btn-outline-primary btn-block w-100 w-md-auto" href="/apply/[PK of JobApplication]/jobseeker/details?back_url=/apply/job_seeker/list%3Fdisplay%3Dlist">
                      Voir ma candidature
                  </a>
              
          </div>
      </div>
  </div>
  
              
          
          
  
  
  
      
  </section>
  '''
# ---
# name: test_list_snapshot[applications table]
  '''
  <section aria-labelledby="apply-list-count" id="job-applications-section">
      
          
              <div class="table-responsive mt-3 mt-md-4">
                  
                      <table class="table table-hover table-sortable">
      <caption class="visually-hidden">Liste des candidatures (les colonnes disposant d’un bouton dans leur entête peuvent être triées en cliquant sur le bouton)</caption>
      <thead>
          <tr>
              
              
                  <th scope="col">Candidature chez</th>
              
              <th aria-sort="descending" scope="col">
      <button data-emplois-elements-visibility-on-selection="disabled" data-emplois-setter-target="#id_order" data-emplois-setter-value="created_at" type="button">
          Émise le
      </button>
  </th>
  
              <th scope="col">Statut</th>
              
              <th scope="col">Poste</th>
              <th scope="col">Emetteur</th>
              
              <th class="text-end w-50px" scope="col"></th>
          </tr>
      </thead>
      <tbody>
          
              
  
  
  
  
      
  
  
  <tr class="align-top">
      
      
          <td>
              <a class="btn-link" href="/apply/[PK of JobApplication]/jobseeker/details?back_url=/apply/job_seeker/list%3Fdisplay%3Dtable">
                  Acme inc.
              </a>
          </td>
      
  
      <td>27/11/2024</td>
      <td><span class="badge rounded-pill text-nowrap badge-xs bg-danger" id="state_[PK of JobApplication]">Candidature déclinée</span></td>
  
      
  
      <td>
          
              
                  Candidature spontanée
              
          
      </td>
      <td>
          
              <i aria-hidden="true" class="ri-home-smile-2-line"></i>
              
                  Pres. Org.
              
          
      </td>
      
  
      <td class="text-end w-50px align-middle">
          
              <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir ma candidature" data-bs-toggle="tooltip" href="/apply/[PK of JobApplication]/jobseeker/details?back_url=/apply/job_seeker/list%3Fdisplay%3Dtable">
                  <i aria-label="Voir ma candidature" class="ri-arrow-drop-right-line fs-lg"></i>
              </a>
          
      </td>
  </tr>
  
          
              
  
  
  
  
      
  
  
  <tr class="align-top">
      
      
          <td>
              <a class="btn-link" href="/apply/[PK of JobApplication]/jobseeker/details?back_url=/apply/job_seeker/list%3Fdisplay%3Dtable">
                  Acme inc.
              </a>
          </td>
      
  
      <td>27/11/2024</td>
      <td><span class="badge rounded-pill text-nowrap badge-xs bg-info" id="state_[PK of JobApplication]">Nouvelle candidature</span></td>
  
      
  
      <td>
          
              
                  Candidature spontanée
              
          
      </td>
      <td>
          
              <i aria-hidden="true" class="ri-community-line"></i>
              Acme inc.
          
      </td>
      
  
      <td class="text-end w-50px align-middle">
          
              <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir ma candidature" data-bs-toggle="tooltip" href="/apply/[PK of JobApplication]/jobseeker/details?back_url=/apply/job_seeker/list%3Fdisplay%3Dtable">
                  <i aria-label="Voir ma candidature" class="ri-arrow-drop-right-line fs-lg"></i>
              </a>
          
      </td>
  </tr>
  
          
              
  
  
  
  
      
  
  
  <tr class="align-top">
      
      
          <td>
              <a class="btn-link" href="/apply/[PK of JobApplication]/jobseeker/details?back_url=/apply/job_seeker/list%3Fdisplay%3Dtable">
                  Acme inc.
              </a>
          </td>
      
  
      <td>27/11/2024</td>
      <td><span class="badge rounded-pill text-nowrap badge-xs bg-success" id="state_[PK of JobApplication]">Candidature acceptée</span></td>
  
      
  
      <td>
          
              
                  Candidature spontanée
              
          
      </td>
      <td>
          
              Vous
          
      </td>
      
  
      <td class="text-end w-50px align-middle">
          
              <a class="btn btn-sm btn-link btn-ico-only" data-bs-title="Voir ma candidature" data-bs-toggle="tooltip" href="/apply/[PK of JobApplication]/jobseeker/details?back_url=/apply/job_seeker/list%3Fdisplay%3Dtable">
                  <i aria-label="Voir ma candidature" class="ri-arrow-drop-right-line fs-lg"></i>
              </a>
          
      </td>
  </tr>
  
          
      </tbody>
  </table>
  
                  
              </div>
          
          
  
  
  
      
  </section>
  '''
# ---
# name: test_list_snapshot[empty]
  '''
  <section aria-labelledby="apply-list-count" id="job-applications-section">
      
          <div class="text-center my-3 my-md-4">
              <img alt="" class="img-fluid" loading="lazy" src="/static/img/illustration-siae-card-no-result.png"/>
              <p class="mb-1 mt-3">
                  <strong>
                      
                          Aucune candidature pour le moment
                      
                  </strong>
              </p>
              <p>
                  <i>
                      
                          Vous trouverez ici vos candidatures, émises par un prescripteur
                          <br class="d-none d-lg-inline"/>
                          ou par vous même.
                      
                  </i>
              </p>
              
                  <a class="btn btn-outline-primary btn-ico w-100 w-md-auto justify-content-center" href="/search/employers">
                      <i aria-hidden="true" class="ri-briefcase-line ri-lg fw-normal"></i>
                      <span>Rechercher un emploi inclusif</span>
                  </a>
              
          </div>
      
  </section>
  '''
# ---
# name: test_reset_filter_button_snapshot[off-canvas buttons in list view]
  '''
  <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
      <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">Voir</button>
      
  
  
      
  
  
      
          <a aria-label="Réinitialiser le filtre actif" class="btn btn-ico btn-block btn-outline-primary" href="/apply/job_seeker/list?display=list&amp;order=-created_at">
              <i aria-hidden="true" class="ri-eraser-line fw-medium"></i>
              <span>Effacer tout</span>
          </a>
      
  
  
  </div>
  '''
# ---
# name: test_reset_filter_button_snapshot[off-canvas buttons in table view & created_at ascending order]
  '''
  <div class="offcanvas-footer gap-3" id="offcanvasApplyFiltersButtons">
      <button class="btn btn-block btn-primary" data-bs-dismiss="offcanvas" type="button">Voir</button>
      
  
  
      
  
  
      
          <a aria-label="Réinitialiser le filtre actif" class="btn btn-ico btn-block btn-outline-primary" href="/apply/job_seeker/list?display=table&amp;order=created_at">
              <i aria-hidden="true" class="ri-eraser-line fw-medium"></i>
              <span>Effacer tout</span>
          </a>
      
  
  
  </div>
  '''
# ---
# name: test_reset_filter_button_snapshot[reset-filter button in list view]
  '''
  <div class="ms-md-auto" id="apply-list-filter-counter">
          
              <a aria-label="Réinitialiser le filtre actif" class="btn btn-ico btn-dropdown-filter" href="/apply/job_seeker/list?display=list&amp;order=-created_at">
                  <i aria-hidden="true" class="ri-eraser-line fw-medium"></i>
                  <span>Effacer tout</span>
              </a>
          
      </div>
  '''
# ---
# name: test_reset_filter_button_snapshot[reset-filter button in table view & created_at ascending order]
  '''
  <div class="ms-md-auto" id="apply-list-filter-counter">
          
              <a aria-label="Réinitialiser le filtre actif" class="btn btn-ico btn-dropdown-filter" href="/apply/job_seeker/list?display=table&amp;order=created_at">
                  <i aria-hidden="true" class="ri-eraser-line fw-medium"></i>
                  <span>Effacer tout</span>
              </a>
          
      </div>
  '''
# ---
